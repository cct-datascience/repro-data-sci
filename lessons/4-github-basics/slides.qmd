---
title: "GitHub"
format: revealjs
execute: 
  echo: true
engine: knitr
chalkboard: true
footer: "[Reproduciblity & Data Science in R](https://cct-datascience.github.io/repro-data-sci/)"
bibliography: references.bib
---

## Review & Homework

-   Ways to create a git repo

    -   run `git init` from the command line inside of project directory
    -   create a new RStudio project with "use git" checked
    -   run `usethis::use_git()` in the R console in a RStudio project

-   If you turned an existing project into a git repo, how did it go?

## Today's goals

1.  Learn how to tell git to ignore files
2.  Put a local repo on GitHub
3.  Use `git push` and `git pull` to synchronize with GitHub
4.  Use branches for new work

## Ignoring files

-   If you created an RStudio project with git enabled, you should have a top-level `.gitignore`

## Sharing with GitHub

![](github-diagram-bryan.png){fig-align="center" width="671"}

::: aside
Figure 2 from [@bryan2018]
:::

::: notes
-   All contributors have a local copy of the repo.
-   You might also have a copy in multiple places (on multiple computers, on university HPC).
-   GitHub has a central repo that allows you to synchronize and merge work from multiple sources.
-   You can also access the repo through github.com web UI
:::

## Resources

-   [happygitwithr.com](https://happygitwithr.com/)

-   [`usethis::use_github()`](https://usethis.r-lib.org/reference/use_github.html)

## Homework

Put a project repo on GitHub and share the link on Slack

## References

::: refs
:::
