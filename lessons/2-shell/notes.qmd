---
title: "Using the Shell"
format: html
---

## Objectives

- Understand the concept of the shell and the anatomy of a shell command
- Interact with the shell using common commands (`ls`, `pwd`, `cd`) 
- Find help via --help, man, and online help pages
- Navigate around their working directories using `ls`, `cd`
- (Optional) Create, copy,  move, and delete files/directories using `mkdir`, `nano`, `touch`, `mv`,  `cp`, `rm`.


## Lesson outline

- Review of last week
    - What happened as you were trying to re-organize projects or R code? Victories? Stumbling blocks?
- Slides: Intro to the shell
    - What is the shell?
    - What does the shell let us do?
    - Why would we want to learn how to use the shell?
- Breakout rooms: Shell installation
    - Instructor notes include links to git installation for both Mac and Windows.
    - Split into 2 breakout rooms to install on different OS's. 
- Break to all download shell-lesson-data
    - Link
    - Put it somewhere high in the file system (Desktop)
    - Unzip using command line unzip (or just point-and-click in computer file system?)
- Live coding: Intro to the terminal pane in RStudio
    - Quick tour of RStudio panes
        - Emphasize files pane, analogous to Finder/File Explorer
        - Navigate to shell-lesson-data
    - Everyone set up to use bash with Terminal pane
    - Show navigation to Current Directory in Terminal pane in RStudio
        - Make sure everyone ends up in shell-lesson-data
- Live coding: Unix Shell lesson 1
    - https://swcarpentry.github.io/shell-novice/01-intro
    - (a lot of the text the content of this lesson will  be covered in the slides section above)
    - Identify the prompt and note that it is different in zsh (%)
    - Introduce ls
    - Introduce `command not found`
    - Introduce general anatomy of a shell prompt (Slide/share image)
- Live coding: Unix Shell lesson 2
    - `pwd` and file systems
    - Using options and getting help
    - Navigating around file systems
- (Time-permitting) live coding: Unix Shell lesson 3
    - Creating directories
    - Creating and editing text files
    - Moving and renaming files and directories
    - Copying
    - Removing
    - Wildcards
- Homework for next session
    - Read <https://peerj.com/preprints/3159/>
git (Version control prep)
    - Create a diagram of your file system and note your most frequently used directories


## Installation & materials

1.  [Slides](slides.qmd)
2.  [macOS git installation](https://git-scm.com/download/mac)
3.  [Windows git installation](https://git-scm.com/download/win) (detailed step-by-step [here](https://carpentries.github.io/workshop-template/#setup))
4.  [Software Carpentry Unix Shell episode #1](https://swcarpentry.github.io/shell-novice/01-intro)
5.  [Software Carpentry Unix Shell episode #2](https://swcarpentry.github.io/shell-novice/02-filedir)
6.  [Software Carpentry Unix Shell episode #3](https://swcarpentry.github.io/shell-novice/03-create) (time permitting)

## Past notes

### Review

Ask students to share any successes or stumbling blocks when re-organizing projects or R code.

### Modifications

-   Use terminal window within RStudio as command line interface
    -   Start with a brief overview of RStudio panes
    -   Show terminal pane menu and "Go To Current Directory"
    -   Teach use of Files tab in RStudio
    -   Emphasize that Files tab is analogous to Finder (macOS), File Explorer (Windows)
-   Skip all exercises, including "Nelle" example
-   Mention Zsh, which is the default shell for recent versions of macOS and has `%` as the default prompt instead of `$`.
-   At beginning of episode #2, explain file path using example from instructor's file system
-   Can also use example diagram for file system using instructor's

### Teaching notes

-   Emphasize purposes for learning shell
    -   Helpful for using git and GitHub
    -   Easier to deal with installation problems
    -   Understanding file structure and file paths
-   Need to install git initially for Windows users to have shell commands
    -   Separate into 2 breakout rooms to install Git for Windows and macOS
-   macOS comes with Bash or Zsh for shell. Use time with mac users to check if they have git already
    -   can check with `which git` or `git --version`
    -   `git --version` may in fact prompt macOS users to install xcode command line tools, which comes with git.
    -   Restart RStudio after installation
    -   For Windows, open RStudio Tools/Global Options/Terminal and make sure GitBash is selected
    -   For macOS, have them select Bash (for now at least)
-   Download shell-lesson-data.zip to `Desktop/` location; this won't be referenced in later lessons
-   Unzipping shell-lesson-data.zip through point-and-click in the RStudio Files tab does not work consistently across machines; recommend unzipping on the command line with `unzip`
    -   Once unzipped, have everyone share absolute file path to location of file

### Homework

Read <https://peerj.com/preprints/3159/>
