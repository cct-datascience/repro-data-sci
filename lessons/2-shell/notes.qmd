---
title: "Using the Shell"
format: html
---

## Objectives


-   Understand the what and why of the shell
-   Use the shell to navigate your computer's file system
-   Use R projects to simplify file system navigation
-   Know your options for finding help

## Lesson outline

-   Review of last week
    -   What happened as you were trying to re-organize projects or R code? Victories? Stumbling blocks?
-   Slides: Intro to the shell
    -   What is the shell?
    -   What does the shell let us do?
    -   Why would we want to learn how to use the shell?
-   Breakout rooms: Shell installation
    -   Instructor notes include links to git installation for both Mac and Windows.
    -   Split into 2 breakout rooms to install on different OS's.
-   Break to all download shell-lesson-data
    -   Link
    -   Put it on your Desktop
    -   Unzip using point-and-click
-   Live coding: Setup RStudio
    -   Open RStudio
    -   Tour panes: files and  terminal
    -   Set up terminal pane to use bash
-   Live coding: Navigating filesystems in files pane
    -   Use file pane to navigate to shell-lesson-data
-   Live coding: Navigate to shell-lesson-data in Terminal 
    -   Identify the prompt and note that it is different in zsh (%)
    - `pwd`
    - `cd`
    - `ls`
        - Use `ls` flags to explain anatomy of a shell command
        - Show `man ls` to show flag options for the `ls` command
-   Live coding: Synchronizing file panes
    - Show "Go to current directory" to bring Terminal to files pane
    - Show "New terminal here" to create a terminal in files pane
    - Show that Rstudio's working directory is not automatically wherever either Terminal or the file pane is
- Live coding: using Rprojects to simplify filesystems
    - Create an R project
    - Show that, upon opening, Terminal, getwd(), and file pane are all on the same page
- Live coding: `cp` and `move`
    - Copy `shell_lesson_data` to the Rproject.
    - Tell them we need `cp`, then use `man cp` to get the options
    - Repeat using `ls` to explore contents of `shell_lesson_data` and mirror files pane
-   Live coding/discussion: options for finding help
    - `--help` flag
    - `man` pages
    - Manual pages: `?` in R, package websites
    - StackOverflow
    - ChatGPT
-   Homework for next session
    -   Read <https://peerj.com/preprints/3159/> git (Version control prep)
    -   Create a diagram of your file system and note your most frequently used directories

## Installation & materials

1.  [Slides](slides.qmd)
2.  [macOS git installation](https://git-scm.com/download/mac)
3.  [Windows git installation](https://git-scm.com/download/win) (detailed step-by-step [here](https://carpentries.github.io/workshop-template/#setup))
4.  [Software Carpentry Unix Shell episode #1](https://swcarpentry.github.io/shell-novice/01-intro)
5.  [Software Carpentry Unix Shell episode #2](https://swcarpentry.github.io/shell-novice/02-filedir)
6.  [Software Carpentry Unix Shell episode #3](https://swcarpentry.github.io/shell-novice/03-create) (time permitting)

## Past notes

### Review

Ask students to share any successes or stumbling blocks when re-organizing projects or R code.

### Modifications

-   Use terminal window within RStudio as command line interface
    -   Start with a brief overview of RStudio panes
    -   Show terminal pane menu and "Go To Current Directory"
    -   Teach use of Files tab in RStudio
    -   Emphasize that Files tab is analogous to Finder (macOS), File Explorer (Windows)
-   Skip all exercises, including "Nelle" example
-   Mention Zsh, which is the default shell for recent versions of macOS and has `%` as the default prompt instead of `$`.
-   At beginning of episode #2, explain file path using example from instructor's file system
-   Can also use example diagram for file system using instructor's

### Teaching notes

-   Emphasize purposes for learning shell
    -   Helpful for using git and GitHub
    -   Easier to deal with installation problems
    -   Understanding file structure and file paths
-   Need to install git initially for Windows users to have shell commands
    -   Separate into 2 breakout rooms to install Git for Windows and macOS
-   macOS comes with Bash or Zsh for shell. Use time with mac users to check if they have git already
    -   can check with `which git` or `git --version`
    -   `git --version` may in fact prompt macOS users to install xcode command line tools, which comes with git.
    -   Restart RStudio after installation
    -   For Windows, open RStudio Tools/Global Options/Terminal and make sure GitBash is selected
    -   For macOS, have them select Bash (for now at least)
-   Download shell-lesson-data.zip to `Desktop/` location; this won't be referenced in later lessons
-   Unzipping shell-lesson-data.zip through point-and-click in the RStudio Files tab does not work consistently across machines; recommend unzipping on the command line with `unzip`
    -   Once unzipped, have everyone share absolute file path to location of file

### Homework

Read <https://peerj.com/preprints/3159/>
