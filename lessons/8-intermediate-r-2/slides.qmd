---
title: "Intermediate R: iteration and mapping"
subtitle: "Session 8"
date: "2023-09-28"
date-format: long
format: uaz-revealjs
chalkboard: true
footer: "[Reproduciblity & Data Science in R](../../index.html)"
logo: "../../logo.png"
---

## Review

-   Were you able to find a section of your own code to update using `ifelse` or a function?

## Review

-   What ideas do you have about possible showcase projects?
-   What questions do you have about that?

## Warm-up: create a new branch for today's work

## Learning objectives

-   Understand how iterating can improve your code
-   Iterate using `for` loops
-   Iterate using `purrr`

## What do we mean by iteration?

## Iteration by hand

```         
my_first_site <- read.csv("data_first.csv")
my_second_site <- read.csv("data_second.csv")
my_third_site <- read.csv("data_third.csv")
...
```

## Why use code to iterate?

-   Less code: fewer bugs, easier to understand
-   Easier to apply to new situations
-   Faster to write, maybe faster to run

## Iteration 3 (or more!) ways

-   For loops
-   Functions + `purrr::map`

## Coding time: For loops

-   For loop
-   For loop with different indices

## For loops: pros and cons

-   Pros
    -   Simple to write and read
-   Cons
    -   Can be slow
    -   Still somewhat inefficient to write
    -   Still somewhat fragile

## `purrr::map`

-   Family of functions to "map" a function over a series of items
-   (Often) faster and (often) easier to read and write than a for loop

## Coding time

`purrr`

## Coding time

Commit this week's work and create a new PR.

## Homework

-   Identify a section of your code that could be made more efficient using a for loop or iterating using a function
-   Continue thinking about showcase projects.
