---
title: "Sharing Code & Getting Credit"
subtitle: "Session 10"
date: "2024-10-03"
date-format: long
format:
  uaz-revealjs:
    reference-location: section
    link-external-newwindow: true
    chalkboard: true
    logo: "../../logo.png"
    footer: "[Reproduciblity & Data Science in R](../../index.html)"
bibliography: references.bib
---

# Why share code?

## Papers with open code are cited more {.smaller}

![](maitner-et-al.png){fig-align="center" width="781"}

::: aside
Figure 2 from @maitner
:::

::: notes
Figure 2: Predicted impacts of code-sharing on cumulative citations.
Predicted values shown are for the mean Impact Factor (3.0) across the publications analyzed.
Fully open = open code and open-access publication; fully closed = closed-access publication and no publicly available code.
Predictions are based on estimated model coeficients (Table 2)
:::

## Getting credit for your code

Make it **easier** for people to cite your code

-   Provide a CITATION file on GitHub

-   Archive to get a digital object identifier (DOI)

-   Include DOI and/or citation in your paper's Data/Code Availability Statement

## CITATION.cff

::: incremental
-   Citation File Format are plain text files written in YAML

-   Adding a `CITATION.cff` file to your repo...

    -   Puts a "cite this repository" button on GitHub

    -   Helps code archive tools fill out metadata correctly when you archive your repo

-   Create a CITATION.cff file with this [helper](https://citation-file-format.github.io/cff-initializer-javascript/#/)

-   See example [here](https://github.com/cct-datascience/repro-data-sci/blob/main/CITATION.cff)
:::

## Options for archiving {.smaller}

| Service   | Versioned DOIs? | Free?                              | GitHub integration? | Notes                                             |
|---------------|---------------|---------------|---------------|---------------|
| Zenodo    | Yes             | Yes                                | Yes                 | Backed by CERN, built with code and data in mind  |
| Dryad     | Yes             | No, but some publishers cover cost | No                  | Intended for data, not code. Partners with Zenodo |
| Figshare  | Yes             | Yes                                | Yes                 | Can't choose your license                         |
| UA ReDATA | Yes             | Yes (for UA researchers)           | No                  | University of Arizona Libraries                   |

::: aside
More detailed comparisons [here](https://www.agu.org/-/media/Files/Publications/Generalist-Data-Repository-Grid.pdf)
:::

## Zenodo Archiving Demo

1.  Log in to sandbox.zenodo.org using GitHub[^1]
2.  In drop-down menu with your username, select "GitHub"
3.  Find your repo in the list and flip the switch next to it
4.  Go to your repo on GitHub and make a release
5.  On sandbox.zenodo.org, get markdown to add a badge to README.md

::: notes
Demo archiving a repo with sandbox.zenodo.org and have everyone follow along with the repo they've been using for notes.
:::

## Reproducible computational environments

Congrats!
Your code is reproducible!
But what about ....

::: incremental
-   in 3 years when an R package is updated with breaking changes?

-   on a different operating system with different versions of system libraries?
:::

. . .

Capture the **computational environment** for ultimate reproducibility

## Reproducible Environments With `renv`

-   The [`renv` package](https://rstudio.github.io/renv/articles/renv.html) records R packages and their versions used in your project

-   Projects are isolated with their own set of packages

-   Can restore exact versions of packages recorded

## Using `renv`

::: callout-tip
## Exercise

Install `renv` and activate it for a project with `renv::init()`.
Inspect the files that were created.
:::

. . .

::: callout-tip
## If you change your mind ...

To deactivate `renv`, run `renv::deactivate()`.
To also remove all the files it created, run `renv::deactivate(clean = TRUE)` instead.
:::

::: notes
Briefly discuss the contents of `renv.lock`, `.Rprofile`, and `renv/`.
Point out `renv/.gitignore` â€” trust it about which files should go on GitHub.
:::

## Limitations of `renv`

-   Only tracks R packages [^2]

-   Can't reproduce operating system or system libraries

-   Sometimes quite annoying to use (but it's getting better!)

## Reproducible Everything with Docker

Docker containers...

::: incremental
-   Are isolated "virtual machines"

-   Run Linux regardless of the host machine OS

-   Can be built with specific versions of OS, system libraries, and R packages (using `renv`)

-   Can be downloaded and run from the command line
:::

## Making a Docker Container

A **Dockerfile** holds instructions on what to install and what code to run.
Actually creating a Docker container is beyond the scope of this workshop, but you can [learn how](https://www.r-bloggers.com/2019/02/running-your-r-script-in-docker/)!

``` docker
# Base image https://hub.docker.com/u/rocker/
FROM rocker/r-base:latest

## create directories
RUN mkdir -p /01_data
RUN mkdir -p /02_code
RUN mkdir -p /03_output

## copy files
COPY /02_code/install_packages.R /02_code/install_packages.R
COPY /02_code/myScript.R /02_code/myScript.R

## install R-packages
RUN Rscript /02_code/install_packages.R
```

## Hold up, what *is* reproducibility again?

There is a reproducibility **trade-off** for using `renv` and Docker---robust computational reproducibility **but** harder for novices to reproduce

. . .

If you use these tools, provide:

-   Instructions on how to run code
-   Where to go for help troubleshooting
-   Ways to access your code *without* extra layers

## Resources

-   [Reproducible computational environments with Docker](https://reproducibility.rocks/materials/day4/01-docker/)

-   [`renv` website](https://rstudio.github.io/renv/articles/renv.html)

-   [CFF INIT helper](https://citation-file-format.github.io/cff-initializer-javascript/#/)

## Next week

-   Tuesday 10/18: **Drop-in co-working session**.

    -   Come and work on your reproducibility colloquium project/presentation

-   Thursday 10/10: **Reproducibility Colloquium!**

    -   Invite your lab-mates, PI, friends!

## References

::: refs
:::

[^1]: sandbox.zenodo.org is just for practice.
    Use zenodo.org when you're ready to get a *real* DOI!

[^2]: `renv` can also be set up to track [Python dependencies](https://rstudio.github.io/renv/articles/python.html)
