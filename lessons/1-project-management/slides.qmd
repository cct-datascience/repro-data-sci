---
title: "Reproducibility & Data Science in R"
subtitle: "Session 1"
date: "2024-09-03"
date-format: long
format: uaz-revealjs
chalkboard: true
footer: "[Reproduciblity & Data Science in R](../../index.html)"
logo: "../../logo.png"
bibliography: references.bib
---

## What is Reproducibility & Why?

```{=html}
<textarea id="freeform" name="freeform" rows="8" cols="60" style="font-size: 18pt">
Reproducibility is...

</textarea>
```
```{=html}
<textarea rows="8" cols="60" style="font-size: 18pt">
I want my work to be reproducible because...

</textarea>
```
## 

[![By The Turing Way Community](https://the-turing-way.netlify.app/_images/reproducible-matrix.jpg)](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions)

## The Whole Picture

::: callout-note
## A (usually fiction) story:

You read a paper and think "I bet I could apply their analysis methods to my work!" You click a DOI link in their Data Availability section.
It opens to a web page where you can download a folder with R code, data, and documentation.
You open the folder in R Studio and you are prompted to install all the packages you need to run the code.
You open the analysis code script and hit "run".
All the code runs perfectly with no errors, creating all the figures, tables, and statistics used in the paper.
You scroll through the well-formatted R code and understand from the authors' comments exactly what the code does and how to adapt it to your work.
:::

. . .

We want to help you make this story a reality for someone!

::: notes
Including future you!
:::

## Syllabus & Workshop Materials

Workshop series website:\
<https://cct-datascience.github.io/repro-data-sci/>

## Reproducibility Colloquium

Format: short talks on one or two ways you've improved a project

***Your task for this week:***

-   Pick a *real* project to give a "reproducibility renovation" over the next 5 weeks

-   Every week, you'll make improvements and document your progress for your talk

::: notes
Take before and after screenshots!
Keep track of every time you thank your past self!
:::

## Screen Setup {{< fa desktop >}} {{< fa laptop >}} {.smaller}

-   Dual monitors will be *very* helpful
-   Virtual desktops ("Spaces" in macOS) also helpful
-   Let us know if you do not have access to a second monitor

![](desk.jpg){fig-alt="Photo of a desk with a laptop on a laptop stand to the left and a larger monitor to the right in front of an external keyboard.  Laptop monitor has Zoom open and the larger monitor has RStudio open." fig-align="center"}

# Creating a Research Compendium

## Learning Objectives

1.  Understand the benefits of organizing a project as a research compendium
2.  Use RStudio projects to create self-contained reproducible projects
3.  Use best practices for organizing files in a project
4.  **Create a "toy" research compendium you can use throughout this series**

::: notes
Clarify that learners will have 1) their *real* project that they are improving and taking notes on for the reproducibility colloquium **and** 2) a *toy* project that they'll come back to every tuesday and thursday
:::

## 

> A research compendium is a collection of all digital parts of a research project including data, code, texts (protocols, reports, questionnaires, meta data).
> The collection is created in such a way that reproducing all results is straightforward.
>
> — [The Turing Way](https://book.the-turing-way.org/reproducible-research/compendia)

## Research Compendium Best Practices

::: incremental
-   Treat raw data as read-only

-   Use scripts to "clean" and wrangle data

-   Treat generated outputs as disposable

-   Put data, code, and outputs in different folders
:::

## Basic compendium structure {.smaller}

::: columns
::: {.column width="40%"}
![](compendium-basic.png){width="398"}
:::

::: {.column width="60%"}
::: incremental
-   Short machine and human readable name
-   Separate folders for "raw" and "clean" data
-   `gdd-thresholds.Rproj` file is created by RStudio
-   `R/` folder contains all code to reproduce analysis. Could be named `scripts/` or something else
-   R scripts are numbered with two digits so alphabetic sorting = numeric sorting
-   README.md is a markdown (plain text) document (we'll get to README's later)
:::
:::
:::

## RStudio projects

-   Never worry about `setwd()` or `getwd()` again! Your compendium is *always* your working directory.
-   Switch between many active projects. RStudio remembers where you left off.

DEMO: create a new RStudio Project

## Build your (toy) research compendium

Using the RStudio file pane

-   Create folders for `data/`, `R/`, `output/` and `notes/`
-   Create a blank file called `README.md`

## Settings for Success

::: columns
::: {.column width="60%"}
![](rstudio-settings.png){fig-alt="image of RStudio global settings pane with the \"Workspace\" and \"History\" sections highlighted.  None of the boxes are checked and the dropdown for \"Save workspace to .RData on exit\" is set to \"never\"" fig-align="left"}
:::

::: {.column width="40%"}
::: incremental
-   Fresh start ensures reproducibility

-   Use Session \> Restart R to check reproducibility

-   If long-running code is a concern, there are better solutions
:::
:::
:::

# Getting Help

## Getting Help

Every week, we'll try to point you to places to look for help when you're stuck

Our Slack channel is a great place to start!

For help with the RStudio IDE, the [Posit Community](https://forum.posit.co/) forum is a good place to start

## A note on AI

-   There are an abundance of AI tools that can generate code, explain code, or suggest code improvements

-   Generative AI has been described as "hallucinating", "a stochastic parrot"[^1], and even a "bullshit machine"
    [^2]

-   It has been argued that this propensity to make things up is "a feature, not a bug"

## A note on AI

-   Beginners have difficulty spotting mistakes in AI generated code solutions[^3]

-   Struggling and frustration are important parts of learning—short circuiting these steps does you a disservice in the long run

-   AI presents a host of ethical[^4], environmental[^5], and legal issues to conside
    r

## Takeaways

::: incremental
-   Structure files in self-contained projects or "research compendia"
-   Put data in a separate folder and never edit raw data!
-   Avoid `setwd()` and `getwd()`---use relative paths and RStudio projects instead
-   Naming things well is difficult but worth spending time on
-   Use some consistent style in your code and organize scripts in sections
-   Split long scripts into multiples and use `source()` to run them if needed'
:::

## Your Tasks

-   Choose a project you will focus on for your "reproducibility renovation"
-   Does your project follow the file naming and organizations strategies we discussed?
-   If not, re-organize and re-name to improve it.

[^1]: <https://en.wikipedia.org/wiki/Stochastic_parrot>

[^2]: @hicks2024

[^3]: <https://www.theregister.com/2023/08/07/chatgpt_stack_overflow_ai/>

[^4]: <https://mashable.com/article/chat-gpt-open-ai-workers-exploitation>

[^5]: <https://www.technologyreview.com/2023/12/05/1084417/ais-carbon-footprint-is-bigger-than-you-think/>
