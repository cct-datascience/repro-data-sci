---
title: "Project Management and Coding Best Practices"
format: html
---

## Objective

Learners will learn about and practice managing their projects using file structure and RStudio projects, and about current best practices and style guides for R coding.

## Lesson Outline

-   Introductions
-   Discuss reproducibility
-   Give tour of course website & syllabus
    -   Point out code of conduct
-   Screen setup
-   Don't save or load .RData!
-   Discuss general best practices for research compendia
    -   All files needed for a project in the same folder (ideally)
    -   Organize data, code, and outputs into different folders at a minimum
    -   Never edit raw data
    -   Include documentation on what each file is/does in a README
-   Live Coding: create an R project and add [gapminder data](https://swcarpentry.github.io/r-novice-gapminder/data/gapminder_data.csv) to it
    -   Show file pane & connect to Windows Explorer / Finder
    -   Show how to make a file read-only
    -   Demo closing, opening, and switching projects
-   Live Coding: R code best practices
    -   Create `01-wrangle-data.R` in `R/`
    -   Header comment
    -   Don't use `setwd()`---not needed with .Rproj. Use relative paths!
    -   Keyboard shortcut for adding sections + outline view and navigator at bottom of script panel
    -   Load packages at top of script, even when not used until later
    -   Restart R and run from top often
    -   How to break up code (e.g. save output of `01-wrangle-data.R` into `data_clean/`, then read that in later)
-   Homework:
    -   Apply one or more of the organizing principles of a research compendium to an existing research project.

## Installation & materials

1.  [Slides](slides.qmd)
2.  [Software Carpentry Introduction to R and RStudio episode](https://swcarpentry.github.io/r-novice-gapminder/01-rstudio-intro)
3.  [Software Carpentry Project Management with RStudio episode](https://swcarpentry.github.io/r-novice-gapminder/02-project-intro)
4.  [Software Carpentry Best Practices for Writing R Code](http://swcarpentry.github.io/r-novice-inflammation/06-best-practices-R)
5.  <https://r4ds.hadley.nz/workflow-style>

## Notes from before

### Modifications

-   RStudio
    -   Can skip most of the Introduction to R and RStudio lesson, but may be helpful as a refresher.
    -   Focus on setting up RStudio for reproducibility---don't save or restore workspace, restart R session often.
    -   Show command palette with {{< kbd mac=Cmd-Shift-P win=Control-Shift-P >}}
-   Project management
    -   Do "Best practices for project organization" including yellow "Tip: Good Enough Practices for Scientific Computing" box
    -   Then "A possible solution" section about R projects
    -   Include splitting scripts up into modular chunks to promote reproducibility and avoiding rerunning time-intensive data cleaning
-   Coding best practices
    -   Condensed into a [single slide](https://docs.google.com/presentation/d/1WNNHQtzq2IUMA0RPz9pwgDCTMLzMIxqQhQsTuR0m_BY/edit#slide=id.geda00d7b2c_0_0)

## Teaching notes

-   Include how R projects promotes reproducibility, by being able to save scripts and close them or entire project
-   When students download data, they will need to move it into the new project which helps mentally connect file pane of RStudio with filesystem of computer

## Homework

Apply one or more of the organizing principles of a research compendium to an existing research project.
