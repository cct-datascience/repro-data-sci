---
title: "Version Control With `git`"
subtitle: "Session 3"
format: revealjs
chalkboard: true
footer: "[Reproduciblity & Data Science in R](../../index.html)"
---

# Review 1

What stood out to you when (if) you diagrammed your file system?

# Review 2 {.smaller}

![](/lessons/2-shell/file-structure-example.png)

If your current working directory is `Users/kristinariemer/Dropbox/Documents`, what command could be used to change directory into the local Documents folder?

# Learning objectives

-   Understand the what and why of version control
-   Set up git on your computer
-   Create a git repository associated with an R project
-   Use git to track and record changes to a git repository
-   Use .gitignore to selectively exclude files from git.

## 

::: columns
::: {.column width="50%"}
[Version Control]{.r-fit-text}

Semi-automated system for tracking changes with unlimited "undo"
:::

::: {.column width="50%"}
![](phd_final.jpg){fig-align="center" width="449"}
:::
:::

## Why Learn Version Control?

-   Track development of research projects like a lab notebook

-   Keep project in sync across computers including HPC

-   Share and collaborate on projects in a sane way

## Setting up `git` (once per machine)

We installed git last week, so you should be ready to set it up!

``` {.bash filename="Shell"}
git config --global user.name "Your Name"
git config --global user.email "youremail@arizona.edu" 
# Use your GitHub associated email
```

# Coding time

`git config`

# Coding time

Create an RStudio project and initialize it as a git repository.

Use git status to check the state of the repo.

# Coding time

Track modifications to a git repository.

## Saving modifications: a two-step process

![](git-simple.png)

## Adding multiple files to same commit

![](git-multiple.png)

# Coding time

`.gitignore`

# Homework

-   Create a [GitHub](https://github.com) account if you don't have one.
-   Optional: Identify an exisitng folder on your computer and turn it into a git repository.
