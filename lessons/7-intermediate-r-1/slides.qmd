---
title: "Intermediate R: functions and control flow"
subtitle: "Session 7"
format: uaz-revealjs
chalkboard: true
footer: "[Reproduciblity & Data Science in R](../../index.html)"
---

# Review

# Warm-up: update working branch from upstream

# Learning objectives

-   Understand how functions and `ifelse` logic can improve code
-   Write your own functions to automate procedures in R
-   Write `ifelse` statements to orchestrate control flow in R
-   Practice working collaboratively in GitHub

# Part I: Functions

# What are functions in R?

-   We use pre-written functions constantly.
-   Automated "recipes" for executing code
-   Inputs ("arguments") and outputs

# Why write our own functions?

-   Avoid repetition (+ mistakes)
-   Enhance portability + reproducibility

# Coding time

Writing a function

# Coding time

Function scoping

# Coding time

Arguments: defaults and naming

# Part II: `ifelse`

# `ifelse` logic

-   What does an `if` statement do?

# Applications in our work

-   Can you think of an instance where you might want to use `ifelse` logic?

# Conditionals in R

-   `==` for "is equal to"
-   `!=` for "not equal to:
-   `<`, `>` for less than/greater than
-   `<=`, `>=` for less than or equal to/greater than or equal to
-   `is.na()` for is it NA?
-   `%in%` for, is this value in a vector of possibilities
-   ...and more!

# Coding time

Practice with conditionals in R

# Coding time

Building if/else statements with conditionals

# Coding time

Nesting conditionals

# Coding time

Practice committing changes and creating a PR.

# Homework

-   Identify a section of your code that could be turned into a function or benefit from conditionals. Try it!
-   Begin thinking about a "showcase project".

# Showcase projects

-   An opportunity to apply workshop skills to your own work.
-   You could apply different parts to different projects, or more integratively to one single project.
-   Optional, but encouraged!

# Some inspirations

-   Turn the project folder for one of your current research project into a git/GitHub repo and/or R project
-   Modify an R script to use functions, conditionals, or best-practices for code formatting
-   Improve directory organization for project or your entire computer!
