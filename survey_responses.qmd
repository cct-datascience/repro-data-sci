---
title: "Survey Responses"
execute: 
  echo: false
---

Programatically wrangle and visualize responses from Fall workshop series survey.

::: callout-warning
This script will need modification if the questions in the survey are modified!
:::

```{r setup}
#| include: false
library(googlesheets4)
library(tidyverse)
library(patchwork)
library(tm)
library(wordcloud2)
```

```{r read}
#| include: false
id <- "17qYb67tSPDO_1hqlBJ-B563DvuB2PFoxBFVA9MRcU5E"
responses_raw <- read_sheet(id, sheet = 1, col_types = "c")
```

```{r colnames}
questions <- colnames(responses_raw)
# questions

colnames(responses_raw) <-
  questions |> 
  str_replace("Timestamp", "datetime") |> 
  str_replace("Which workshop series did you attend\\?", "year") |> 
  str_replace("How many sessions did you attend synchronously\\?", "num_sync") |> 
  str_replace("How many sessions did you attend asynchronously\\?", "num_async") |> 
  str_replace("Please enter a unique identifier as follows: Number of siblings \\(as numeric\\) \\+ First two letters of the city you were born in \\(lowercase\\) \\+ First three letters of your current street \\(lowercase\\)\\.", "id") |> 
  str_replace("Which department are you affiliated with\\?", "department") |> 
  str_replace("If you answered 'Other' in the previous question, write your department name below\\.", "department_other") |> 
  str_replace("On a scale of 1 to 5, what was your ability to complete the following tasks prior to the workshop: ", "pre_ability_") |> 
  str_replace("On a scale of 1 to 5, what was your level of understanding while completing the following tasks prior to the workshop \\(if you could not do the task at all, select option 1\\): ", "pre_understand_") |> 
  str_replace("On a scale of 1 to 5, what is your ability to complete the following tasks now: ", "post_ability_") |> 
  str_replace("On a scale of 1 to 5, what is your level of understanding about these tasks now \\(if you can not do the task at all, select option 1\\): ", "post_understand_") |> 
  str_replace("\\[Navigate around filesystem using shell commands\\]", "shell") |> 
  str_replace("\\[Use relative/absolute files paths to change working directory\\]", "paths") |> 
  str_replace("\\[Track changes to code using git\\]", "git") |> 
  str_replace("\\[Share your code using a GitHub repo\\]", "githubShare") |> 
  str_replace("\\[Use someone else's code from GitHub\\]", "githubUse") |> 
  str_replace("\\[Organize and name files/folders for a research project\\]", "compendium") |> 
  str_replace("\\[Remove rows from dataset based on criteria \\(e.g., NAs\\)\\]", "filter") |> 
  str_replace("\\[Reformat dataset from wide to long \\(e.g., for plotting\\)\\]", "pivot") |> 
  str_replace("\\[Write your own R function\\]", "function") |> 
  str_replace("\\[Repeat a task efficiently with a for loop\\]", "iterate") |> 
  str_replace("\\[Describe project repository with a README.md\\]", "readme") |> 
  str_replace("\\[Combine descriptive text and R code using Quarto\\]", "quarto") |> 
  str_replace("Which of the following tools that we covered during the workshop have you already incorporated into your research that you were not using prior to the workshop\\?", "useAlready") |> 
  str_replace("Which of the following tools that we covered during the workshop do you plan to incorporate into your research within six months after the last workshop session\\?", "usePlanned") |> 
  str_replace("If you selected any of the options in the previous question, please give one concrete example of how you will implement one of these tools in your research\\.", "useExample") |> 
  str_replace("Please share one suggestion you have for improving this workshop series\\.", "suggestion") |> 
  str_replace("What topics would you like to see included in future workshops\\?", "futureTopics")

names(questions) <- colnames(responses_raw)
# questions
question_legend <- enframe(questions) |> 
  rename(colname = name, question_long = value) |> 
  filter(str_starts(colname, "(pre|post)_")) |> 
  separate(colname, into = c("pre_post", "ability_understand", "question"),
           sep = "_") |> 
  mutate(question_short = question_long |> 
           str_remove("On a scale of 1 to 5, .+: ") |> 
           str_remove_all("[\\[\\]]"))

  
```

```{r format}
responses <- responses_raw |> 
  mutate(department = if_else(department == "Other", department_other, department)) |> 
  select(-department_other) |> 
  mutate(across(c(year, starts_with("num_"), starts_with("pre_"), starts_with("post_")), parse_number))
```

#### Question Legend

```{r}
question_legend |> 
  summarize(question = first(question), question_short = first(question_short), .by = question) |> 
  knitr::kable()
```

```{r}
resp_likert <- 
  responses |> 
  select(year, starts_with("pre_"), starts_with("post_")) |> 
  pivot_longer(-year, names_sep = "_", names_to = c("pre_post", "ability_understand", "question"), values_to = "score") |> 
  summarize(score_median = median(score), n = n(), .by = c(year, pre_post, ability_understand, question)) |> 
  mutate(pre_post = factor(pre_post, levels = c("pre", "post"))) |> 
  mutate(question = fct_inorder(question))

```

## 2022 (n = `r nrow(filter(responses, year == 2022))`)

### Pre vs. post self-assessment

```{r}
resp_likert |> 
  filter(year == 2022, ability_understand == "ability") |>  
  ggplot(aes(x = question, y = score_median, fill = pre_post)) +
  geom_col(position = "dodge") +
  labs(
    title = "2022 Self-Rated Ability",
    fill = "pre/post workshop",
    y = "Median Score (1-5)",
    x = ""
  )+
  theme(axis.text.x.bottom = element_text(angle = 45, hjust = 1))

```

```{r}
resp_likert |> 
  filter(year == 2022, ability_understand == "understand") |>  
  ggplot(aes(x = question, y = score_median, fill = pre_post)) +
  geom_col(position = "dodge") +
  labs(
    title = "2022 Self-Rated Understanding",
    fill = "pre/post workshop",
    y = "Median Score (1-5)",
    x = ""
  )+
  theme(axis.text.x.bottom = element_text(angle = 45, hjust = 1))
```

### Free Response

```{r}
#| output: asis
cat("#### ", questions[["useAlready"]])
```

```{r}
responses |> 
  filter(year == 2022) |> 
  select(useAlready) |> 
  separate_longer_delim(useAlready, delim = ", ") |> 
  count(useAlready) |> 
  arrange(desc(n)) |> 
  knitr::kable()
```

```{r}
#| output: asis
cat("#### ", questions[["usePlanned"]])
```

```{r}
responses |> 
  filter(year == 2022) |> 
  select(usePlanned) |> 
  separate_longer_delim(usePlanned, delim = ", ") |> 
  count(usePlanned) |> 
  arrange(desc(n)) |> 
  knitr::kable()
```

```{r}
#| output: asis
cat("#### ", questions[["useExample"]])
```

```{r}
#| output: asis
ex2022 <- responses |> 
  filter(year == 2022) |> 
  pull(useExample)
glue::glue("- {ex2022}")
```

## 2023 (n = `r nrow(filter(responses, year == 2022))`)

### Pre vs. post self-assessment

```{r}
resp_likert |> 
  filter(year == 2023, ability_understand == "ability") |>  
  ggplot(aes(x = question, y = score_median, fill = pre_post)) +
  geom_col(position = "dodge") +
  labs(
    title = "2023 Self-Rated Ability",
    fill = "pre/post workshop",
    y = "Median Score (1-5)",
    x = ""
  )+
  theme(axis.text.x.bottom = element_text(angle = 45, hjust = 1))

```

```{r}
resp_likert |> 
  filter(year == 2023, ability_understand == "understand") |>  
  ggplot(aes(x = question, y = score_median, fill = pre_post)) +
  geom_col(position = "dodge") +
  labs(
    title = "2023 Self-Rated Understanding",
    fill = "pre/post workshop",
    y = "Median Score (1-5)",
    x = ""
  )+
  theme(axis.text.x.bottom = element_text(angle = 45, hjust = 1))
```

### Free Response

```{r}
#| output: asis
cat("#### ", questions[["useAlready"]])
```

```{r}
responses |> 
  filter(year == 2023) |> 
  select(useAlready) |> 
  separate_longer_delim(useAlready, delim = ", ") |> 
  count(useAlready) |> 
  arrange(desc(n)) |> 
  knitr::kable()
```

```{r}
#| output: asis
cat("#### ", questions[["usePlanned"]])
```

```{r}
responses |> 
  filter(year == 2023) |> 
  select(usePlanned) |> 
  separate_longer_delim(usePlanned, delim = ", ") |> 
  count(usePlanned) |> 
  arrange(desc(n)) |> 
  knitr::kable()
```

```{r}
#| output: asis
cat("#### ", questions[["useExample"]])
```

```{r}
#| output: asis
ex2023 <- responses |> 
  filter(year == 2023) |> 
  pull(useExample)
glue::glue("- {ex2023}")
```
