[
  {
    "objectID": "survey_responses.html",
    "href": "survey_responses.html",
    "title": "Survey Responses",
    "section": "",
    "text": "Programatically wrangle and visualize responses from Fall workshop series survey."
  },
  {
    "objectID": "survey_responses.html#n-6",
    "href": "survey_responses.html#n-6",
    "title": "Survey Responses",
    "section": "2022 (n = 6)",
    "text": "2022 (n = 6)\n\nPre vs. post self-assessment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFree Response\n\nWhich of the following tools that we covered during the workshop have you already incorporated into your research that you were not using prior to the workshop?\n\n\n\n\n\nuseAlready\nn\n\n\n\n\nTerminal window in RStudio\n5\n\n\nRMarkdown\n4\n\n\nRStudio Projects\n4\n\n\ngit\n4\n\n\nGitHub\n3\n\n\nR functions\n3\n\n\nggplot2\n3\n\n\nREADME\n2\n\n\ndplyr\n2\n\n\nfor loops / apply functions\n2\n\n\nif statements\n1\n\n\n\n\n\n\n\nWhich of the following tools that we covered during the workshop do you plan to incorporate into your research within six months after the last workshop session?\n\n\n\n\n\nusePlanned\nn\n\n\n\n\nGitHub\n5\n\n\ngit\n5\n\n\nR functions\n4\n\n\nif statements\n4\n\n\nRStudio Projects\n3\n\n\ndplyr\n3\n\n\nfor loops / apply functions\n3\n\n\nggplot2\n3\n\n\nREADME\n2\n\n\nRMarkdown\n2\n\n\nTerminal window in RStudio\n2\n\n\n\n\n\n\n\nIf you selected any of the options in the previous question, please give one concrete example of how you will implement one of these tools in your research.\n\nI’m hoping to use GitHUB with collaboration with another team and for potential publications. I have no previous experience with git or GitHUB and still need practice. At the very least, this is something that I am starting to understand enough to pursue and engage with in the future.\nI have converted R scripts for a couple of projects into R.projects. It’s more organized now and easier to navigate the different folders.\nWe have certain datasets that we consistently use across multiple projects and updates where there are some straightforward data cleaning tasks– I’m planning to write a few functions to further systematize some of our data cleaning (instead of copy-pasting cleaning code which has been my practice up until now).\nI created an RStudio project for my thesis work and will primarily manipulate and manage my data through R.\nI share a gitlab repo with my coworkers.\nI am actually using R markdown to document my data analysis steps for my upcoming papers."
  },
  {
    "objectID": "survey_responses.html#n-6-1",
    "href": "survey_responses.html#n-6-1",
    "title": "Survey Responses",
    "section": "2023 (n = 6)",
    "text": "2023 (n = 6)\n\nPre vs. post self-assessment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFree Response\n\nWhich of the following tools that we covered during the workshop have you already incorporated into your research that you were not using prior to the workshop?\n\n\n\n\n\nuseAlready\nn\n\n\n\n\nGitHub\n3\n\n\ndplyr\n3\n\n\nQuarto\n2\n\n\nREADME\n2\n\n\nRStudio Projects\n2\n\n\nTerminal window in RStudio\n2\n\n\ngit\n2\n\n\nif statements\n2\n\n\nR functions\n1\n\n\nfor loops / map functions\n1\n\n\n\n\n\n\n\nWhich of the following tools that we covered during the workshop do you plan to incorporate into your research within six months after the last workshop session?\n\n\n\n\n\nusePlanned\nn\n\n\n\n\nQuarto\n6\n\n\nR functions\n6\n\n\nfor loops / map functions\n6\n\n\nif statements\n6\n\n\nGitHub\n4\n\n\nREADME\n4\n\n\nRStudio Projects\n4\n\n\nTerminal window in RStudio\n4\n\n\ndplyr\n4\n\n\ngit\n4\n\n\n\n\n\n\n\nIf you selected any of the options in the previous question, please give one concrete example of how you will implement one of these tools in your research.\n\nI have RNA-se data for different treatments. Using functions and for loops will help me analyze data faster and in a reproducible way. And using quarto will help me keep all the information at one place.\nusing github to track changes & not have multiple versions of rscripts saved, getting data/code publication ready\nI will clean/wrangle my data using dplyr\nI would like to introduce Quarto to my team in order to keep research compendiums more organized.\nI have been sharing code on github with my mentor\nConvert to Quarto for document my analysis."
  },
  {
    "objectID": "lessons/1-project-management/slides.html#what-is-reproducibility-why",
    "href": "lessons/1-project-management/slides.html#what-is-reproducibility-why",
    "title": "Reproducibility & Data Science in R",
    "section": "What is Reproducibility & Why?",
    "text": "What is Reproducibility & Why?\nReproducibility is...\n\n\nI want my work to be reproducible because..."
  },
  {
    "objectID": "lessons/1-project-management/slides.html#section",
    "href": "lessons/1-project-management/slides.html#section",
    "title": "Reproducibility & Data Science in R",
    "section": "",
    "text": "By The Turing Way Community"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#the-whole-picture",
    "href": "lessons/1-project-management/slides.html#the-whole-picture",
    "title": "Reproducibility & Data Science in R",
    "section": "The Whole Picture",
    "text": "The Whole Picture\n\n\n\n\n\n\nA (usually fictional) story:\n\n\nYou read a paper and think “I bet I could apply their analysis methods to my work!” You click a DOI link in their Data Availability section. It opens to a web page where you can download a folder with R code, data, and documentation. You open the folder in R Studio and you are prompted to install all the packages you need to run the code. You open the analysis code script and hit “run”. All the code runs perfectly with no errors, creating all the figures, tables, and statistics used in the paper. You scroll through the well-formatted R code and understand from the authors’ comments exactly what the code does and how to adapt it to your work.\n\n\n\n\nWe want to help you make this story a reality for someone!\n\nIncluding future you!"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#syllabus-workshop-materials",
    "href": "lessons/1-project-management/slides.html#syllabus-workshop-materials",
    "title": "Reproducibility & Data Science in R",
    "section": "Syllabus & Workshop Materials",
    "text": "Syllabus & Workshop Materials\nWorkshop series website:\nhttps://cct-datascience.github.io/repro-data-sci/"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#reproducibility-colloquium",
    "href": "lessons/1-project-management/slides.html#reproducibility-colloquium",
    "title": "Reproducibility & Data Science in R",
    "section": "Reproducibility Colloquium",
    "text": "Reproducibility Colloquium\nFormat: short talks on one or two ways you’ve improved a project\nYour task for this week:\n\nPick a real project to give a “reproducibility renovation” over the next 5 weeks\nEvery week, you’ll make improvements and document your progress for your talk\n\n\nTake before and after screenshots! Keep track of every time you thank your past self!"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#screen-setup",
    "href": "lessons/1-project-management/slides.html#screen-setup",
    "title": "Reproducibility & Data Science in R",
    "section": "Screen Setup  ",
    "text": "Screen Setup  \n\nDual monitors will be very helpful\nVirtual desktops (“Spaces” in macOS) also helpful\nLet us know if you do not have access to a second monitor"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#learning-objectives",
    "href": "lessons/1-project-management/slides.html#learning-objectives",
    "title": "Reproducibility & Data Science in R",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nUnderstand the benefits of organizing a project as a research compendium\nUse RStudio projects to create self-contained reproducible projects\nUse best practices for organizing files in a project\nCreate a “toy” research compendium you can use throughout this series\n\n\nClarify that learners will have 1) their real project that they are improving and taking notes on for the reproducibility colloquium and 2) a toy project that they’ll come back to every Tuesday and Thursday"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#section-1",
    "href": "lessons/1-project-management/slides.html#section-1",
    "title": "Reproducibility & Data Science in R",
    "section": "",
    "text": "A research compendium is a collection of all digital parts of a research project including data, code, texts (protocols, reports, questionnaires, meta data). The collection is created in such a way that reproducing all results is straightforward.\n— The Turing Way\n\n\n(“project” could be a single manuscript or multiple manuscripts that use the same data or code—that’s up to you to decide)"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#research-compendium-best-practices",
    "href": "lessons/1-project-management/slides.html#research-compendium-best-practices",
    "title": "Reproducibility & Data Science in R",
    "section": "Research Compendium Best Practices",
    "text": "Research Compendium Best Practices\n\n\nTreat raw data as read-only\nUse scripts to “clean” and wrangle data\nTreat generated outputs as disposable\nPut data, code, and outputs in different folders\n\n\n\nA couple reasons to use scripts over, say, Excel: the cleaning steps are the code; avoid introducing errors by opening things in Excel with it’s eager auto-formatting."
  },
  {
    "objectID": "lessons/1-project-management/slides.html#what-goes-in-a-compendium",
    "href": "lessons/1-project-management/slides.html#what-goes-in-a-compendium",
    "title": "Reproducibility & Data Science in R",
    "section": "What goes in a compendium?",
    "text": "What goes in a compendium?\nIdeally, everything related to that project\n\n\n\nData\nCode\nLab notebook\nNotes about analyses\n\n\n\nOutputs\nDocumentation / metadata\nReports / presentations\nManuscripts"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#basic-compendium-structure",
    "href": "lessons/1-project-management/slides.html#basic-compendium-structure",
    "title": "Reproducibility & Data Science in R",
    "section": "Basic compendium structure",
    "text": "Basic compendium structure\n\n\n\n\n\n\nShort machine and human readable name\nSeparate folders for “raw” and “clean” data\ngdd-thresholds.Rproj file is created by RStudio\nR/ folder contains all code to reproduce analysis. Could be named scripts/ or something else\nR scripts are numbered with two digits so alphabetic sorting = numeric sorting\nREADME.md is a markdown (plain text) document (we’ll get to README’s later)"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#rstudio-projects",
    "href": "lessons/1-project-management/slides.html#rstudio-projects",
    "title": "Reproducibility & Data Science in R",
    "section": "RStudio projects",
    "text": "RStudio projects\n\nNever worry about setwd() or getwd() again! Your compendium is always your working directory.\nSwitch between many active projects. RStudio remembers where you left off.\n\n\n\n\n\n\n\nTip\n\n\nDon’t worry if you don’t know what a working directory is, Renata will talk more about it next week!\n\n\n\nDEMO: create a new RStudio Project"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#settings-for-success",
    "href": "lessons/1-project-management/slides.html#settings-for-success",
    "title": "Reproducibility & Data Science in R",
    "section": "Settings for Success",
    "text": "Settings for Success\n\n\n\n\n\n\n\n\n\n\nFresh start ensures reproducibility\nIf your analysis relies on saving your environment in .RData, there are better solutions"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#build-your-toy-research-compendium",
    "href": "lessons/1-project-management/slides.html#build-your-toy-research-compendium",
    "title": "Reproducibility & Data Science in R",
    "section": "Build your (toy) research compendium",
    "text": "Build your (toy) research compendium\nUsing the RStudio file pane OR Finder (macOS) / File Explorer (Windows)\n\nCreate folders for data/, R/, output/ and notes/\nDownload the gapminder dataset and place it in your data/ folder\nCreate a text file called README.md"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#readme",
    "href": "lessons/1-project-management/slides.html#readme",
    "title": "Reproducibility & Data Science in R",
    "section": "README",
    "text": "README\nA README is a plain text document in your research compendium that contains:\n\n\nBrief project summary\nProject status (e.g. work-in-progress, published)\nWho is involved\nIf re-use is allowed and how to give credit\nStructure of repo (which files do what?)\nInstructions on how to reproduce results"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#example-readmes-for-research-compendia",
    "href": "lessons/1-project-management/slides.html#example-readmes-for-research-compendia",
    "title": "Reproducibility & Data Science in R",
    "section": "Example READMEs for research compendia",
    "text": "Example READMEs for research compendia\n\nhttps://github.com/Aariq/BACE-legacy-effects\nhttps://github.com/ecohealthalliance/amphibian_trade\nhttps://github.com/atredennick/size-environment\n\n\n\n\n\n\n\nNote\n\n\nWe will revisit how to make a README formatted for GitHub in week 3"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#getting-help-1",
    "href": "lessons/1-project-management/slides.html#getting-help-1",
    "title": "Reproducibility & Data Science in R",
    "section": "Getting Help",
    "text": "Getting Help\nEvery week, we’ll try to point you to places to look for help when you’re stuck or to dive more deeply into the topics covered.\nAsking a question in our Slack channel is always great place to start!\nResources:\n\nRStudio IDE: Posit Community Forum\nResearch Compendia: The Turing Way\nThe whole picture: Wilson et al. (2017), Seibold (2024)"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#a-note-on-ai",
    "href": "lessons/1-project-management/slides.html#a-note-on-ai",
    "title": "Reproducibility & Data Science in R",
    "section": "A note on AI",
    "text": "A note on AI\n\nGenerative AI / large language models (LLMs) can generate code, explain code, or suggest code improvements\nGenAI/LLMs have been described as “hallucinating”, “stochastic parrots”, and even “bullshit machines” (Hicks, Humphries, and Slater 2024)\nMaking things up is fundamental feature of GenAI and will likely always be a problem\n\n\nSkip if short on time"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#a-note-on-ai-1",
    "href": "lessons/1-project-management/slides.html#a-note-on-ai-1",
    "title": "Reproducibility & Data Science in R",
    "section": "A note on AI",
    "text": "A note on AI\n\nBeginners have difficulty spotting mistakes in AI generated code solutions (Kabir et al. 2024)\nStruggling and frustration are important parts of learning—short circuiting these steps does you a disservice in the long run\nAI presents a host of ethical, environmental, and copyright issues to consider\n\n\nSkip if short on time"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#takeaways",
    "href": "lessons/1-project-management/slides.html#takeaways",
    "title": "Reproducibility & Data Science in R",
    "section": "Takeaways",
    "text": "Takeaways\n\n\nStructure files in self-contained projects or “research compendia”\nPut data in a separate folder and never edit raw data!\nNaming things well is difficult but worth spending time on\nUse RStudio projects with one project per compendium\nInclude a README file in each compendium"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#your-tasks",
    "href": "lessons/1-project-management/slides.html#your-tasks",
    "title": "Reproducibility & Data Science in R",
    "section": "Your Tasks",
    "text": "Your Tasks\n\nChoose a project you will focus on for your “reproducibility renovation”\nDoes your project follow the file naming and organizations strategies we discussed?\nIf not, re-organize and re-name to improve it\nCreate or improve a README for your project"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#references",
    "href": "lessons/1-project-management/slides.html#references",
    "title": "Reproducibility & Data Science in R",
    "section": "References",
    "text": "References\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\n\nHicks, Michael Townsen, James Humphries, and Joe Slater. 2024. “ChatGPT Is Bullshit.” Ethics and Information Technology 26 (2): 38. https://doi.org/10.1007/s10676-024-09775-5.\n\n\nKabir, Samia, David N. Udo-Imeh, Bonan Kou, and Tianyi Zhang. 2024. “Is Stack Overflow Obsolete? An Empirical Study of the Characteristics of ChatGPT Answers to Stack Overflow Questions.” In, 117. CHI ’24. New York, NY, USA: Association for Computing Machinery. https://doi.org/10.1145/3613904.3642596.\n\n\nSeibold, Heidi. 2024. 6 Steps Towards Reproducible Research. Zenodo. https://doi.org/10.5281/zenodo.12744715.\n\n\nWilson, Greg, Jennifer Bryan, Karen Cranston, Justin Kitzes, Lex Nederbragt, and Tracy K. Teal. 2017. “Good Enough Practices in Scientific Computing.” Edited by Francis Ouellette. PLoS Computational Biology 13 (6): e1005510. https://doi.org/10.1371/journal.pcbi.1005510."
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#review",
    "href": "lessons/6-github-collab/slides.html#review",
    "title": "Collaborate With GitHub",
    "section": "Review",
    "text": "Review\n\n\n\n\n\n\nWord Bank\n\n\nrepo | commit | remote | push | pull | add\n\n\n\n\n\nA collection of files tracked by git\nA snapshot of the state of a repository\ngit ___ is used to tell git to track a file\nFor example, a repo on GitHub\ngit ____ is used to synchronize changes on your computer with a remote"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#review-1",
    "href": "lessons/6-github-collab/slides.html#review-1",
    "title": "Collaborate With GitHub",
    "section": "Review",
    "text": "Review\nWhat difficulties did you have while putting your repo on GitHub?"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#collaborating-with-github",
    "href": "lessons/6-github-collab/slides.html#collaborating-with-github",
    "title": "Collaborate With GitHub",
    "section": "Collaborating with GitHub",
    "text": "Collaborating with GitHub\n\n\n\n\n\n\n\nA GitHub repo can be used to coordinate collaboration\nIf two people have permissions, both can push changes to the repo\nAsk for a volunteer and give them permission to push to a repo\n\n\nFigure 2 from (Bryan 2018)"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#example-repo",
    "href": "lessons/6-github-collab/slides.html#example-repo",
    "title": "Collaborate With GitHub",
    "section": "Example repo",
    "text": "Example repo\n\nEveryone practice cloning this example repo as a new RStudio project: https://github.com/cct-datascience/demo-repo-2024 1\nNeed one volunteer to edit the README.md and practice commit + push"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#dealing-with-conflicts",
    "href": "lessons/6-github-collab/slides.html#dealing-with-conflicts",
    "title": "Collaborate With GitHub",
    "section": "Dealing with Conflicts",
    "text": "Dealing with Conflicts\n\nWhat happens when two people make conflicting edits to a file and push them?\nCreates a merge conflict"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#ok-try-git-pull",
    "href": "lessons/6-github-collab/slides.html#ok-try-git-pull",
    "title": "Collaborate With GitHub",
    "section": "Ok, try git pull",
    "text": "Ok, try git pull"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#merge-rebase-fast-forward",
    "href": "lessons/6-github-collab/slides.html#merge-rebase-fast-forward",
    "title": "Collaborate With GitHub",
    "section": "Merge, rebase, fast-forward??",
    "text": "Merge, rebase, fast-forward??\n\nThese are alternative ways to deal with conflicts—we won’t get into the details\nFor now, we recommend you stick with the “merge” option\n\n\nUse:\ngit config pull.rebase false\nOr, if you want to set this option for all future repos too\ngit config --global pull.rebase false"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#fixing-a-merge-conflict",
    "href": "lessons/6-github-collab/slides.html#fixing-a-merge-conflict",
    "title": "Collaborate With GitHub",
    "section": "Fixing a Merge Conflict",
    "text": "Fixing a Merge Conflict\n\n\nResolve the conflict however you want (i.e. keep one of the two sections)\nDelete all lines with &lt;&lt;&lt;&lt;&lt;&lt;&lt;, &gt;&gt;&gt;&gt;&gt;&gt;&gt;, or =======\nSave and commit\n\n\nLet’s have a round of applause for our volunteer!"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#avoid-merge-conflicts-by-working-on-branches",
    "href": "lessons/6-github-collab/slides.html#avoid-merge-conflicts-by-working-on-branches",
    "title": "Collaborate With GitHub",
    "section": "Avoid merge conflicts by working on branches",
    "text": "Avoid merge conflicts by working on branches\nEach person works on a “branch”—an independent series of commits that can be merged back into the “main” branch.\n\n\n\n\n\ngitGraph\n   commit\n   commit\n   branch person_1\n   commit\n   commit\n   commit\n   checkout main\n   branch person_2\n   commit\n   commit\n   checkout main\n   merge person_1\n   merge person_2\n   commit"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#working-on-a-branch",
    "href": "lessons/6-github-collab/slides.html#working-on-a-branch",
    "title": "Collaborate With GitHub",
    "section": "Working on a Branch",
    "text": "Working on a Branch\n\nMake a new branch using RStudio’s Git pane (for this demo, use your name)\nMake some edits (e.g. to README.md), save, add, commit.\nYou can go back to the “main” version of your project at any time.\n\n\nDemonstrate how switching branches changes the files on their computer. Hammer home that this is why it is a bad idea to use git for projects on shared drives."
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#working-on-a-branch-1",
    "href": "lessons/6-github-collab/slides.html#working-on-a-branch-1",
    "title": "Collaborate With GitHub",
    "section": "Working on a Branch",
    "text": "Working on a Branch\n\nPush your branch to GitHub\nView changes on GitHub\n\n\nShow how to look at different branches on GitHub"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#pull-requests",
    "href": "lessons/6-github-collab/slides.html#pull-requests",
    "title": "Collaborate With GitHub",
    "section": "Pull Requests",
    "text": "Pull Requests\nA request to merge changes into the main branch\n\nNeed another volunteer to share screen and be guided through making a pull request\nThis time, everyone can follow along!"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#forks",
    "href": "lessons/6-github-collab/slides.html#forks",
    "title": "Collaborate With GitHub",
    "section": "Forks",
    "text": "Forks\n\n\nWhat if you don’t have permission to push to a GitHub repo but you want to contribute?\n\n\nMake a fork!\n\n\n\n\n\n\n\n\n\n\n\n\n\nSince you can’t push to “upstream”, you can make a connected copy on GitHub called a “fork”\n\nYou can clone the fork and since you own it, you can push to it.\nOn GitHub, you can sync upstream changes with your fork and you can make pull requests to integrate changes on your fork into upstream.\nThat means you can contribute to anything! (as long as it is a public repo)"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#collaborating-with-forks",
    "href": "lessons/6-github-collab/slides.html#collaborating-with-forks",
    "title": "Collaborate With GitHub",
    "section": "Collaborating with Forks",
    "text": "Collaborating with Forks\nTo contribute to a repo you don’t have push permission for:\n\nFork the repo to your own GitHub\nClone the fork to your local computer\nMake commits (ideally on a branch)\nMake a pull request to the upstream repo\n\n\n\n\n\n\n\nTip\n\n\nLearn more, including handy usethis shortcuts: https://happygitwithr.com/fork-and-clone"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#practice",
    "href": "lessons/6-github-collab/slides.html#practice",
    "title": "Collaborate With GitHub",
    "section": "Practice",
    "text": "Practice\n\n\n\n\n\n\nExercise\n\n\nIn pairs, practice forking and cloning a demo repo you do not have permission to push to: https://github.com/cct-datascience/demo-repo-fork-2024.\nMake a new branch, make commits, and make a pull request to the upstream repo.\n\n\n\n\nEncourage learners to use forking and cloning to explore and contribute to any code they can find on GitHub including R packages and research compendia."
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#resources",
    "href": "lessons/6-github-collab/slides.html#resources",
    "title": "Collaborate With GitHub",
    "section": "Resources",
    "text": "Resources\n\n\nForking and cloning\nPull request helpers in usethis\n#git channel in UA Data Science Slack"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#your-tasks",
    "href": "lessons/6-github-collab/slides.html#your-tasks",
    "title": "Collaborate With GitHub",
    "section": "Your Tasks",
    "text": "Your Tasks\n\nFor the next update to your colloquium project, practice using a branch and and pull request on GitHub\nClone a repo you do not have permission to push to without forking it and see what happens when you try to use git push\nFork and clone a repo on GitHub to explore it (e.g. a lab mate’s code, a research compendium, your favorite R package)"
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#references",
    "href": "lessons/6-github-collab/slides.html#references",
    "title": "Collaborate With GitHub",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\n\nBryan, Jennifer. 2018. “Excuse Me, Do You Have a Moment to Talk about Version Control?” The American Statistician 72 (1): 2027. https://doi.org/10.1080/00031305.2017.1399928."
  },
  {
    "objectID": "lessons/6-github-collab/slides.html#footnotes",
    "href": "lessons/6-github-collab/slides.html#footnotes",
    "title": "Collaborate With GitHub",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nRead more about GitHub organizations"
  },
  {
    "objectID": "lessons/5-github-basics/notes.html",
    "href": "lessons/5-github-basics/notes.html",
    "title": "Developing Code on Github",
    "section": "",
    "text": "Learners will share their local repository on GitHub and learn how to sync some files while ignoring others systematically. They’ll get the basics of working by themselves with GitHub (push/pull from main branch only) using RStudio."
  },
  {
    "objectID": "lessons/5-github-basics/notes.html#objective",
    "href": "lessons/5-github-basics/notes.html#objective",
    "title": "Developing Code on Github",
    "section": "",
    "text": "Learners will share their local repository on GitHub and learn how to sync some files while ignoring others systematically. They’ll get the basics of working by themselves with GitHub (push/pull from main branch only) using RStudio."
  },
  {
    "objectID": "lessons/5-github-basics/notes.html#lesson-outline",
    "href": "lessons/5-github-basics/notes.html#lesson-outline",
    "title": "Developing Code on Github",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nReview:\n\nWays of creating a git repo and how to know if it worked\n(live coding) turn demo project from lesson 1 into a git repo with usethis::use_git()\n\nLive Coding: working with git in RStudio\n\nDemo add commit cycle with git pane AND git menu\n\nLive Coding: .gitignore\n\nExplore .gitignore created by RStudio\nSoftware Carpentry .gitignore lesson\nDiscuss what files to .gitignore: what is “non-diffable”?\nModify and make a commit\n\nWhat is GitHub and why use it? (slides)\nLive Coding: GitHub setup\n\nBefore this lesson run gitcreds::gitcreds_delete() to simulate a brand new setup\nGo through checklist of usethis::git_sitrep()\nRemove the token you create before video is posted\n\nLive Coding: Putting your code on GitHub\n\nLocal first: usethis::use_github()\nGitHub first: create new repo on GitHub and create new R Studio project from version control\nOther ways are possible, but we’re not going to cover them this lesson (unless someone has issues)\n\nLive Coding: Push and Pull\n\nMake changes in RStudio, push\nMake changes on GitHub, pull\nHave Renata make changes, push, then pull\n\nNext time: How to work together on GitHub more safely\nHomework: Put a personal repository on GitHub."
  },
  {
    "objectID": "lessons/5-github-basics/notes.html#installation-materials",
    "href": "lessons/5-github-basics/notes.html#installation-materials",
    "title": "Developing Code on Github",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Version Control with Git episode #6\nGitHub authentication with PAT using Jenny Bryan’s Git book chapter 9 (follow usethis::git_sitrep())\nSoftware Carpentry Version Control with Git episode #7\nSoftware Carpentry branching add-on\n\n\nReview\nIf anyone turned a folder into a repository, share how that went."
  },
  {
    "objectID": "lessons/5-github-basics/notes.html#teaching-notes",
    "href": "lessons/5-github-basics/notes.html#teaching-notes",
    "title": "Developing Code on Github",
    "section": "Teaching notes",
    "text": "Teaching notes\n\nPractice another add-commit cycle after creating the .gitignore\nIntroduce the add-commit-push cycle"
  },
  {
    "objectID": "lessons/5-github-basics/notes.html#homework",
    "href": "lessons/5-github-basics/notes.html#homework",
    "title": "Developing Code on Github",
    "section": "Homework",
    "text": "Homework\nConnect a personal repository to GitHub. Practice usethis::use_git() and usethis::use_github()."
  },
  {
    "objectID": "lessons/3-shell/notes.html",
    "href": "lessons/3-shell/notes.html",
    "title": "Using the Shell",
    "section": "",
    "text": "Understand the what and why of the shell\nUse the shell to navigate your computer’s file system\nUse RStudio projects to simplify file system navigation\nKnow your options for finding help"
  },
  {
    "objectID": "lessons/3-shell/notes.html#objectives",
    "href": "lessons/3-shell/notes.html#objectives",
    "title": "Using the Shell",
    "section": "",
    "text": "Understand the what and why of the shell\nUse the shell to navigate your computer’s file system\nUse RStudio projects to simplify file system navigation\nKnow your options for finding help"
  },
  {
    "objectID": "lessons/3-shell/notes.html#lesson-outline",
    "href": "lessons/3-shell/notes.html#lesson-outline",
    "title": "Using the Shell",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview of last week\n\nWhat happened as you were trying to re-organize projects or R code? Victories? Stumbling blocks?\n\nSlides: Intro to the shell\n\nWhat is the shell?\nWhat does the shell let us do?\nWhy would we want to learn how to use the shell?\n\nBreakout rooms: Shell installation\n\nInstructor notes include links to git installation for both Mac and Windows.\nSplit into 2 breakout rooms to install on different OS’s.\n\nBreak to all download shell-lesson-data\n\nLink\nPut it on your Desktop\nUnzip using point-and-click\n\nLive coding: Setup RStudio\n\nOpen RStudio\nTour panes: files and terminal\nSet up terminal pane to use bash\n\nLive coding: Navigating filesystems in files pane\n\nUse file pane to navigate to shell-lesson-data\n\nLive coding: Navigate to shell-lesson-data in Terminal\n\nIdentify the prompt and note that it is different in zsh (%)\npwd\ncd\nls\n\nUse ls flags to explain anatomy of a shell command\nShow man ls to show flag options for the ls command\n\n\nLive coding: Synchronizing file panes\n\nShow “Go to current directory” to bring Terminal to files pane\nShow “New terminal here” to create a terminal in files pane\nShow that Rstudio’s working directory is not automatically wherever either Terminal or the file pane is\n\nLive coding: using Rprojects to simplify filesystems\n\nCreate an R project\nShow that, upon opening, Terminal, getwd(), and file pane are all on the same page\n\nLive coding: cp and move\n\nCopy shell_lesson_data to the Rproject.\nTell them we need cp, then use cp --help to get the options\nRepeat using ls to explore contents of shell_lesson_data and mirror files pane\n\nLive coding/discussion: options for finding help\n\n--help flag\nman pages\nManual pages: ? in R, package websites\nStackOverflow\nChatGPT\n\nHomework for next session\n\nRead https://peerj.com/preprints/3159/ git (Version control prep)\nCreate a diagram of your file system and note your most frequently used directories"
  },
  {
    "objectID": "lessons/3-shell/notes.html#installation-materials",
    "href": "lessons/3-shell/notes.html#installation-materials",
    "title": "Using the Shell",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nmacOS git installation\nWindows git installation (detailed step-by-step here)\nSoftware Carpentry Unix Shell episode #1\nSoftware Carpentry Unix Shell episode #2\nSoftware Carpentry Unix Shell episode #3 (time permitting)"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#show-and-tell-late-october",
    "href": "lessons/9-intermediate-r-2/slides.html#show-and-tell-late-october",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Show and tell (Late October)",
    "text": "Show and tell (Late October)\n\nAn opportunity to apply workshop skills to your own work.\nYou could apply different parts to different projects, or more integratively to one single project.\nOptional, but encouraged!"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#some-inspirations",
    "href": "lessons/9-intermediate-r-2/slides.html#some-inspirations",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Some inspirations",
    "text": "Some inspirations\n\nTurn the project folder for one of your current research project into a git/GitHub repo and/or R project\nModify an R script to use functions, conditionals, or best-practices for code formatting\nImprove directory organization for project or your entire computer!"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#iteration-by-hand",
    "href": "lessons/9-intermediate-r-2/slides.html#iteration-by-hand",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Iteration by hand",
    "text": "Iteration by hand\nmy_first_site &lt;- read.csv(\"data_first.csv\")\nmy_second_site &lt;- read.csv(\"data_second.csv\")\nmy_third_site &lt;- read.csv(\"data_third.csv\")"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#why-use-code-to-iterate",
    "href": "lessons/9-intermediate-r-2/slides.html#why-use-code-to-iterate",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Why use code to iterate?",
    "text": "Why use code to iterate?\n\nLess code: fewer bugs, easier to understand\nEasier to apply to new situations\nFaster to write, maybe faster to run"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#iteration-using-for-loops",
    "href": "lessons/9-intermediate-r-2/slides.html#iteration-using-for-loops",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Iteration using for loops",
    "text": "Iteration using for loops\n\nCoding objectives:\n\nWrite a for loop to apply our cleaning function to each island\nStore the results in a list\nConvert this list back to a dataframe"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#iteration-using-purrrmap",
    "href": "lessons/9-intermediate-r-2/slides.html#iteration-using-purrrmap",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Iteration using purrr::map",
    "text": "Iteration using purrr::map\n\nCoding objectives:\n\nUse purrr::map as an alternative to a for loop\nDemonstrate purrr applied to more complex workflows"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/slides.html#homework",
    "href": "lessons/9-intermediate-r-2/slides.html#homework",
    "title": "Intermediate R II: Functions cont’d, iteration, and getting help",
    "section": "Homework",
    "text": "Homework\n\nIdentify a section of your code that could be made more efficient using a for loop or iterating using a function\nStart thinking about show-and-tell opportunities!\n\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#picking-up-from-last-week",
    "href": "lessons/8-intermediate-r-1/slides.html#picking-up-from-last-week",
    "title": "Intermediate R: Functions and control flow",
    "section": "Picking up from last week",
    "text": "Picking up from last week\n\nCommit last week’s work to GitHub and push\nMerge your work to main!\nCreate a new branch for today’s work and pull"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#revisiting-the-penguins-data",
    "href": "lessons/8-intermediate-r-1/slides.html#revisiting-the-penguins-data",
    "title": "Intermediate R: Functions and control flow",
    "section": "Revisiting the penguins data",
    "text": "Revisiting the penguins data\n\nNote that units are in mm and g\nToday we’ll convert these to imperial measurements (inches and pounds)\nFor this, we’ll use functions."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#what-are-functions-in-r",
    "href": "lessons/8-intermediate-r-1/slides.html#what-are-functions-in-r",
    "title": "Intermediate R: Functions and control flow",
    "section": "What are functions in R?",
    "text": "What are functions in R?\n\nWe use pre-written functions constantly.\nAutomated “recipes” for executing code\nInputs (“arguments”) and outputs"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#why-write-our-own-functions",
    "href": "lessons/8-intermediate-r-1/slides.html#why-write-our-own-functions",
    "title": "Intermediate R: Functions and control flow",
    "section": "Why write our own functions?",
    "text": "Why write our own functions?\n\nAvoid repetition (+ mistakes)\nEnhance portability + reproducibility"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#writing-a-function-objectives",
    "href": "lessons/8-intermediate-r-1/slides.html#writing-a-function-objectives",
    "title": "Intermediate R: Functions and control flow",
    "section": "Writing a function objectives",
    "text": "Writing a function objectives\n\nConvert our data wrangling script into a function\nBreak this function into smaller, human-readable functions\nMake this function flexible to apply to other data"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#anatomy-of-a-function",
    "href": "lessons/8-intermediate-r-1/slides.html#anatomy-of-a-function",
    "title": "Intermediate R: Functions and control flow",
    "section": "Anatomy of a function",
    "text": "Anatomy of a function\n# Defining a function\n# a_function will be the name of the function\n# arguments go within the ()\n# code goes in the curly braces\n\na_function &lt;- function(an_argument) {\n  # code using an_argument to produce final_output\n  \n  # whatever is inside return() comes out of the function\n  return(final_output) \n}\n\n# Run the code to create the function\n# Then you can use it:\n# a_function(&lt;some_input&gt;)\n#"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#coding-time",
    "href": "lessons/8-intermediate-r-1/slides.html#coding-time",
    "title": "Intermediate R: Functions and control flow",
    "section": "Coding time",
    "text": "Coding time\nWrite a function to convert metric to imperial measurements."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#sourcing-functions",
    "href": "lessons/8-intermediate-r-1/slides.html#sourcing-functions",
    "title": "Intermediate R: Functions and control flow",
    "section": "Sourcing functions",
    "text": "Sourcing functions\n\nYou can store functions in separate R scripts and import them to your main working script.\nThis helps keep your main script simple and keeps your whole repo organized.\nUse source(&lt;path_to_functions_script&gt;) in your main script."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#coding-time-1",
    "href": "lessons/8-intermediate-r-1/slides.html#coding-time-1",
    "title": "Intermediate R: Functions and control flow",
    "section": "Coding time",
    "text": "Coding time\nSave our function in a separate R script and source it from a data wrangling script."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#what-are-conditionals",
    "href": "lessons/8-intermediate-r-1/slides.html#what-are-conditionals",
    "title": "Intermediate R: Functions and control flow",
    "section": "What are conditionals?",
    "text": "What are conditionals?\n\nDecide which action to take based on whether some condition is TRUE or FALSE\nBalance readability and flexibility in scripts and functions"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#conditional-syntax",
    "href": "lessons/8-intermediate-r-1/slides.html#conditional-syntax",
    "title": "Intermediate R: Functions and control flow",
    "section": "Conditional syntax",
    "text": "Conditional syntax\nif(&lt;condition&gt;) {\n  &lt;action to take if TRUE&gt;\n}"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#conditional-syntax-1",
    "href": "lessons/8-intermediate-r-1/slides.html#conditional-syntax-1",
    "title": "Intermediate R: Functions and control flow",
    "section": "Conditional syntax",
    "text": "Conditional syntax\nif(&lt;condition&gt;) {\n  &lt;action to take if TRUE&gt;\n} else {\n  &lt;action to take if FALSE&gt;\n}"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#defining-conditions",
    "href": "lessons/8-intermediate-r-1/slides.html#defining-conditions",
    "title": "Intermediate R: Functions and control flow",
    "section": "Defining conditions",
    "text": "Defining conditions\n\n== for “is equal to”\n!= for “not equal to:\n&lt;, &gt; for less than/greater than\n&lt;=, &gt;= for less than or equal to/greater than or equal to\nis.na() for is it NA?\n%in% for, is this value in a vector of possibilities\n…and more!"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#coding-time-2",
    "href": "lessons/8-intermediate-r-1/slides.html#coding-time-2",
    "title": "Intermediate R: Functions and control flow",
    "section": "Coding time",
    "text": "Coding time\n\nUse conditionals to make a flexible function."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#finishing-up",
    "href": "lessons/8-intermediate-r-1/slides.html#finishing-up",
    "title": "Intermediate R: Functions and control flow",
    "section": "Finishing up",
    "text": "Finishing up\n\nCommit your changes and push\nOpen a pull request."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#resources",
    "href": "lessons/8-intermediate-r-1/slides.html#resources",
    "title": "Intermediate R: Functions and control flow",
    "section": "Resources",
    "text": "Resources\n\nHands-on Programming with R online book\nSoftware Carpentry intermediate R lesson"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/slides.html#your-tasks",
    "href": "lessons/8-intermediate-r-1/slides.html#your-tasks",
    "title": "Intermediate R: Functions and control flow",
    "section": "Your tasks",
    "text": "Your tasks\n\nIdentify parts of your colloquium project code that could be turned into functions.\nGood candidates are: repeated sections, complicated sidebars to the main flow\nConvert these sections to functions and source() them to clean up the main script.\n\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#review",
    "href": "lessons/7-data-manipulation/slides.html#review",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Review",
    "text": "Review\n\n\n\n\n\n\nInformal poll:\n\n\nDo you collaborate with anyone who could or currently uses GitHub?"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#review-1",
    "href": "lessons/7-data-manipulation/slides.html#review-1",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Review",
    "text": "Review\n\n\n\n\n\n\nChat:\n\n\nWhat would you say to encourage them to start?"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#learning-objectives",
    "href": "lessons/7-data-manipulation/slides.html#learning-objectives",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Learning objectives",
    "text": "Learning objectives\n\n\nPractice tracking our work in git\nUnderstand what makes code “good”\nUnderstand the principles of “tidy data”\nUse tidyverse packages (dplyr and tidyr) to work with data in R.\nIdentify how to apply tidy tools to your colloqium project."
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#github-practice",
    "href": "lessons/7-data-manipulation/slides.html#github-practice",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "GitHub practice",
    "text": "GitHub practice\nCreate a branch for today’s work in your workshop repo."
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#discussion-what-makes-code-good",
    "href": "lessons/7-data-manipulation/slides.html#discussion-what-makes-code-good",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Discussion: What makes code “good”?",
    "text": "Discussion: What makes code “good”?\nBreakout rooms (5 minutes) to discuss, and then report back to the group."
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#what-makes-code-good",
    "href": "lessons/7-data-manipulation/slides.html#what-makes-code-good",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "What makes code “good”?",
    "text": "What makes code “good”?\nSuggestions:\n\n\nReadability\nReproducibility\nAccuracy\nSpeed/efficiency"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#what-makes-code-good-1",
    "href": "lessons/7-data-manipulation/slides.html#what-makes-code-good-1",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "What makes code “good”?",
    "text": "What makes code “good”?\nSuggestions:\n\nReadability\nReproducibility\nAccuracy\nSpeed/efficiency"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#readable-code",
    "href": "lessons/7-data-manipulation/slides.html#readable-code",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Readable code",
    "text": "Readable code\nFrom the Carpentries lab…\n\n\nUse comments to explain decisions\nBreak code into modules (covered next session)\nAvoid repetition wherever possible (covered next week)\nMake dependencies clear"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#reproducible-code",
    "href": "lessons/7-data-manipulation/slides.html#reproducible-code",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Reproducible code",
    "text": "Reproducible code\nFrom the Carpentries lab…\n\n\nAvoid using commenting out lines to control code\nUse a test data set\nUse version control (like GitHub!)\nKeep track of your software environment"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#good-enough-practices",
    "href": "lessons/7-data-manipulation/slides.html#good-enough-practices",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Good enough practices",
    "text": "Good enough practices\nSee the paper here!"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#the-tidyverse",
    "href": "lessons/7-data-manipulation/slides.html#the-tidyverse",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "The tidyverse",
    "text": "The tidyverse"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#the-tidyverse-1",
    "href": "lessons/7-data-manipulation/slides.html#the-tidyverse-1",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "The “tidyverse”",
    "text": "The “tidyverse”\n\n\n✨ Common structure and syntax\n✨ Emphasize user readability\n✨ Friendly documentation\n✨ Updates rapidly"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#the-tidyverse-2",
    "href": "lessons/7-data-manipulation/slides.html#the-tidyverse-2",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "The “tidyverse”",
    "text": "The “tidyverse”\n\n\n‼️ Extra installs over “base R”\n‼️ Very different syntax than “base R”\n‼️ Updates rapidly (can be a reproducibility challenge)"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#the-tidyverse-3",
    "href": "lessons/7-data-manipulation/slides.html#the-tidyverse-3",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "The “tidyverse”",
    "text": "The “tidyverse”\n\n\n🧭 Only install/load the functions/packages you need\n🧭 Be aware that others may be unfamiliar; comment your code well\n🧭 Keep track of your package versions\n🧭 Software developers, keep an eye on changes!"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#tidy-data-in-r",
    "href": "lessons/7-data-manipulation/slides.html#tidy-data-in-r",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Tidy data in R",
    "text": "Tidy data in R\nLet’s install some packages:\ninstall.packages(\"dplyr\") # dataframe manipulation\ninstall.packages(\"tidyr\") # \"reshaping\" data\ninstall.packages(\"palmerpenguins\") # open teaching dataset"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#coding-time-dplyr",
    "href": "lessons/7-data-manipulation/slides.html#coding-time-dplyr",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Coding time: dplyr",
    "text": "Coding time: dplyr\nCore dplyr verbs:\n\nselect pulls columns\nfilter pulls rows based on values\nmutate adds or modifies a column\ngroup_by + summarize calculates group-wise summary statistics\n*_join functions combine data frames based on matching columns"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#a-note-on-pipes",
    "href": "lessons/7-data-manipulation/slides.html#a-note-on-pipes",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "A note on pipes",
    "text": "A note on pipes\n\nChain functions together into “paragraphs”\n%&gt;%: older, included in dplyr (ultimately depends on magrittr)\n|&gt;: included in base R as of 4.1.0"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#coding-time-tidyr",
    "href": "lessons/7-data-manipulation/slides.html#coding-time-tidyr",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Coding time: tidyr",
    "text": "Coding time: tidyr\nKey tidyr manipulations:\n\npivot_longer turns columns names into row values\npivot_wider creates new columns based on the values of a given field.\n\n\n\n\n\n\n\nNote\n\n\nData should be as long as is reasonable (but not longer)!"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#coding-time-finding-the-right-function",
    "href": "lessons/7-data-manipulation/slides.html#coding-time-finding-the-right-function",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Coding time: finding the right function",
    "text": "Coding time: finding the right function\n\n?tidyr::pivot_wider and index pages\nMore ways of getting help: see the Getting Help section!"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#more-git-practice",
    "href": "lessons/7-data-manipulation/slides.html#more-git-practice",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "More git practice",
    "text": "More git practice\nWork through the steps to synchronize the changes you’ve made today with GitHub."
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#more-git-practice-1",
    "href": "lessons/7-data-manipulation/slides.html#more-git-practice-1",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "More git practice",
    "text": "More git practice\nWork through the steps to synchronize the changes you’ve made today with GitHub.\n\n\n\n\n\n\nCommand-line instructions\n\n\ngit add &lt;your script name&gt;\ngit commit\ngit push"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#resources",
    "href": "lessons/7-data-manipulation/slides.html#resources",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Resources",
    "text": "Resources\n\nR for Data Science online book\nTidyverse website"
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#your-colloqium-project",
    "href": "lessons/7-data-manipulation/slides.html#your-colloqium-project",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "Your colloqium project",
    "text": "Your colloqium project\n\nBetween now and Thursday, revisit the code in your colloquium project.\nIdentify any sections of the code that could be improved based on the conversations and tools we covered today.\nMake those changes, if you have the skills. Otherwise, take notes and we will talk more on Thursday."
  },
  {
    "objectID": "lessons/7-data-manipulation/slides.html#references",
    "href": "lessons/7-data-manipulation/slides.html#references",
    "title": "Data manipulation with dplyr and tidyr",
    "section": "References",
    "text": "References\nGreg Wilson, Jennifer Bryan, Karen Cranston, Justin Kitzes, Lex Nederbragt, and Tracy K. Teal: \"Good Enough Practices for Scientific Computing\". http://github.com/swcarpentry/good-enough-practices-in-scientific-computing/, 2016.\nWallace, E..W.J., Meynert, A., Zielinski. T., Romanowski. A., et. al., (2022). Good Enough Practices in Scientific Computing: A Lesson (Version 0.1.0). https://doi.org/tbc; also https://github.com/carpentries-lab/good-enough-practices/.\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#review-homework",
    "href": "lessons/5-github-basics/slides.html#review-homework",
    "title": "GitHub",
    "section": "Review & Homework",
    "text": "Review & Homework\n\n\nIf you turned an existing project into a git repo, how did it go?\nWays to create a git repo:\n\nrun git init from the command line inside of project directory\ncreate a new RStudio project with “use git” checked\nrun usethis::use_git() in the R console in a RStudio project"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#todays-goals",
    "href": "lessons/5-github-basics/slides.html#todays-goals",
    "title": "GitHub",
    "section": "Today’s goals",
    "text": "Today’s goals\n\nPractice using git with RStudio\nExplore commit history\nPut a local repo on GitHub\nUse git push and git pull to synchronize with GitHub"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#working-with-git-in-rstudio-live-coding",
    "href": "lessons/5-github-basics/slides.html#working-with-git-in-rstudio-live-coding",
    "title": "GitHub",
    "section": "Working with git in RStudio (Live Coding)",
    "text": "Working with git in RStudio (Live Coding)\nThe most common git commands can be used with the RStudio GUI.\n\nDemo save, add, commit cycle with Git pane AND git menu in RStudio"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#sharing-with-github",
    "href": "lessons/5-github-basics/slides.html#sharing-with-github",
    "title": "GitHub",
    "section": "Sharing with GitHub",
    "text": "Sharing with GitHub\n\n\n\n\n\n\n\n\nAll contributors have a local copy of the repo.\nYou might also have a copy in multiple places (on multiple computers, on university HPC).\nGitHub has a central repo that allows you to synchronize and merge work from multiple sources.\nYou can also access the repo through github.com web UI\n\n\n\nFigure 2 from (Bryan 2018)"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#connect-with-github-live-coding",
    "href": "lessons/5-github-basics/slides.html#connect-with-github-live-coding",
    "title": "GitHub",
    "section": "Connect With GitHub (Live Coding)",
    "text": "Connect With GitHub (Live Coding)\n\nSet up your computer to “talk” to GitHub with steps in git_sitrep()\nConnect your local git repo to a remote GitHub repo with use_github()\nExplore the GitHub interface\n\n\nDemo “starting from scratch” by running gitcreds::gitcreds_delete(). Remember to delete the PAT you create and show on camera.\n\n\nRemind learners that repos can be private. use_github(private = TRUE)"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#work-with-rstudio-and-github-live-coding",
    "href": "lessons/5-github-basics/slides.html#work-with-rstudio-and-github-live-coding",
    "title": "GitHub",
    "section": "Work With RStudio and GitHub (Live Coding)",
    "text": "Work With RStudio and GitHub (Live Coding)\n\nPush local changes to GitHub\nPull GitHub changes to local\n\n\nDemo save, add, commit, push and check GitHub for changes. Then, edit README on github and pull changes."
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#ignoring-files",
    "href": "lessons/5-github-basics/slides.html#ignoring-files",
    "title": "GitHub",
    "section": "Ignoring files",
    "text": "Ignoring files\n\n\nIf you enabled git with Rstudio or usethis, a .gitignore file was added for you, explore the contents\n.gitignore also prevents files from being synced to GitHub\n\nUse to keep large and non “diff-able” files local only to avoid GitHub file size limits\nUse to prevent sensitive information from getting on GitHub (e.g. sensitive data, API tokens)\nCons: if ignored files are inputs, less reproducible and no backup on GitHub\n\nIf a file is already tracked by git, you can’t (easily) retroactively remove it from git history and GitHub.\n\n\n\nRemind learners that it is best practice to consider outputs as disposable, so might be good to .gitignore them if they are non-diff-able like .png files or .pdfs generated from Quarto. Can use .gitkeep to get git to track an empty folder."
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#resources",
    "href": "lessons/5-github-basics/slides.html#resources",
    "title": "GitHub",
    "section": "Resources",
    "text": "Resources\n\n#git channel in UA Data Science Slack\nhappygitwithr.com\nusethis::use_github()"
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#your-tasks",
    "href": "lessons/5-github-basics/slides.html#your-tasks",
    "title": "GitHub",
    "section": "Your Tasks",
    "text": "Your Tasks\n\nPut your research compendium on GitHub (e.g. with use_github()) and share the link in our Slack channel (if it can be made public)\nExplore other research compendia shared in Slack\n\n\nIf there is extra time, encourage learners to use it to practice these new skills with a real project repo while you’re all still there to help troubleshoot."
  },
  {
    "objectID": "lessons/5-github-basics/slides.html#references",
    "href": "lessons/5-github-basics/slides.html#references",
    "title": "GitHub",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\n\nBryan, Jennifer. 2018. “Excuse Me, Do You Have a Moment to Talk about Version Control?” The American Statistician 72 (1): 2027. https://doi.org/10.1080/00031305.2017.1399928."
  },
  {
    "objectID": "lessons/3-shell/slides.html#review-of-last-session",
    "href": "lessons/3-shell/slides.html#review-of-last-session",
    "title": "File systems and the command line",
    "section": "Review of last session",
    "text": "Review of last session\n\nWhat questions do you have?\nWhat happened as you were trying to re-organize projects or R code?\n\nVictories?\nStumbling blocks?"
  },
  {
    "objectID": "lessons/3-shell/slides.html#learning-objectives",
    "href": "lessons/3-shell/slides.html#learning-objectives",
    "title": "File systems and the command line",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nUnderstand your computer’s file system\nUnderstand the what and why of the shell command-line interface\nUse the CLI to navigate your computer’s file system\nUse the shell and file system navigation within RStudio\nKnow your options for finding help"
  },
  {
    "objectID": "lessons/3-shell/slides.html#how-well-do-you-know-your-file-system",
    "href": "lessons/3-shell/slides.html#how-well-do-you-know-your-file-system",
    "title": "File systems and the command line",
    "section": "How well do you know your file system?",
    "text": "How well do you know your file system?"
  },
  {
    "objectID": "lessons/3-shell/slides.html#example-file-system",
    "href": "lessons/3-shell/slides.html#example-file-system",
    "title": "File systems and the command line",
    "section": "Example file system",
    "text": "Example file system"
  },
  {
    "objectID": "lessons/3-shell/slides.html#example-file-system-1",
    "href": "lessons/3-shell/slides.html#example-file-system-1",
    "title": "File systems and the command line",
    "section": "Example file system",
    "text": "Example file system"
  },
  {
    "objectID": "lessons/3-shell/slides.html#how-do-you-navigate-your-file-system",
    "href": "lessons/3-shell/slides.html#how-do-you-navigate-your-file-system",
    "title": "File systems and the command line",
    "section": "How do you navigate your file system?",
    "text": "How do you navigate your file system?\n\nSearching\nPoint and click\n“Go to path”"
  },
  {
    "objectID": "lessons/3-shell/slides.html#how-do-we-navigate-the-file-system-programmatically",
    "href": "lessons/3-shell/slides.html#how-do-we-navigate-the-file-system-programmatically",
    "title": "File systems and the command line",
    "section": "How do we navigate the file system programmatically?",
    "text": "How do we navigate the file system programmatically?\n\nA script can’t point and click!\nWe need a system for moving around our file system through written commands."
  },
  {
    "objectID": "lessons/3-shell/slides.html#what-is-the-shell",
    "href": "lessons/3-shell/slides.html#what-is-the-shell",
    "title": "File systems and the command line",
    "section": "What is the shell?",
    "text": "What is the shell?\n\nCommand-line interface, in contrast to a GUI\nUseful for navigating the file system\n…and for automating large tasks (e.g. renaming, moving files)\n…and for running programs that may not have a GUI\n…and for interfacing with remote computers (e.g. the HPC)"
  },
  {
    "objectID": "lessons/3-shell/slides.html#shell-in-this-workshop",
    "href": "lessons/3-shell/slides.html#shell-in-this-workshop",
    "title": "File systems and the command line",
    "section": "Shell in this workshop",
    "text": "Shell in this workshop\n\ngit/GitHub (next 2 lessons)\nNavigating your file system\nQuarto (lesson 2)"
  },
  {
    "objectID": "lessons/3-shell/slides.html#lets-get-set-up",
    "href": "lessons/3-shell/slides.html#lets-get-set-up",
    "title": "File systems and the command line",
    "section": "Let’s get set up!",
    "text": "Let’s get set up!\n\nmacOS comes with a shell (usually Bash or zsh) built-in\nWindows need to install GitBash (includes Bash shell and git, which we will use later)\nBreakout rooms\n\nMac users go with Eric\nWindows users go with Renata"
  },
  {
    "objectID": "lessons/3-shell/slides.html#data-download",
    "href": "lessons/3-shell/slides.html#data-download",
    "title": "File systems and the command line",
    "section": "Data download",
    "text": "Data download\n\nDownload shell-lesson-data.zip\n\nInstructions here: https://swcarpentry.github.io/shell-novice/index.html#download-files\n\nSave it to your Desktop and unzip it."
  },
  {
    "objectID": "lessons/3-shell/slides.html#coding-time",
    "href": "lessons/3-shell/slides.html#coding-time",
    "title": "File systems and the command line",
    "section": "Coding time",
    "text": "Coding time\n\nRStudio panes\nSet up Terminal in RStudio\nNavigation using Terminal and Files pane"
  },
  {
    "objectID": "lessons/3-shell/slides.html#syntax-of-a-shell-command",
    "href": "lessons/3-shell/slides.html#syntax-of-a-shell-command",
    "title": "File systems and the command line",
    "section": "Syntax of a shell command",
    "text": "Syntax of a shell command"
  },
  {
    "objectID": "lessons/3-shell/slides.html#coding-time-1",
    "href": "lessons/3-shell/slides.html#coding-time-1",
    "title": "File systems and the command line",
    "section": "Coding time",
    "text": "Coding time\n\nSynchronize working directories between Terminal, Files Pane, and R working directory"
  },
  {
    "objectID": "lessons/3-shell/slides.html#coding-time-2",
    "href": "lessons/3-shell/slides.html#coding-time-2",
    "title": "File systems and the command line",
    "section": "Coding time",
    "text": "Coding time\n\nUse an RStudio project to simplify working directories\nCopy shell_lesson_data to your R project"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help",
    "href": "lessons/3-shell/slides.html#getting-help",
    "title": "File systems and the command line",
    "section": "Getting help",
    "text": "Getting help\nls --help\nman ls"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help-1",
    "href": "lessons/3-shell/slides.html#getting-help-1",
    "title": "File systems and the command line",
    "section": "Getting help",
    "text": "Getting help\ngit --help"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help-2",
    "href": "lessons/3-shell/slides.html#getting-help-2",
    "title": "File systems and the command line",
    "section": "Getting help",
    "text": "Getting help"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help-3",
    "href": "lessons/3-shell/slides.html#getting-help-3",
    "title": "File systems and the command line",
    "section": "Getting help",
    "text": "Getting help"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help-fellow-humans",
    "href": "lessons/3-shell/slides.html#getting-help-fellow-humans",
    "title": "File systems and the command line",
    "section": "Getting help: fellow humans",
    "text": "Getting help: fellow humans"
  },
  {
    "objectID": "lessons/3-shell/slides.html#getting-help-fellow-humans-1",
    "href": "lessons/3-shell/slides.html#getting-help-fellow-humans-1",
    "title": "File systems and the command line",
    "section": "Getting help: fellow humans",
    "text": "Getting help: fellow humans"
  },
  {
    "objectID": "lessons/3-shell/slides.html#takeaways",
    "href": "lessons/3-shell/slides.html#takeaways",
    "title": "File systems and the command line",
    "section": "Takeaways",
    "text": "Takeaways\n\nThe shell is a command-line interface to the computer\nThe file system the shell sees is the same as your File Explorer tab\nWe can use the shell from the Terminal pane in RStudio\nFind help from built-in manual pages, Google, (maybe) AI tools, or community"
  },
  {
    "objectID": "lessons/3-shell/slides.html#reproducibility-colloquim-check-in",
    "href": "lessons/3-shell/slides.html#reproducibility-colloquim-check-in",
    "title": "File systems and the command line",
    "section": "Reproducibility colloquim check-in",
    "text": "Reproducibility colloquim check-in\n\nBreakout rooms of 3-4"
  },
  {
    "objectID": "lessons/3-shell/slides.html#check-in-questions",
    "href": "lessons/3-shell/slides.html#check-in-questions",
    "title": "File systems and the command line",
    "section": "Check-in questions",
    "text": "Check-in questions\n\nWhat project are you going to be focusing on for the reproducibility colloquim?\nIn which areas do you think it will benefit the most from a makeover?\n\nProject organization\nCollaboration practices (git, github)\nCode efficiency and robustness (functions, iteration)\nDocumentation\n\nWhat kinds of support will help you make those improvements?"
  },
  {
    "objectID": "lessons/3-shell/slides.html#homework-for-next-time",
    "href": "lessons/3-shell/slides.html#homework-for-next-time",
    "title": "File systems and the command line",
    "section": "Homework for next time",
    "text": "Homework for next time\n\nRead “Excuse me, do you have a moment to talk about version control?”\nCreate a diagram of your file system and note your most frequently used directories"
  },
  {
    "objectID": "lessons/3-shell/slides.html#resources-shell",
    "href": "lessons/3-shell/slides.html#resources-shell",
    "title": "File systems and the command line",
    "section": "Resources: Shell",
    "text": "Resources: Shell\n\nSoftware Carpentry Unix Shell episode #1\nSoftware Carpentry Unix Shell episode #2\nSoftware Carpentry Unix Shell episode #3"
  },
  {
    "objectID": "lessons/3-shell/slides.html#resources-ua-community",
    "href": "lessons/3-shell/slides.html#resources-ua-community",
    "title": "File systems and the command line",
    "section": "Resources: UA community",
    "text": "Resources: UA community\n\nUA Data Science Institute\nUA Data Science Slack\nCCT Drop-in Hours, 9-10 on Tuesdays\n\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/2-markdown-quarto/notes.html",
    "href": "lessons/2-markdown-quarto/notes.html",
    "title": "Documentation and Literate Programming",
    "section": "",
    "text": "Understand how to write a README.md using markdown basics and introduce the concept of literate programming with Quarto."
  },
  {
    "objectID": "lessons/2-markdown-quarto/notes.html#objective",
    "href": "lessons/2-markdown-quarto/notes.html#objective",
    "title": "Documentation and Literate Programming",
    "section": "",
    "text": "Understand how to write a README.md using markdown basics and introduce the concept of literate programming with Quarto."
  },
  {
    "objectID": "lessons/2-markdown-quarto/notes.html#lesson-outline",
    "href": "lessons/2-markdown-quarto/notes.html#lesson-outline",
    "title": "Documentation and Literate Programming",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nQuarto: an open-source scientific and technical publishing system\n\nAllows combining markdown, code, and code output (tables, plots, etc)\nWide variety of outputs: html, pdf, word, and more\nUse cases:\n\nNotebook\nShare results with collaborators\nPresentations\nReproducible manuscripts\n\n\nHow does it work?\n\nqmd -&gt; knitr -&gt; md -&gt; pandoc -&gt; word, pdf, html, etc.\n\nAnatomy of a .Qmd\n\nLook familiar if you’ve used RMarkdown\nYAML header has metadata and settings\nMarkdown body\nCode chunks with R, Python, Julia, or other code\n\nCreate .Qmd and play\n\nin header: title, author, date\nin body: headers, itallics, bold, code, links\nRender as html\n\nDemo visual editor\n\nSwitch back and forth\n“Add anything” menu with cmd-/cmd-/\n\nRunning code in code chunks\n#| label: setup\n#| include: false\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(knitr)\n#| label: fig-box\n#| fig-cap: \"Boxplot of body mass in grams by penguin sex.\"\nggplot(penguins, aes(x = sex, y = body_mass_g)) + geom_boxplot()\n#| label: tbl-sample\n#| tbl-cap: \"Sample sizes of penguins by sex and island\"\ntable(penguins$sex, penguins$island, useNA = \"always\") |&gt; kable()\nCode chunk options\n\nDemo some common ones like label, echo: false, fig-cap , code-fold\nDemo applying to entire doc in YAML header\n\nAdd TOC (toc: true)\nEquations (look up how to cross ref equations during lesson)\nCitations (from DOI or from Zenodo)\nCross refs\nCallouts\nMention journal articles (check out AGU format example https://quarto-journals.github.io/agu/)\nPoint students toward tutorial and full documentation"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#shell-commands",
    "href": "lessons/11-getting-help/slides.html#shell-commands",
    "title": "Getting Help",
    "section": "Shell commands",
    "text": "Shell commands\nls --help\nman ls\ngit --help"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#in-rstudio",
    "href": "lessons/11-getting-help/slides.html#in-rstudio",
    "title": "Getting Help",
    "section": "In RStudio",
    "text": "In RStudio"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#package-websites",
    "href": "lessons/11-getting-help/slides.html#package-websites",
    "title": "Getting Help",
    "section": "Package Websites",
    "text": "Package Websites\n\n\n\n\n\n\nPackage websites often are the same exact content as help pages + vignettes, but easier to read and examples have already been rendered"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#asking-questions",
    "href": "lessons/11-getting-help/slides.html#asking-questions",
    "title": "Getting Help",
    "section": "Asking questions",
    "text": "Asking questions"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#asking-questions-1",
    "href": "lessons/11-getting-help/slides.html#asking-questions-1",
    "title": "Getting Help",
    "section": "Asking questions",
    "text": "Asking questions"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#minimal-reproducible-examples",
    "href": "lessons/11-getting-help/slides.html#minimal-reproducible-examples",
    "title": "Getting Help",
    "section": "Minimal Reproducible Examples",
    "text": "Minimal Reproducible Examples\n\n\n\n\n\n\nThe reprex package helps you make reproducible examples and format them for pasting into GitHub, Slack, etc."
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#reporting-bugs-or-is-it-just-me",
    "href": "lessons/11-getting-help/slides.html#reporting-bugs-or-is-it-just-me",
    "title": "Getting Help",
    "section": "Reporting bugs (or is it just me?)",
    "text": "Reporting bugs (or is it just me?)\n\n\nPay attention when opening an issue on GitHub—sometimes they are only supposed to be used for bug reports or feature requests and will direct you elsewhere for asking for help"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#asking-ai-not-recommended",
    "href": "lessons/11-getting-help/slides.html#asking-ai-not-recommended",
    "title": "Getting Help",
    "section": "Asking AI (not recommended)",
    "text": "Asking AI (not recommended)"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#beware-of-stochastic-parrots1",
    "href": "lessons/11-getting-help/slides.html#beware-of-stochastic-parrots1",
    "title": "Getting Help",
    "section": "Beware of stochastic parrots1",
    "text": "Beware of stochastic parrots1\n\nLLMs don’t understand, but are good at mimicry\nUse with care:\n\nMay be wrong\nMay be inconsistent\n\n\n\n\nTools like ChatGPT pose possible ethical issues\n\nPlagiarism\nLabor conditions\nInputs may be sent to parent companies"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#getting-help-at-uarizona",
    "href": "lessons/11-getting-help/slides.html#getting-help-at-uarizona",
    "title": "Getting Help",
    "section": "Getting help at UArizona",
    "text": "Getting help at UArizona"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#getting-help-at-uarizona-1",
    "href": "lessons/11-getting-help/slides.html#getting-help-at-uarizona-1",
    "title": "Getting Help",
    "section": "Getting help at UArizona",
    "text": "Getting help at UArizona"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#resources-ai-tools",
    "href": "lessons/11-getting-help/slides.html#resources-ai-tools",
    "title": "Getting Help",
    "section": "Resources: AI tools",
    "text": "Resources: AI tools\n\nhttps://ecoevo.social/@cboettig/110934209180569370\nhttps://www.infoworld.com/article/3694611/8-chatgpt-tools-for-r-programming.html\nhttps://dl.acm.org/doi/abs/10.1145/3442188.3445922\nhttps://medium.com/@konstantine_45825/chatgpt-is-no-stochastic-parrot-but-it-also-claims-that-1-is-greater-than-1-e3cd1fc303e0"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#resources-ua-community",
    "href": "lessons/11-getting-help/slides.html#resources-ua-community",
    "title": "Getting Help",
    "section": "Resources: UA community",
    "text": "Resources: UA community\n\nUA Data Science Institute\nUA Data Science Slack\nCCT Drop-in Hours, 9-10 on Tuesdays\n\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/11-getting-help/slides.html#footnotes",
    "href": "lessons/11-getting-help/slides.html#footnotes",
    "title": "Getting Help",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://en.wikipedia.org/wiki/Stochastic_parrot"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#papers-with-open-code-are-cited-more",
    "href": "lessons/10-get-credit/slides.html#papers-with-open-code-are-cited-more",
    "title": "Sharing Code & Getting Credit",
    "section": "Papers with open code are cited more",
    "text": "Papers with open code are cited more\n\n\n\n\n\n\n\nFigure 2: Predicted impacts of code-sharing on cumulative citations. Predicted values shown are for the mean Impact Factor (3.0) across the publications analyzed. Fully open = open code and open-access publication; fully closed = closed-access publication and no publicly available code. Predictions are based on estimated model coeficients (Table 2)\n\n\nFigure 2 from Maitner et al. (2023)"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#getting-credit-for-your-code",
    "href": "lessons/10-get-credit/slides.html#getting-credit-for-your-code",
    "title": "Sharing Code & Getting Credit",
    "section": "Getting credit for your code",
    "text": "Getting credit for your code\nMake it easier for people to cite your code\n\nProvide a CITATION file on GitHub\nArchive to get a digital object identifier (DOI)\nInclude DOI and/or citation in your paper’s Data/Code Availability Statement"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#citation.cff",
    "href": "lessons/10-get-credit/slides.html#citation.cff",
    "title": "Sharing Code & Getting Credit",
    "section": "CITATION.cff",
    "text": "CITATION.cff\n\n\nA CITATION.cff file contains citation information written in YAML\nAdding a CITATION.cff file to your repo…\n\nPuts a “cite this repository” button on GitHub\nHelps code archive tools fill out metadata correctly when you archive your repo\n\nLearn more and create your own: https://citation-file-format.github.io/\nSee example here"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#options-for-archiving",
    "href": "lessons/10-get-credit/slides.html#options-for-archiving",
    "title": "Sharing Code & Getting Credit",
    "section": "Options for archiving",
    "text": "Options for archiving\n\n\n\n\n\n\n\n\n\n\nService\nVersioned DOIs?\nFree?\nGitHub integration?\nNotes\n\n\n\n\nZenodo\nYes\nYes\nYes\nBacked by CERN, built with code and data in mind\n\n\nDryad\nYes\nNo, but some publishers cover cost\nNo\nIntended for data, not code. Partners with Zenodo\n\n\nFigshare\nYes\nYes\nYes\nCan’t choose your license\n\n\nUA ReDATA\nYes\nYes (for UA researchers)\nNo\nUniversity of Arizona Libraries\n\n\n\n\n\nMore detailed comparisons here"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#zenodo-archiving-demo",
    "href": "lessons/10-get-credit/slides.html#zenodo-archiving-demo",
    "title": "Sharing Code & Getting Credit",
    "section": "Zenodo Archiving Demo",
    "text": "Zenodo Archiving Demo\n\nLog in to sandbox.zenodo.org using GitHub1\nIn drop-down menu with your username, select “GitHub”\nFind your repo in the list and flip the switch next to it\nGo to your repo on GitHub and make a release\nOn sandbox.zenodo.org, get markdown to add a badge to README.md\n\n\nDemo archiving a repo with sandbox.zenodo.org and have everyone follow along with the repo they’ve been using for notes.\n\n\n\n\n\nsandbox.zenodo.org is just for practice. Use zenodo.org when you’re ready to get a real DOI!↩︎"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#when-to-archive",
    "href": "lessons/10-get-credit/slides.html#when-to-archive",
    "title": "Sharing Code & Getting Credit",
    "section": "When to archive?",
    "text": "When to archive?\nNo hard rules on this, but my preference:\n\nJust before submitting a manuscript: release v 0.1.0\nAfter responding to reviewers or re-submitting: increment “minor” version, e.g. v 0.2.0\nAfter acceptance: release v 1.0.0"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#reproducible-computational-environments",
    "href": "lessons/10-get-credit/slides.html#reproducible-computational-environments",
    "title": "Sharing Code & Getting Credit",
    "section": "Reproducible computational environments",
    "text": "Reproducible computational environments\nCongrats! Your code is reproducible! But what about ….\n\n\nin 3 years when an R package is updated with breaking changes?\non a different operating system with different versions of system libraries?\n\n\n\nCapture the computational environment for ultimate reproducibility"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#reproducible-environments-with-renv",
    "href": "lessons/10-get-credit/slides.html#reproducible-environments-with-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Reproducible Environments With renv",
    "text": "Reproducible Environments With renv\n\nThe renv package records R packages and their versions used in your project\nProjects are isolated with their own set of packages\nCan restore exact versions of packages recorded"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#using-renv",
    "href": "lessons/10-get-credit/slides.html#using-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Using renv",
    "text": "Using renv\n\n\n\n\n\n\nExercise\n\n\nInstall renv and activate it for a project with renv::init(). Inspect the files that were created.\n\n\n\n\n\n\n\n\n\n\nIf you change your mind …\n\n\nTo deactivate renv, run renv::deactivate(). To also remove all the files it created, run renv::deactivate(clean = TRUE) instead.\n\n\n\n\nBriefly discuss the contents of renv.lock, .Rprofile, and renv/. Point out renv/.gitignore — trust it about which files should go on GitHub."
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#limitations-of-renv",
    "href": "lessons/10-get-credit/slides.html#limitations-of-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Limitations of renv",
    "text": "Limitations of renv\n\nOnly tracks R packages 1\nCan’t reproduce operating system or system libraries\nSometimes quite annoying to use (but it’s getting better!)\n\n\n\n\n\nrenv can also be set up to track Python dependencies↩︎"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#more-reproducibility-with-docker",
    "href": "lessons/10-get-credit/slides.html#more-reproducibility-with-docker",
    "title": "Sharing Code & Getting Credit",
    "section": "More Reproducibility with Docker",
    "text": "More Reproducibility with Docker\nDocker containers…\n\n\nAre isolated “virtual machines”\nRun Linux regardless of the host machine OS\nCan be built with specific versions of OS, system libraries, and R packages (using renv)\nCan be downloaded and run from the command line"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#hold-up-what-is-reproducibility-again",
    "href": "lessons/10-get-credit/slides.html#hold-up-what-is-reproducibility-again",
    "title": "Sharing Code & Getting Credit",
    "section": "Hold up, what is reproducibility again?",
    "text": "Hold up, what is reproducibility again?\nThere is a reproducibility trade-off for using renv and Docker—robust computational reproducibility but harder for novices to reproduce\n\nIf you use these tools, provide:\n\nInstructions on how to run code\nWhere to go for help troubleshooting\nWays to access your code without extra layers"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#resources",
    "href": "lessons/10-get-credit/slides.html#resources",
    "title": "Sharing Code & Getting Credit",
    "section": "Resources",
    "text": "Resources\n\nrenv website\nCITATION.cff info and creator tool\nZenodo-GitHub integration\nReproducible computational environments with Docker"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#next-week",
    "href": "lessons/10-get-credit/slides.html#next-week",
    "title": "Sharing Code & Getting Credit",
    "section": "Next week",
    "text": "Next week\n\nTuesday 10/18: Drop-in co-working session.\n\nCome and work on your reproducibility colloquium project/presentation\n\nThursday 10/10: Reproducibility Colloquium!\n\nInvite your lab-mates, PI, friends!"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#references",
    "href": "lessons/10-get-credit/slides.html#references",
    "title": "Sharing Code & Getting Credit",
    "section": "References",
    "text": "References\n\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\n\nMaitner, Brian, Paul Santos-Andrade, Luna Lei, George Barbosa, Brad Boyle, Matiss Castorena, Brian Enquist, et al. 2023. “Code Sharing Increases Citations, but Remains Uncommon.” https://doi.org/10.21203/rs.3.rs-3222221/v1."
  },
  {
    "objectID": "colloquium.html",
    "href": "colloquium.html",
    "title": "Reproducibility Colloquium",
    "section": "",
    "text": "The final session of this workshop series is our ✨Reproducibility Colloquium✨, where you all get a chance to share what you’ve learned with each other and anyone you’d like to invite to attend. You are invited to give a short (about 5min) talk with slides (about 5). To make this as low stakes as possible, here is an outline you may follow when putting together your presentation."
  },
  {
    "objectID": "colloquium.html#footnotes",
    "href": "colloquium.html#footnotes",
    "title": "Reproducibility Colloquium",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is a good opportunity to practice an elevator pitch! Try to keep it to just a couple sentences—just enough background to give some context to your data and code. The goal of the presentation is to focus on your project organization and reproducibility, not the details of your research topic.↩︎"
  },
  {
    "objectID": "lessons/10-get-credit/notes.html",
    "href": "lessons/10-get-credit/notes.html",
    "title": "Getting Credit For Your Hard Work",
    "section": "",
    "text": "Add a basic CITATION.cff file to your repo\nPractice the wrap-up steps to publish/archive a research compendium with a DOI.\nUnderstand concept of a reproducible computational environment.\nLearn renv and discuss Docker (concept)."
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#objective",
    "href": "lessons/10-get-credit/notes.html#objective",
    "title": "Getting Credit For Your Hard Work",
    "section": "",
    "text": "Add a basic CITATION.cff file to your repo\nPractice the wrap-up steps to publish/archive a research compendium with a DOI.\nUnderstand concept of a reproducible computational environment.\nLearn renv and discuss Docker (concept)."
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#lesson-outline",
    "href": "lessons/10-get-credit/notes.html#lesson-outline",
    "title": "Getting Credit For Your Hard Work",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nWhy share code?\n\nFacilitate discussion\nShow figure from Maitner et al. (2023)\nHigher citations\nTo “pay it forward” to other researchers\nTo demonstrate your skills\nTo facilitate error correction\n\nGetting credit for code\n\nCode is not cited often, but partly because it’s not made easy to cite\n\nCITATION.cff\n\nShow CITATION.cff files for this repo and maybe one for a research compendium\nShow “cite this” button on GitHub\nEveryone use CITATION.cff creation tool CFFINIT to create a basic CITATION.cff\nMaybe mention cffr::cff_validate()\n\nArchiving\n\nExercise: guide everyone through archiving a repo with Zenodo using sandbox.zenodo.org\nAdd DOI badge to readme\nUpdate CITATION.cff with DOI\n\nrenv\n\nDiscuss why\nAsk students to activate renv for a project and inspect files it creates\nExplain how renv works, especially renv::status() , and renv::snapshot()\nClone demo repo with renv files\n\nShow that no packages are available initially (project is isolated)\nrun renv::restore()\n\n\nDocker (if time)\n\nConceptual overview of what it is\nDiscuss how tools like renv and Docker both help and hinder reproducibility"
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#homework",
    "href": "lessons/10-get-credit/notes.html#homework",
    "title": "Getting Credit For Your Hard Work",
    "section": "Homework",
    "text": "Homework\n\nPrep for reproducibility colloquium"
  },
  {
    "objectID": "lessons/11-getting-help/notes.html",
    "href": "lessons/11-getting-help/notes.html",
    "title": "Getting help",
    "section": "",
    "text": "Slides"
  },
  {
    "objectID": "lessons/11-getting-help/notes.html#objectives",
    "href": "lessons/11-getting-help/notes.html#objectives",
    "title": "Getting help",
    "section": "Objectives",
    "text": "Objectives\n\nKnow your options for finding help\nUnderstand how to create a minimal reproducible example to get better help"
  },
  {
    "objectID": "lessons/11-getting-help/notes.html#live-codingdiscussion-options-for-finding-help",
    "href": "lessons/11-getting-help/notes.html#live-codingdiscussion-options-for-finding-help",
    "title": "Getting help",
    "section": "Live coding/discussion: options for finding help",
    "text": "Live coding/discussion: options for finding help\n\n--help flag\nman pages\n? in R\nPackage websites (found with google or through CRAN page)\n\nThese often are the same material as help files + vignettes, but easier to read and examples are rendered on web\n\nStackOverflow\n\nPeople aren’t always the friendliest, but making a reprex helps you get good answers\n\nMinimal reproducible examples with reprex\n\nDemo RStudio addin\n\nChatGPT\n\nNot recommended for beginners!\nSometimes (~50% by some estimates) gives the wrong answer, difficult to spot mistakes if you’re a beginner"
  },
  {
    "objectID": "lessons/12-drop-in/notes.html",
    "href": "lessons/12-drop-in/notes.html",
    "title": "Drop-in / Q&A",
    "section": "",
    "text": "We asked learners to vote on the following topics for a mini-lesson for the last session before the show-and-tell session:\nThey overwhelmingly chose #3"
  },
  {
    "objectID": "lessons/12-drop-in/notes.html#targets",
    "href": "lessons/12-drop-in/notes.html#targets",
    "title": "Drop-in / Q&A",
    "section": "Targets",
    "text": "Targets\n\nShow slides from part 1 of previous targets workshop\nDemo repo (targets version on a branch): https://github.com/cct-datascience/targets-demo/tree/with-targets\n\nExplore files\n\nR/\n_targets.R\n\nDemonstrate tar_visnetwork(), tar_make(), tar_read()\n\nInvestigate _targets/\n\nDemonstrating invalidating a target by adding species to the model fit by lm() in one of the functions in fit_models.R.\n\nre-run tar_visnetwork() and tar_make()\n\n\nExplore a medium complexity targets project on GitHub: https://github.com/ecohealthalliance/mpx-diagnosis\n\nmaybe try to reproduce it\n\nMention that targets can be configured to work on UA HPC to run individual targets as SLURM jobs or multiple cores with Open on Demand.\n\nOpen on Demand example: https://github.com/cct-datascience/targets-uahpc\n\nDirect people to targets manual and discussions"
  },
  {
    "objectID": "lessons/12-drop-in/notes.html#executing-r-code-in-the-shell-shell-code-in-r",
    "href": "lessons/12-drop-in/notes.html#executing-r-code-in-the-shell-shell-code-in-r",
    "title": "Drop-in / Q&A",
    "section": "Executing R code in the shell / shell code in R",
    "text": "Executing R code in the shell / shell code in R\n\nExample of running R and Python scripts from bash:\nRscript 01-save_penguins.R\nbash 02-rename_penguins.sh\npython 03-print_penguins.py\nExample of multi-lingual quarto doc"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#review-of-last-lesson",
    "href": "lessons/2-markdown-quarto/slides.html#review-of-last-lesson",
    "title": "Documentation & Literate Programming",
    "section": "Review of last lesson",
    "text": "Review of last lesson\n\nWhat questions do you have?\nWhat happened as you were trying to organize a research compendium?\n\nVictories?\nStumbling blocks?"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#literate-programming",
    "href": "lessons/2-markdown-quarto/slides.html#literate-programming",
    "title": "Documentation & Literate Programming",
    "section": "Literate Programming",
    "text": "Literate Programming\n\nCode is interwoven with human-language notes, comments, and documentation.\nSome kind of “engine” handles executing the code and weaving together prose, code, and results.\nAllows for extended comments on code and reproducible reports and manuscripts"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#what-is-quarto",
    "href": "lessons/2-markdown-quarto/slides.html#what-is-quarto",
    "title": "Documentation & Literate Programming",
    "section": "What is Quarto?",
    "text": "What is Quarto?\n“An open-source scientific and technical publishing system”\n\n\nMix markdown, code, and the output of code\nProduce beautifully formatted documents in a variety of formats (html, Word, pdf, etc.)\nData analysis notebook\nPresentations for collaborators\nReproducible manuscripts\n…and more!"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#how-does-quarto-work",
    "href": "lessons/2-markdown-quarto/slides.html#how-does-quarto-work",
    "title": "Documentation & Literate Programming",
    "section": "How does Quarto work?",
    "text": "How does Quarto work?\n\nCommand line tool, not an R package, but works well with RStudio\n\n\n\nknitr or jupyter are used to convert code chunks into markdown, pandoc converts markdown into output"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#create-a-new-quarto-document",
    "href": "lessons/2-markdown-quarto/slides.html#create-a-new-quarto-document",
    "title": "Documentation & Literate Programming",
    "section": "Create a new Quarto document",
    "text": "Create a new Quarto document\nIn RStudio: File &gt; New File &gt; Quarto Document\nClick “Render” to see the rendered output"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#anatomy-of-a-.qmd-file",
    "href": "lessons/2-markdown-quarto/slides.html#anatomy-of-a-.qmd-file",
    "title": "Documentation & Literate Programming",
    "section": "Anatomy of a .Qmd file",
    "text": "Anatomy of a .Qmd file\n\n\nmyreport.qmd\n\n---\ntitle: \"My Report\"\nauthor: \"Eric Scott\"\nformat: \n  html:\n    toc: true\n---\n\n```{r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(gapminder)\n```\n\n## Data\n\nMy data source is the [gapminder](https://www.gapminder.org/) dataset.\n\n```{r}\nhead(gapminder)\n```\n\n\nIf this looks familiar to RMarkdown users, that’s because Quarto was built on lessons learned from developing RMarkdown. It includes all the features of RMarkdown and more."
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#yaml",
    "href": "lessons/2-markdown-quarto/slides.html#yaml",
    "title": "Documentation & Literate Programming",
    "section": "YAML",
    "text": "YAML\n“Yet another markup language”\n\nCommonly used for configuration files\nkey: value pairs\nNesting indicated by indentation with 2 spaces"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#markdown",
    "href": "lessons/2-markdown-quarto/slides.html#markdown",
    "title": "Documentation & Literate Programming",
    "section": "Markdown",
    "text": "Markdown\nMarkdown is a “markup language” that let’s you write plain text to indicate formatting. For example:\n\n**bold text** becomes bold text\n~~strikethrough~~ becomes strikethrough\n$E = mc^2$ becomes \\(E = mc^2\\)\n[link](https://www.google.com) becomes link\n`code()` becomes code()\n\nCheck Help &gt; Markdown quick reference in RStudio"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#common-markdown-pitfalls",
    "href": "lessons/2-markdown-quarto/slides.html#common-markdown-pitfalls",
    "title": "Documentation & Literate Programming",
    "section": "Common markdown pitfalls",
    "text": "Common markdown pitfalls\nSpaces between elements matter! How would you fix each of these?\n###Heading 3\n###Heading 3\n\nColors:\n- red\n- green\nColors: - red - green\n\n\n1.Number one\n2.Number two\n1.Number one 2.Number two"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#common-markdown-pitfalls-1",
    "href": "lessons/2-markdown-quarto/slides.html#common-markdown-pitfalls-1",
    "title": "Documentation & Literate Programming",
    "section": "Common markdown pitfalls",
    "text": "Common markdown pitfalls\nSpaces within elements don’t matter!\nThis     sentence still  gets    rendered  correctly!\nThis sentence still gets rendered correctly!\nSingle line breaks don't separate paragraphs.\nSee?\n\nYou need two line breaks for that!\nSingle line breaks don’t separate paragraphs. See?\nYou need two line breaks for that!"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#code",
    "href": "lessons/2-markdown-quarto/slides.html#code",
    "title": "Documentation & Literate Programming",
    "section": "Code",
    "text": "Code\n\nCode chunks can be R, Python, or other languages\nIf R, code is executed by knitr engine, otherwise by jupyter\nChunk options as YAML (#| key: value) modify execution behavior or output formatting"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#our-turn",
    "href": "lessons/2-markdown-quarto/slides.html#our-turn",
    "title": "Documentation & Literate Programming",
    "section": "Our turn",
    "text": "Our turn\n\nCreate a new Quarto Document\nPractice editing and rendering\nExplore the Visual editor mode\nAdd citations and cross-references"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#readme.md",
    "href": "lessons/2-markdown-quarto/slides.html#readme.md",
    "title": "Documentation & Literate Programming",
    "section": "README.md",
    "text": "README.md\n\nYour README.md uses a simple version of markdown, and will get formatted nicely once we put it on GitHub\nYou can use the visual editor on .md files also\nIf you need to have code executed in your README, you can use format: gfm for “GitHub Flavored Markdown”"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#learning-more-getting-help",
    "href": "lessons/2-markdown-quarto/slides.html#learning-more-getting-help",
    "title": "Documentation & Literate Programming",
    "section": "Learning More & Getting Help",
    "text": "Learning More & Getting Help\n\nGetting started with Quarto tutorial\nQuarto for Academics talk\nFull Quarto guide and reference (searchable!)\n#quarto channel in UA Data Science Slack\nRendering to GitHub Flavored Markdown"
  },
  {
    "objectID": "lessons/2-markdown-quarto/slides.html#your-tasks",
    "href": "lessons/2-markdown-quarto/slides.html#your-tasks",
    "title": "Documentation & Literate Programming",
    "section": "Your tasks",
    "text": "Your tasks\n\nUse Quarto to create a report for your compendium\nTry converting a R script with a lot of comments into a Quarto document instead\n\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/4-git/slides.html#section",
    "href": "lessons/4-git/slides.html#section",
    "title": "Version Control With git",
    "section": "",
    "text": "Version Control\nSemi-automated system for tracking changes with unlimited “undo”"
  },
  {
    "objectID": "lessons/4-git/slides.html#why-learn-version-control",
    "href": "lessons/4-git/slides.html#why-learn-version-control",
    "title": "Version Control With git",
    "section": "Why Learn Version Control?",
    "text": "Why Learn Version Control?\n\nTrack development of research projects like a lab notebook\nKeep project in sync across computers including HPC\nShare and collaborate on projects in a clear and manageable way"
  },
  {
    "objectID": "lessons/4-git/slides.html#git-and-github-for-version-control",
    "href": "lessons/4-git/slides.html#git-and-github-for-version-control",
    "title": "Version Control With git",
    "section": "Git and GitHub for version control",
    "text": "Git and GitHub for version control\n\nGit: version control on your computer.\nGitHub: connects your local Git to the cloud.\n\nProject management\nCollaboration\nVisual interface\nOptional, but we will be using it!"
  },
  {
    "objectID": "lessons/4-git/slides.html#rstudio-new-project-wizard",
    "href": "lessons/4-git/slides.html#rstudio-new-project-wizard",
    "title": "Version Control With git",
    "section": "RStudio New Project Wizard",
    "text": "RStudio New Project Wizard\n\nBefore you create the directory…\nFile &gt; New R Project…"
  },
  {
    "objectID": "lessons/4-git/slides.html#rstudio-new-project-wizard-1",
    "href": "lessons/4-git/slides.html#rstudio-new-project-wizard-1",
    "title": "Version Control With git",
    "section": "RStudio New Project Wizard",
    "text": "RStudio New Project Wizard"
  },
  {
    "objectID": "lessons/4-git/slides.html#git-init",
    "href": "lessons/4-git/slides.html#git-init",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init\n\nCreate a new directory (or R project) on your computer"
  },
  {
    "objectID": "lessons/4-git/slides.html#git-init-1",
    "href": "lessons/4-git/slides.html#git-init-1",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init"
  },
  {
    "objectID": "lessons/4-git/slides.html#git-init-2",
    "href": "lessons/4-git/slides.html#git-init-2",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init\n\nNavigate to it on the command line\nRun git init from the command line"
  },
  {
    "objectID": "lessons/4-git/slides.html#git-init-3",
    "href": "lessons/4-git/slides.html#git-init-3",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init"
  },
  {
    "objectID": "lessons/4-git/slides.html#usethisuse_git",
    "href": "lessons/4-git/slides.html#usethisuse_git",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()\n\nCreate a new R Project"
  },
  {
    "objectID": "lessons/4-git/slides.html#usethisuse_git-1",
    "href": "lessons/4-git/slides.html#usethisuse_git-1",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()"
  },
  {
    "objectID": "lessons/4-git/slides.html#usethisuse_git-2",
    "href": "lessons/4-git/slides.html#usethisuse_git-2",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()\n\nOpen the R Project\nFrom inside the R project, run…"
  },
  {
    "objectID": "lessons/4-git/slides.html#usethisuse_git-3",
    "href": "lessons/4-git/slides.html#usethisuse_git-3",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()"
  },
  {
    "objectID": "lessons/7-data-manipulation/notes.html",
    "href": "lessons/7-data-manipulation/notes.html",
    "title": "Data manipulation",
    "section": "",
    "text": "Use git branches in the “real world”\nReproducibly clean, summarize, and organize dataframes using tidyverse packages\nUnderstand how R stores different data types (data frames, vector types, missing data)\nKnow what the tidyverse is, how it differs from base R, and the philosophy behind using it here.\nUse the pipe to chain operations together\nUse dplyr functions to subset data (select, filter; logic and select fxns including where, ==, %in%, !) and manipulate data (mutate; lubridate; split-apply-combine)\nUse tidyr functions to reshape data (pivot_wider and pivot_longer)"
  },
  {
    "objectID": "lessons/7-data-manipulation/notes.html#objective",
    "href": "lessons/7-data-manipulation/notes.html#objective",
    "title": "Data manipulation",
    "section": "",
    "text": "Use git branches in the “real world”\nReproducibly clean, summarize, and organize dataframes using tidyverse packages\nUnderstand how R stores different data types (data frames, vector types, missing data)\nKnow what the tidyverse is, how it differs from base R, and the philosophy behind using it here.\nUse the pipe to chain operations together\nUse dplyr functions to subset data (select, filter; logic and select fxns including where, ==, %in%, !) and manipulate data (mutate; lubridate; split-apply-combine)\nUse tidyr functions to reshape data (pivot_wider and pivot_longer)"
  },
  {
    "objectID": "lessons/7-data-manipulation/notes.html#lesson-outline",
    "href": "lessons/7-data-manipulation/notes.html#lesson-outline",
    "title": "Data manipulation",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview from last week\nWarm-up: create a branch for today’s work\nSlides/discussion: using R for reproducible data analysis\n\nWhy use R?\nWhat is the tidyverse and why use it?\nInstall dplyr and tidyr\n\nLive coding: How R thinks about data\n\nData carpentry R ecology revamp episode #2\nData frames\nVectors and data types\nMissing data\n\nLive coding: dplyr and tidyr\n\nData carpentry R ecology revamp episode #3\nRecent DC + R lesson\nChaining lines together with the pipe\n\n%&gt;%, |&gt;\n\nSubsetting and filtering data\n\nincl. selection and pick https://dplyr.tidyverse.org/reference/dplyr_tidy_select.html\n\nAdding columns\nSplit-apply-combine\nReshaping\n\nLive coding: advanced tidyverse topics\n\nOptions: across; dates; advanced joins; others?\n\nLive coding/discussion: getting help\n\nreprex\n\nLive coding: practice modify-add-commit cycle\nHomework: None"
  },
  {
    "objectID": "lessons/7-data-manipulation/notes.html#installation-materials",
    "href": "lessons/7-data-manipulation/notes.html#installation-materials",
    "title": "Data manipulation",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nInstall R packages ‘dplyr’, ‘tidyr’, ‘readr’\nData carpentry R ecology revamp episode #2\nData carpentry R ecology revamp episode #3"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/notes.html",
    "href": "lessons/8-intermediate-r-1/notes.html",
    "title": "Intermediate R programming I",
    "section": "",
    "text": "Understand the utility of writing your own functions and managing control flow.\nWrite functions and if/else statements to improve code readability and reusability\nCreate pull requests updating a git repo with new code."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/notes.html#objective",
    "href": "lessons/8-intermediate-r-1/notes.html#objective",
    "title": "Intermediate R programming I",
    "section": "",
    "text": "Understand the utility of writing your own functions and managing control flow.\nWrite functions and if/else statements to improve code readability and reusability\nCreate pull requests updating a git repo with new code."
  },
  {
    "objectID": "lessons/8-intermediate-r-1/notes.html#lesson-outline",
    "href": "lessons/8-intermediate-r-1/notes.html#lesson-outline",
    "title": "Intermediate R programming I",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview from last session\nWarm-up\n\nUpdate working branch from upstream\n\nSlides/lecture: Why write functions?\n\nBase on DC semester biology lesson\nUnderstandable and reusable code\n\nHuman-understandable chunks\nDesigned to be reused\n\n\nLive-coding: functions\n\nFunction basics from DC semester lesson\nCreate new R script for functions content, and another new R script for control flow (ifelse and for loops) content. Put both scripts into repro-DS-workshop repo\nDiscuss ordering of an R script\n\nSlides/lecture: control flow\n\nExamples of use of if/else statements (find some real-world examples)\nDC semester on conditionals\nReview conditional logic\nConditionals outside functions\nConditionals inside functions\n\nLive-coding: practice commit + PR\nDiscussion: application to own work + showcase\nHomework:\n\nCreate a plan for applying these skills to their own research projects. Can apply different parts to different projects, or more integratively to one single project. Some possibilities:\n\nTurn the project folder for one of your current research project into a git/GitHub repo and/or R project\nModify an R script to use functions, if/for loops, or format code according to best practices\nImprove file and folder organization for project or your entire computer!\n\nFind a section of own code to turn into a function"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/notes.html#installation-materials",
    "href": "lessons/8-intermediate-r-1/notes.html#installation-materials",
    "title": "Intermediate R programming I",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nData Carpentry for Biologists functions lecture\nData Carpentry for Biologists conditionals lecture"
  },
  {
    "objectID": "lessons/8-intermediate-r-1/notes.html#notes-from-before",
    "href": "lessons/8-intermediate-r-1/notes.html#notes-from-before",
    "title": "Intermediate R programming I",
    "section": "Notes from before",
    "text": "Notes from before\n\nReview\nAsk to share cleaning up of example script, their own script, or their research project folder from lesson 5.\n\n\nModifications\n\nFor functions lecture, had them do only the “Use and Modify” exercise\nFrom conditionals lecture, only did “if statements” section\nFrom latter, only did “Basic If Statements” #2 exercise\nAdded on brief explanation of ifelse, using the example of ifelse(length == 5, \"correct\", \"incorrect\")\nMention case_when from dplyr for more complicated if & else steps\n\n\n\nTeaching notes\n\nBefore doing functions and conditions, demonstrate updating local cct-organization repo from upstream after adding a commit to the upstream\nCreate new R script for functions content, and another new R script for control flow (ifelse and for loops) content. Put both scripts into repro-DS-workshop repo\nMention functions are often used with for loops or apply statements\nAfter functions, mention consistent order of sections in scripts; example is libraries, read in data, functions, executing functions\nInclude real world examples of if and ifelse statements to motivate their use, especially for checking if files already exist\nDemonstrate making a new branch and opening up a pull request in their repro-DS-workshop repo at the end of each set of material; can merge pull request\n\n\n\nHomework\nCreate a plan for applying these skills to their own research projects. Can apply different parts to different projects, or more integratively to one single project. Some possibilities:\n\nTurn the project folder for one of your current research project into a git/GitHub repo and/or R project\nModify an R script to use functions, if/for loops, or format code according to best practices\nImprove file and folder organization for project or your entire computer!"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/notes.html",
    "href": "lessons/9-intermediate-r-2/notes.html",
    "title": "Intermediate R programming II",
    "section": "",
    "text": "Learners will learn how to make their R code more reproducible using for loops and the apply family of functions."
  },
  {
    "objectID": "lessons/9-intermediate-r-2/notes.html#objective",
    "href": "lessons/9-intermediate-r-2/notes.html#objective",
    "title": "Intermediate R programming II",
    "section": "",
    "text": "Learners will learn how to make their R code more reproducible using for loops and the apply family of functions."
  },
  {
    "objectID": "lessons/9-intermediate-r-2/notes.html#installation-materials",
    "href": "lessons/9-intermediate-r-2/notes.html#installation-materials",
    "title": "Intermediate R programming II",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nData Carpentry for Biologists for loop lecture \nData Carpentry for Biologists iteration without loops lecture? \n\n\nReview\nCan share their plans for apply skills to their research. Lead optional discussion on when to use base R vs. tidyverse packages/functions.\n\n\nModifications\n\nFor for loops lecture:\n\nAt “Do Tasks 3-4…”, do “Basic For Loop” exercises #2 & #3\nSkip sections “Looping over multiple values” and “Looping with functions”\nStop at “Looping over files” due to zip download issues\n\nFor apply lecture:\n\nDo “Size Estimates With Maximum” exercise\nDo “Size Estimates Vectorized 2” exercise\nStop after first section in “Other apply functions (optional)” section"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/notes.html#teaching-notes",
    "href": "lessons/9-intermediate-r-2/notes.html#teaching-notes",
    "title": "Intermediate R programming II",
    "section": "Teaching notes",
    "text": "Teaching notes\n\nCreate new R script for these materials. Put script into repro-DS-workshop repo\nEmphasize using for loops using index or non-index methods. Index can be useful for reducing memory use and for storing results\nIf time, demonstrate combining if and for"
  },
  {
    "objectID": "lessons/9-intermediate-r-2/notes.html#homework",
    "href": "lessons/9-intermediate-r-2/notes.html#homework",
    "title": "Intermediate R programming II",
    "section": "Homework",
    "text": "Homework\nIdentify a script from a research project that could benefit from a for loop, apply, conditional, or function."
  },
  {
    "objectID": "lessons/1-project-management/notes.html",
    "href": "lessons/1-project-management/notes.html",
    "title": "Project Management and Documentation",
    "section": "",
    "text": "Learners will learn about and practice managing their projects using file structure and RStudio projects, and about current best practices and style guides for R coding."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#objective",
    "href": "lessons/1-project-management/notes.html#objective",
    "title": "Project Management and Documentation",
    "section": "",
    "text": "Learners will learn about and practice managing their projects using file structure and RStudio projects, and about current best practices and style guides for R coding."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#lesson-outline",
    "href": "lessons/1-project-management/notes.html#lesson-outline",
    "title": "Project Management and Documentation",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nIntroductions\nDiscuss reproducibility\nGive tour of course website & syllabus\n\nPoint out code of conduct\n\nBriefly demo Slack\nScreen setup\nDon’t save or load .RData!\nDiscuss general best practices for research compendia (use Carpentry lesson??)\n\nAll files needed for a project in the same folder (ideally)\nOrganize data, code, and outputs into different folders at a minimum\nNever edit raw data\nInclude documentation on what each file is/does in a README\n\nProject summary\nProject status (in progress, archived, just an idea?)\nHow to give credit\nStructure of repo (what files do what?)\nHow to reproduce results\nExample READMEs:\n\nhttps://github.com/Aariq/BACE-legacy-effects\nhttps://github.com/ecohealthalliance/amr-analysis\nhttps://github.com/atredennick/size-environment\n\n\n\nLive Coding: create an R project and add gapminder data to it\n\nShow file pane & connect to Windows Explorer / Finder\nShow how to make a file read-only\nDemo closing, opening, and switching projects\n\nHomework:\n\nApply one or more of the organizing principles of a research compendium to an existing research project."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#installation-materials",
    "href": "lessons/1-project-management/notes.html#installation-materials",
    "title": "Project Management and Documentation",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Introduction to R and RStudio episode\nSoftware Carpentry Project Management with RStudio episode"
  },
  {
    "objectID": "lessons/4-git/notes.html",
    "href": "lessons/4-git/notes.html",
    "title": "Version control with git",
    "section": "",
    "text": "Understand the concept and motivation of version control\nSet up git on their machine (email address linked to their GH account; --global config)\nUnderstand that repos == folders =can= .Rproj.\nInitialize a git repo associated with an RStudio project called pilot-analyses.\nUnderstand the modify-add-commit progression. Apply this by making modifications to some R code and then committing it to the pilot-analyses repo (git commands: status, log, diff, add, commit)\nUse .gitignore to selectively exclude files from git."
  },
  {
    "objectID": "lessons/4-git/notes.html#objective",
    "href": "lessons/4-git/notes.html#objective",
    "title": "Version control with git",
    "section": "",
    "text": "Understand the concept and motivation of version control\nSet up git on their machine (email address linked to their GH account; --global config)\nUnderstand that repos == folders =can= .Rproj.\nInitialize a git repo associated with an RStudio project called pilot-analyses.\nUnderstand the modify-add-commit progression. Apply this by making modifications to some R code and then committing it to the pilot-analyses repo (git commands: status, log, diff, add, commit)\nUse .gitignore to selectively exclude files from git."
  },
  {
    "objectID": "lessons/4-git/notes.html#lesson-outline",
    "href": "lessons/4-git/notes.html#lesson-outline",
    "title": "Version control with git",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview of last week\n\nAsk folks to share the diagram of their file system\nWarm-up with review question from the slide deck\n\nSlides/lecture: Intro to version control with git\n\nWhat is version control?\nWhy should I learn this? When will I need it?\n\nLive coding: git config\n\nSW Carpentry Git lesson 2 https://swcarpentry.github.io/git-novice/02-setup\nSetting up git using git config\n\nMake sure participants use their GH email/intended GH email\ngit verb options\ngit config --global core.editor \"vim\"\ngit verb --help\n\n\nLive coding: git init\n\nSW Carpentry Git lesson 3 https://swcarpentry.github.io/git-novice/03-create.html\nIntroduce the concept of a repository\nGo over 3 ways to init a git repo and when to use each\nBreak to all create a project + repo called pilot-analyses\n\nLive coding: git status\n\nUse git status to check that git init worked\nTalk about git status as a bridge to tracking changes.\n\nLive coding: Tracking changes\n\nSW Carpentry Git lesson 4 https://swcarpentry.github.io/git-novice/04-changes\nVisualize in slides\nCreate a blank R file (using RStudio point and click)\nMake comments/pseudocode changes.\ngit status\nGo through git add/commit cycle\nRepeat with additional changes, use git diff\nRepeat with multiple files\nUndo saved changes to a file using git restore\nUse git reset HEAD~ to undo the git add and git commit commands\n\nLive coding: .gitignore\n\nSW Carpentry Git lesson 6https://swcarpentry.github.io/git-novice/06-ignore\n.gitignore:\n\nDS_Store\nCreate a file and then ignore it.\n\n\n(Time permitting): SW Carpentry Git lesson 5\n\nhttps://swcarpentry.github.io/git-novice/05-history\nNavigating git history\n\nHomework:\n\nCreate a GitHub account if you don’t have one.\n(Optional) identify an existing folder and turn it into a repository."
  },
  {
    "objectID": "lessons/4-git/notes.html#installation-materials",
    "href": "lessons/4-git/notes.html#installation-materials",
    "title": "Version control with git",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Version Control with Git episode #2\nSoftware Carpentry Version Control with Git episode #3\nSoftware Carpentry Version Control with Git episode #4\nSoftware Carpentry Version Control with Git episode #6\n(optional) Software Carpentry Version Control with Git episode #5"
  },
  {
    "objectID": "lessons/6-github-collab/notes.html",
    "href": "lessons/6-github-collab/notes.html",
    "title": "Collaborating with GitHub",
    "section": "",
    "text": "Learners will fork and clone a repository on GitHub and use branches to open pull requests."
  },
  {
    "objectID": "lessons/6-github-collab/notes.html#objective",
    "href": "lessons/6-github-collab/notes.html#objective",
    "title": "Collaborating with GitHub",
    "section": "",
    "text": "Learners will fork and clone a repository on GitHub and use branches to open pull requests."
  },
  {
    "objectID": "lessons/6-github-collab/notes.html#lesson-outline",
    "href": "lessons/6-github-collab/notes.html#lesson-outline",
    "title": "Collaborating with GitHub",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nReview Homework:\n\nAnyone put a repo on GitHub? Any difficulties encountered?\n\nLive Coding: Collaborating with GitHub\n\nShare a repo with everyone & have everyone clone w/ RStudio\nAsk 1 (one) volunteer to make a change and practice commit + push\nInstructor makes commit + push, volunteer pulls\n\nLive Coding: Merge conflict\n\nInstructor makes commit to README and pushes to GitHub\nVolunteer makes commit to the same line of README and pushes without pulling first\nShould error for volunteer\n\nSlides: Resolving merge conflict\nLive Coding: Resolve merge conflict\n\nTry following the hints in the error and pull\nNew error about divergent branches\nThen have everyone set git config pull.rebase false\n\nWorking on branches (slides)\nLive Coding:\n\nMake a branch with your name in RStudio\nAdd your name to README and commit\nSwitch between branches and see the file change in RStudio AND in File Explorer / Finder\nPush & see branches on GitHub\n\nPull Requests (slides)\nLive Coding:\n\nHave everyone make a PR to add their name to the README\nDemo merging one or two & ask volunteer to resolve any merge conflicts\n\nForks (slides)\n\nDiscuss when you would work on a branch of a fork vs. working in a branch but on the same repo\n\nLive Coding:\n\nHave students create a fork of a second example repo and clone their fork\nIn pairs, have them practice making a branch, making changes, commit + push, and make a PR on GitHub\n\nHomework:\n\nMaybe try cloning a repo that you don’t have permission to push to to see what happens\nTry using usethis::pr_finish() on a branch that was already merged on GitHub and take note of what it does"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproducibility and Data Science in R",
    "section": "",
    "text": "Welcome to the syllabus for the CCT Data Science fall workshop series: Reproducibility and Data Science in R. If you didn’t register for the course this year, sign up for our mailing list to be notified when enrollment opens for next year’s iteration and to be notified of our other monthly workshops."
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Reproducibility and Data Science in R",
    "section": "Schedule",
    "text": "Schedule\nWe’ll meet on Tuesdays and Thursdays from 11am to 1pm via Zoom (link pinned in Slack channel)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLesson\nDate\nTheme\nTopic\nLinks\n\n\n\n\n1\nTue, 9/3\nManage & Organize\nProject managment and documentation\n\nslides\n\n\n\n2\nThu, 9/5\nDocument & Publish\nLiterate programming with Quarto\n\nslides\nexample qmd (also includes .bib file)\n\n\n\n3\nTue, 9/10\nShare & Collaborate\nFile systems and command line\n\nslides\n\n\n\n4\nThu, 9/12\nShare & Collaborate\nVersion control with git\n\nslides\n\n\n\n5\nTue, 9/17\nShare & Collaborate\nDeveloping code on GitHub\n\nslides\n\n\n\n6\nThu, 9/19\nShare & Collaborate\nCollaborating with GitHub\n\nslides\n\n\n\n7\nTue, 9/24\nTidy & Wrangle\nData manipulation & coding best practices\n\nslides\n\n\n\n8\nThu, 9/26\nRepeat & Reproduce\nIntermediate R programming I\n\nslides\n\n\n\n9\nTue, 10/1\nRepeat & Reproduce\nIntermediate R programming II\n—\n\n\n10\nThu, 10/3\nDocument & Publish\nGetting credit for your hard work\n\nslides\n\n\n\n11\nTue, 10/8\nReview\nDrop-in co-working\n—\n\n\n12\nThu, 10/10\nReproducibility Colloquium\nAn opportunity for you to show off what you've learned\n\nguidelines"
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Reproducibility and Data Science in R",
    "section": "Code of Conduct",
    "text": "Code of Conduct\n\nOur group’s mission is to enable scientists. This means treating people with respect and responding in a polite and helpful way.\nOur group is committed to ensuring a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\nExamples of unacceptable behavior by members, collaborators, and contributors include: the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\n\nRead our full code of conduct and please report any violations or concerns to the course instructors or to Kristina Riemer (kristinariemer@arizona.edu)."
  },
  {
    "objectID": "index.html#helpful-reads",
    "href": "index.html#helpful-reads",
    "title": "Reproducibility and Data Science in R",
    "section": "Helpful Reads",
    "text": "Helpful Reads\nThis workshop series doesn’t have anything like “required reading”, but we think these books and websites are good companions.\nData analysis in R:\n\nR for Data Science (2e)\nBuilding reproducible analytical pipelines with R \n\nBest practices for reproducibility:\n\nGood enough practices in scientific computing\nData organization in spreadsheets\nA beginner’s guide to conducting reproducible research\nThe Turing Way: Guide for Reproducible Research\n6 Steps Toward Reproducible Research\n\nVersion control:\n\nExcuse me, do you have a moment to talk about version control?\nHappy Git and GitHub for the useR"
  },
  {
    "objectID": "lessons/2-markdown-quarto/quarto_notes.html",
    "href": "lessons/2-markdown-quarto/quarto_notes.html",
    "title": "My Notes",
    "section": "",
    "text": "We’re using the penguins dataset from the palmerpenguins package (Horst, Hill, and Gorman 2020), so no loading of data is needed other than library(palmerpenguins)."
  },
  {
    "objectID": "lessons/2-markdown-quarto/quarto_notes.html#load-data",
    "href": "lessons/2-markdown-quarto/quarto_notes.html#load-data",
    "title": "My Notes",
    "section": "",
    "text": "We’re using the penguins dataset from the palmerpenguins package (Horst, Hill, and Gorman 2020), so no loading of data is needed other than library(palmerpenguins)."
  },
  {
    "objectID": "lessons/2-markdown-quarto/quarto_notes.html#results",
    "href": "lessons/2-markdown-quarto/quarto_notes.html#results",
    "title": "My Notes",
    "section": "Results",
    "text": "Results\n\nBody Size\n\n\nCode\nggplot(penguins, aes(x = sex, y = body_mass_g)) + geom_boxplot()\n\n\n\n\n\n\n\n\nFigure 1: Boxplot of penguin body mass (in grams) by sex\n\n\n\n\n\nAs you can see in Figure 1, males are larger than females. The sample sizes are roughly equal at all islands for males and females (Table 1). Dunn et al. (2016) also do some research with penguin size.\n\n\nCode\nkable(table(penguins$sex, penguins$island, useNA = \"always\"))\n\n\n\n\nTable 1: Sample sizes of penguins by sex and island\n\n\n\n\n\n\n\nBiscoe\nDream\nTorgersen\nNA\n\n\n\n\nfemale\n80\n61\n24\n0\n\n\nmale\n83\n62\n23\n0\n\n\nNA\n5\n1\n5\n0\n\n\n\n\n\n\n\n\n\n\nBill length\n\n\nCode\nggplot(penguins, aes(x = sex, y = bill_length_mm)) + geom_boxplot()\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\nFigure 2: Bill length (mm) by sex\n\n\n\n\n\nMales also have longer bills on average than females (Figure 2).\n\\[\ny = mx + b\n\\tag{1}\\]\nEquation 1 shows the equation for a line with slope (\\(m\\)) and intercept (\\(b\\))"
  },
  {
    "objectID": "lessons/2-markdown-quarto/quarto_notes.html#escaping-markdown",
    "href": "lessons/2-markdown-quarto/quarto_notes.html#escaping-markdown",
    "title": "My Notes",
    "section": "Escaping markdown",
    "text": "Escaping markdown\nUse \\ as an “escape character” to stop symbols from doing anything special.\nitallics vs *literally surrounded with astrixes*"
  }
]