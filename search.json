[
  {
    "objectID": "lessons/9-markdown-quarto/notes.html",
    "href": "lessons/9-markdown-quarto/notes.html",
    "title": "Documentation and Literate Programming",
    "section": "",
    "text": "Understand how to write a README.md using markdown basics and introduce the concept of literate programming with Quarto."
  },
  {
    "objectID": "lessons/9-markdown-quarto/notes.html#objective",
    "href": "lessons/9-markdown-quarto/notes.html#objective",
    "title": "Documentation and Literate Programming",
    "section": "",
    "text": "Understand how to write a README.md using markdown basics and introduce the concept of literate programming with Quarto."
  },
  {
    "objectID": "lessons/9-markdown-quarto/notes.html#lesson-outline",
    "href": "lessons/9-markdown-quarto/notes.html#lesson-outline",
    "title": "Documentation and Literate Programming",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nWhat goes in a README?\n\nProject summary\nProject status (in progress, archived, just an idea?)\nHow to give credit\nStructure of repo (what files do what?)\nHow to reproduce results\n\nMarkdown & formatting a README.md\n\nMarkdown is a markup language: plain text –&gt; formatted text\nWidely used (GitHub, websites, Slack, etc.)\nShow markdown cheat sheet\nSpaces matter, and don’t matter at the same time. Err on the side of too much space between elements\n\nExercise: Spend a few minutes editing your README, commit, push to GitHub and observe\nQuarto: an open-source scientific and technical publishing system\n\nAllows combining markdown, code, and code output (tables, plots, etc)\nWide variety of outputs: html, pdf, word, and more\nUse cases:\n\nNotebook\nShare results with collaborators\nPresentations\nReproducible manuscripts\n\n\nHow does it work?\n\nqmd -&gt; knitr -&gt; md -&gt; pandoc -&gt; word, pdf, html, etc.\n\nAnatomy of a .Qmd\n\nLook familiar if you’ve used RMarkdown\nYAML header has metadata and settings\nMarkdown body\nCode chunks with R, Python, Julia, or other code\n\nCreate .Qmd and play\nDemo rendering in different formats\nDemo visual editor\n\nSwitch back and forth\nCallouts\n\nCode chunk options\n\nDemo some common ones like label, echo: false, fig-cap\n\nCitations and cross-refs\nTease journal articles (check out AGU format example https://quarto-journals.github.io/agu/)\nPoint students toward tutorial and full documentation"
  },
  {
    "objectID": "lessons/2-shell/notes.html",
    "href": "lessons/2-shell/notes.html",
    "title": "Using the Shell",
    "section": "",
    "text": "Understand the what and why of the shell\nUse the shell to navigate your computer’s file system\nUse R projects to simplify file system navigation\nKnow your options for finding help"
  },
  {
    "objectID": "lessons/2-shell/notes.html#objectives",
    "href": "lessons/2-shell/notes.html#objectives",
    "title": "Using the Shell",
    "section": "",
    "text": "Understand the what and why of the shell\nUse the shell to navigate your computer’s file system\nUse R projects to simplify file system navigation\nKnow your options for finding help"
  },
  {
    "objectID": "lessons/2-shell/notes.html#lesson-outline",
    "href": "lessons/2-shell/notes.html#lesson-outline",
    "title": "Using the Shell",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview of last week\n\nWhat happened as you were trying to re-organize projects or R code? Victories? Stumbling blocks?\n\nSlides: Intro to the shell\n\nWhat is the shell?\nWhat does the shell let us do?\nWhy would we want to learn how to use the shell?\n\nBreakout rooms: Shell installation\n\nInstructor notes include links to git installation for both Mac and Windows.\nSplit into 2 breakout rooms to install on different OS’s.\n\nBreak to all download shell-lesson-data\n\nLink\nPut it on your Desktop\nUnzip using point-and-click\n\nLive coding: Setup RStudio\n\nOpen RStudio\nTour panes: files and terminal\nSet up terminal pane to use bash\n\nLive coding: Navigating filesystems in files pane\n\nUse file pane to navigate to shell-lesson-data\n\nLive coding: Navigate to shell-lesson-data in Terminal\n\nIdentify the prompt and note that it is different in zsh (%)\npwd\ncd\nls\n\nUse ls flags to explain anatomy of a shell command\nShow man ls to show flag options for the ls command\n\n\nLive coding: Synchronizing file panes\n\nShow “Go to current directory” to bring Terminal to files pane\nShow “New terminal here” to create a terminal in files pane\nShow that Rstudio’s working directory is not automatically wherever either Terminal or the file pane is\n\nLive coding: using Rprojects to simplify filesystems\n\nCreate an R project\nShow that, upon opening, Terminal, getwd(), and file pane are all on the same page\n\nLive coding: cp and move\n\nCopy shell_lesson_data to the Rproject.\nTell them we need cp, then use cp --help to get the options\nRepeat using ls to explore contents of shell_lesson_data and mirror files pane\n\nLive coding/discussion: options for finding help\n\n--help flag\nman pages\nManual pages: ? in R, package websites\nStackOverflow\nChatGPT\n\nHomework for next session\n\nRead https://peerj.com/preprints/3159/ git (Version control prep)\nCreate a diagram of your file system and note your most frequently used directories"
  },
  {
    "objectID": "lessons/2-shell/notes.html#installation-materials",
    "href": "lessons/2-shell/notes.html#installation-materials",
    "title": "Using the Shell",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nmacOS git installation\nWindows git installation (detailed step-by-step here)\nSoftware Carpentry Unix Shell episode #1\nSoftware Carpentry Unix Shell episode #2\nSoftware Carpentry Unix Shell episode #3 (time permitting)"
  },
  {
    "objectID": "lessons/6-data-manipulation/notes.html",
    "href": "lessons/6-data-manipulation/notes.html",
    "title": "Data manipulation",
    "section": "",
    "text": "Use git branches in the “real world”\nReproducibly clean, summarize, and organize dataframes using tidyverse packages\nUnderstand how R stores different data types (data frames, vector types, missing data)\nKnow what the tidyverse is, how it differs from base R, and the philosophy behind using it here.\nUse the pipe to chain operations together\nUse dplyr functions to subset data (select, filter; logic and select fxns including where, ==, %in%, !) and manipulate data (mutate; lubridate; split-apply-combine)\nUse tidyr functions to reshape data (pivot_wider and pivot_longer)"
  },
  {
    "objectID": "lessons/6-data-manipulation/notes.html#objective",
    "href": "lessons/6-data-manipulation/notes.html#objective",
    "title": "Data manipulation",
    "section": "",
    "text": "Use git branches in the “real world”\nReproducibly clean, summarize, and organize dataframes using tidyverse packages\nUnderstand how R stores different data types (data frames, vector types, missing data)\nKnow what the tidyverse is, how it differs from base R, and the philosophy behind using it here.\nUse the pipe to chain operations together\nUse dplyr functions to subset data (select, filter; logic and select fxns including where, ==, %in%, !) and manipulate data (mutate; lubridate; split-apply-combine)\nUse tidyr functions to reshape data (pivot_wider and pivot_longer)"
  },
  {
    "objectID": "lessons/6-data-manipulation/notes.html#lesson-outline",
    "href": "lessons/6-data-manipulation/notes.html#lesson-outline",
    "title": "Data manipulation",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview from last week\nWarm-up: create a branch for today’s work\nSlides/discussion: using R for reproducible data analysis\n\nWhy use R?\nWhat is the tidyverse and why use it?\nInstall dplyr and tidyr\n\nLive coding: How R thinks about data\n\nData carpentry R ecology revamp episode #2\nData frames\nVectors and data types\nMissing data\n\nLive coding: dplyr and tidyr\n\nData carpentry R ecology revamp episode #3\nRecent DC + R lesson\nChaining lines together with the pipe\n\n%&gt;%, |&gt;\n\nSubsetting and filtering data\n\nincl. selection and pick https://dplyr.tidyverse.org/reference/dplyr_tidy_select.html\n\nAdding columns\nSplit-apply-combine\nReshaping\n\nLive coding: advanced tidyverse topics\n\nOptions: across; dates; advanced joins; others?\n\nLive coding/discussion: getting help\n\nreprex\n\nLive coding: practice modify-add-commit cycle\nHomework: None"
  },
  {
    "objectID": "lessons/6-data-manipulation/notes.html#installation-materials",
    "href": "lessons/6-data-manipulation/notes.html#installation-materials",
    "title": "Data manipulation",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nInstall R packages ‘dplyr’, ‘tidyr’, ‘readr’\nData carpentry R ecology revamp episode #2\nData carpentry R ecology revamp episode #3"
  },
  {
    "objectID": "lessons/5-github-collab/notes.html",
    "href": "lessons/5-github-collab/notes.html",
    "title": "Collaborating with GitHub",
    "section": "",
    "text": "Learners will fork and clone a repository on GitHub and use branches to open pull requests."
  },
  {
    "objectID": "lessons/5-github-collab/notes.html#objective",
    "href": "lessons/5-github-collab/notes.html#objective",
    "title": "Collaborating with GitHub",
    "section": "",
    "text": "Learners will fork and clone a repository on GitHub and use branches to open pull requests."
  },
  {
    "objectID": "lessons/5-github-collab/notes.html#lesson-outline",
    "href": "lessons/5-github-collab/notes.html#lesson-outline",
    "title": "Collaborating with GitHub",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nReview Homework:\n\nAnyone put a repo on GitHub? Any difficulties encountered?\n\nLive Coding: Collaborating with GitHub\n\nShare a repo with everyone & have everyone clone w/ RStudio\nAsk 1 (one) volunteer to make a change and practice commit + push\nBoth instructor and volunteer make a change in the same file and push to main\nShould error for whoever pushes second\nTry following hints and pull, then set git config pull.rebase false\n\nWorking on branches (slides)\nLive Coding:\n\nMake a branch with your name in RStudio\nAdd your name to README and commit\nSwitch between branches and see the file change in RStudio AND in File Explorer / Finder\nPush & see branches on GitHub\n\nPull Requests (slides)\nLive Coding:\n\nHave everyone make a PR to add their name\nDemo merging one or two & ask volunteer to resolve any merge conflicts\n\nForks (slides)\n\nDiscuss when you would work on a branch of a fork vs. working in a branch but on the same repo\n\nLive Coding:\n\nHave students create a fork of a second example repo and clone their fork\nIn pairs, have them practice making a branch, making changes, commit + push, and make a PR on GitHub\n\nHomework:\n\nMaybe try cloning a repo that you don’t have permission to push to to see what happens\nTry using usethis::pr_finish() on a branch that was already merged on GitHub and take note of what it does"
  },
  {
    "objectID": "lessons/5-github-collab/notes.html#installation-materials",
    "href": "lessons/5-github-collab/notes.html#installation-materials",
    "title": "Collaborating with GitHub",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nWorkshop repository\nSoftware Carpentry Version Control with Git episode #8\n\n\nReview\nIf anyone connected a local repository to GitHub, share how that went. Ask students to navigate to previous repository, amend an existing file, and practice an add-commit-push cycle.\n\n\nModifications\n\nThe only part of #8 that was taught was cloning a forked repository. Ask students to fork an instructor-created repository, then clone locally. This will be the repo for downstream files.\nUse git remote add upstream xxxx to connect repo to upstream. If time permits, demonstrate a pull request (PR).\nShare diagram of relationships between the remotes (upstream and origin) and local\nDemonstrate pull requests on GitHub\nShow how distinct units of work can be separately submitted via branches"
  },
  {
    "objectID": "lessons/5-github-collab/notes.html#teaching-notes",
    "href": "lessons/5-github-collab/notes.html#teaching-notes",
    "title": "Collaborating with GitHub",
    "section": "Teaching notes",
    "text": "Teaching notes\n\nHave students fork a cct-datascience repo as an example of a real research compendium\nEasy to check on learner progress by looking for who has and hasn’t forked repo"
  },
  {
    "objectID": "lessons/5-github-collab/notes.html#homework",
    "href": "lessons/5-github-collab/notes.html#homework",
    "title": "Collaborating with GitHub",
    "section": "Homework",
    "text": "Homework\nSkim the Analyses section of tidyverse R style guide. What practice or guideline was new to you?\nAlso, explore the upstream cct-datascience repo. What practices do you notices that are new or different from your own?"
  },
  {
    "objectID": "lessons/3-git/notes.html",
    "href": "lessons/3-git/notes.html",
    "title": "Version control with git",
    "section": "",
    "text": "Understand the concept and motivation of version control\nSet up git on their machine (email address linked to their GH account; --global config)\nUnderstand that repos == folders =can= .Rproj.\nInitialize a git repo associated with an RStudio project called pilot-analyses.\nUnderstand the modify-add-commit progression. Apply this by making modifications to some R code and then committing it to the pilot-analyses repo (git commands: status, log, diff, add, commit)\nUse .gitignore to selectively exclude files from git."
  },
  {
    "objectID": "lessons/3-git/notes.html#objective",
    "href": "lessons/3-git/notes.html#objective",
    "title": "Version control with git",
    "section": "",
    "text": "Understand the concept and motivation of version control\nSet up git on their machine (email address linked to their GH account; --global config)\nUnderstand that repos == folders =can= .Rproj.\nInitialize a git repo associated with an RStudio project called pilot-analyses.\nUnderstand the modify-add-commit progression. Apply this by making modifications to some R code and then committing it to the pilot-analyses repo (git commands: status, log, diff, add, commit)\nUse .gitignore to selectively exclude files from git."
  },
  {
    "objectID": "lessons/3-git/notes.html#lesson-outline",
    "href": "lessons/3-git/notes.html#lesson-outline",
    "title": "Version control with git",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview of last week\n\nAsk folks to share the diagram of their file system\nWarm-up with review question from the slide deck\n\nSlides/lecture: Intro to version control with git\n\nWhat is version control?\nWhy should I learn this? When will I need it?\n\nLive coding: git config\n\nSW Carpentry Git lesson 2 https://swcarpentry.github.io/git-novice/02-setup\nSetting up git using git config\n\nMake sure participants use their GH email/intended GH email\ngit verb options\ngit config --global core.editor \"vim\"\ngit verb --help\n\n\nLive coding: git init\n\nSW Carpentry Git lesson 3 https://swcarpentry.github.io/git-novice/03-create.html\nIntroduce the concept of a repository\nGo over 3 ways to init a git repo and when to use each\nBreak to all create a project + repo called pilot-analyses\n\nLive coding: git status\n\nUse git status to check that git init worked\nTalk about git status as a bridge to tracking changes.\n\nLive coding: Tracking changes\n\nSW Carpentry Git lesson 4 https://swcarpentry.github.io/git-novice/04-changes\nVisualize in slides\nCreate a blank R file (using RStudio point and click)\nMake comments/pseudocode changes.\ngit status\nGo through git add/commit cycle\nRepeat with additional changes, use git diff\nRepeat with multiple files\nUndo saved changes to a file using git restore\nUse git reset HEAD~ to undo the git add and git commit commands\n\nLive coding: .gitignore\n\nSW Carpentry Git lesson 6https://swcarpentry.github.io/git-novice/06-ignore\n.gitignore:\n\nDS_Store\nCreate a file and then ignore it.\n\n\n(Time permitting): SW Carpentry Git lesson 5\n\nhttps://swcarpentry.github.io/git-novice/05-history\nNavigating git history\n\nHomework:\n\nCreate a GitHub account if you don’t have one.\n(Optional) identify an existing folder and turn it into a repository."
  },
  {
    "objectID": "lessons/3-git/notes.html#installation-materials",
    "href": "lessons/3-git/notes.html#installation-materials",
    "title": "Version control with git",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Version Control with Git episode #2\nSoftware Carpentry Version Control with Git episode #3\nSoftware Carpentry Version Control with Git episode #4\nSoftware Carpentry Version Control with Git episode #6\n(optional) Software Carpentry Version Control with Git episode #5"
  },
  {
    "objectID": "lessons/8-intermediate-r-2/notes.html",
    "href": "lessons/8-intermediate-r-2/notes.html",
    "title": "Intermediate R programming II",
    "section": "",
    "text": "Learners will learn how to make their R code more reproducible using for loops and the apply family of functions."
  },
  {
    "objectID": "lessons/8-intermediate-r-2/notes.html#objective",
    "href": "lessons/8-intermediate-r-2/notes.html#objective",
    "title": "Intermediate R programming II",
    "section": "",
    "text": "Learners will learn how to make their R code more reproducible using for loops and the apply family of functions."
  },
  {
    "objectID": "lessons/8-intermediate-r-2/notes.html#installation-materials",
    "href": "lessons/8-intermediate-r-2/notes.html#installation-materials",
    "title": "Intermediate R programming II",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nData Carpentry for Biologists for loop lecture \nData Carpentry for Biologists iteration without loops lecture? \n\n\nReview\nCan share their plans for apply skills to their research. Lead optional discussion on when to use base R vs. tidyverse packages/functions.\n\n\nModifications\n\nFor for loops lecture:\n\nAt “Do Tasks 3-4…”, do “Basic For Loop” exercises #2 & #3\nSkip sections “Looping over multiple values” and “Looping with functions”\nStop at “Looping over files” due to zip download issues\n\nFor apply lecture:\n\nDo “Size Estimates With Maximum” exercise\nDo “Size Estimates Vectorized 2” exercise\nStop after first section in “Other apply functions (optional)” section"
  },
  {
    "objectID": "lessons/8-intermediate-r-2/notes.html#teaching-notes",
    "href": "lessons/8-intermediate-r-2/notes.html#teaching-notes",
    "title": "Intermediate R programming II",
    "section": "Teaching notes",
    "text": "Teaching notes\n\nCreate new R script for these materials. Put script into repro-DS-workshop repo\nEmphasize using for loops using index or non-index methods. Index can be useful for reducing memory use and for storing results\nIf time, demonstrate combining if and for"
  },
  {
    "objectID": "lessons/8-intermediate-r-2/notes.html#homework",
    "href": "lessons/8-intermediate-r-2/notes.html#homework",
    "title": "Intermediate R programming II",
    "section": "Homework",
    "text": "Homework\nIdentify a script from a research project that could benefit from a for loop, apply, conditional, or function."
  },
  {
    "objectID": "lessons/7-intermediate-r-1/notes.html",
    "href": "lessons/7-intermediate-r-1/notes.html",
    "title": "Intermediate R programming I",
    "section": "",
    "text": "Understand the utility of writing your own functions and managing control flow.\nWrite functions and if/else statements to improve code readability and reusability\nCreate pull requests updating a git repo with new code."
  },
  {
    "objectID": "lessons/7-intermediate-r-1/notes.html#objective",
    "href": "lessons/7-intermediate-r-1/notes.html#objective",
    "title": "Intermediate R programming I",
    "section": "",
    "text": "Understand the utility of writing your own functions and managing control flow.\nWrite functions and if/else statements to improve code readability and reusability\nCreate pull requests updating a git repo with new code."
  },
  {
    "objectID": "lessons/7-intermediate-r-1/notes.html#lesson-outline",
    "href": "lessons/7-intermediate-r-1/notes.html#lesson-outline",
    "title": "Intermediate R programming I",
    "section": "Lesson outline",
    "text": "Lesson outline\n\nReview from last session\nWarm-up\n\nUpdate working branch from upstream\n\nSlides/lecture: Why write functions?\n\nBase on DC semester biology lesson\nUnderstandable and reusable code\n\nHuman-understandable chunks\nDesigned to be reused\n\n\nLive-coding: functions\n\nFunction basics from DC semester lesson\nCreate new R script for functions content, and another new R script for control flow (ifelse and for loops) content. Put both scripts into repro-DS-workshop repo\nDiscuss ordering of an R script\n\nSlides/lecture: control flow\n\nExamples of use of if/else statements (find some real-world examples)\nDC semester on conditionals\nReview conditional logic\nConditionals outside functions\nConditionals inside functions\n\nLive-coding: practice commit + PR\nDiscussion: application to own work + showcase\nHomework:\n\nCreate a plan for applying these skills to their own research projects. Can apply different parts to different projects, or more integratively to one single project. Some possibilities:\n\nTurn the project folder for one of your current research project into a git/GitHub repo and/or R project\nModify an R script to use functions, if/for loops, or format code according to best practices\nImprove file and folder organization for project or your entire computer!\n\nFind a section of own code to turn into a function"
  },
  {
    "objectID": "lessons/7-intermediate-r-1/notes.html#installation-materials",
    "href": "lessons/7-intermediate-r-1/notes.html#installation-materials",
    "title": "Intermediate R programming I",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nData Carpentry for Biologists functions lecture\nData Carpentry for Biologists conditionals lecture"
  },
  {
    "objectID": "lessons/7-intermediate-r-1/notes.html#notes-from-before",
    "href": "lessons/7-intermediate-r-1/notes.html#notes-from-before",
    "title": "Intermediate R programming I",
    "section": "Notes from before",
    "text": "Notes from before\n\nReview\nAsk to share cleaning up of example script, their own script, or their research project folder from lesson 5.\n\n\nModifications\n\nFor functions lecture, had them do only the “Use and Modify” exercise\nFrom conditionals lecture, only did “if statements” section\nFrom latter, only did “Basic If Statements” #2 exercise\nAdded on brief explanation of ifelse, using the example of ifelse(length == 5, \"correct\", \"incorrect\")\nMention case_when from dplyr for more complicated if & else steps\n\n\n\nTeaching notes\n\nBefore doing functions and conditions, demonstrate updating local cct-organization repo from upstream after adding a commit to the upstream\nCreate new R script for functions content, and another new R script for control flow (ifelse and for loops) content. Put both scripts into repro-DS-workshop repo\nMention functions are often used with for loops or apply statements\nAfter functions, mention consistent order of sections in scripts; example is libraries, read in data, functions, executing functions\nInclude real world examples of if and ifelse statements to motivate their use, especially for checking if files already exist\nDemonstrate making a new branch and opening up a pull request in their repro-DS-workshop repo at the end of each set of material; can merge pull request\n\n\n\nHomework\nCreate a plan for applying these skills to their own research projects. Can apply different parts to different projects, or more integratively to one single project. Some possibilities:\n\nTurn the project folder for one of your current research project into a git/GitHub repo and/or R project\nModify an R script to use functions, if/for loops, or format code according to best practices\nImprove file and folder organization for project or your entire computer!"
  },
  {
    "objectID": "lessons/10-get-credit/notes.html",
    "href": "lessons/10-get-credit/notes.html",
    "title": "Getting Credit For Your Hard Work",
    "section": "",
    "text": "Learn the wrap-up steps to publish/archive a research compendium with a DOI. Understand reproducible computational environment. Learn renv and discuss Docker (concept)."
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#objective",
    "href": "lessons/10-get-credit/notes.html#objective",
    "title": "Getting Credit For Your Hard Work",
    "section": "",
    "text": "Learn the wrap-up steps to publish/archive a research compendium with a DOI. Understand reproducible computational environment. Learn renv and discuss Docker (concept)."
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#lesson-outline",
    "href": "lessons/10-get-credit/notes.html#lesson-outline",
    "title": "Getting Credit For Your Hard Work",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nWhy share code?\n\nFacilitate discussion\nShow figure from Maitner et al. (2023)\nHigher citations\nTo “pay it forward” to other researchers\nTo demonstrate your skills\nTo facilitate error correction\n\nGetting credit for code\n\nCode is not cited often, but partly because it’s not made easy to cite\n\nCITATION.cff\n\nShow CITATION.cff files for this repo and maybe one for a research compendium\nShow “cite this” button on GitHub\nMaybe mention cffr::cff_validate()\n\nArchiving\n\nMost participants probably won’t be ready to follow along with their own repos, but we will be there to help when they are ready\nDemo archiving a repo with Zenodo using this repo\nAdd DOI badge to readme\nUpdate CITATION.cff with DOI\n\nrenv\n\nDiscuss why\nAsk students to activate renv for a project and inspect files it creates\nExplain how renv works, especially renv::restore() , renv::status() , and renv::snapshot()\nDemo activating renv for this repo and make a second release to demo Zenodo versioning\n\nDocker (if time)\n\nConceptual overview of what it is\nDiscuss how tools like renv and Docker both help and hinder reproducibility"
  },
  {
    "objectID": "lessons/10-get-credit/notes.html#homework",
    "href": "lessons/10-get-credit/notes.html#homework",
    "title": "Getting Credit For Your Hard Work",
    "section": "Homework",
    "text": "Homework\n\nPrep for showcase session"
  },
  {
    "objectID": "lessons/4-github-basics/notes.html",
    "href": "lessons/4-github-basics/notes.html",
    "title": "Developing Code on Github",
    "section": "",
    "text": "Learners will share their local repository on GitHub and learn how to sync some files while ignoring others systematically. Learners will practice developing new code on branches."
  },
  {
    "objectID": "lessons/4-github-basics/notes.html#objective",
    "href": "lessons/4-github-basics/notes.html#objective",
    "title": "Developing Code on Github",
    "section": "",
    "text": "Learners will share their local repository on GitHub and learn how to sync some files while ignoring others systematically. Learners will practice developing new code on branches."
  },
  {
    "objectID": "lessons/4-github-basics/notes.html#lesson-outline",
    "href": "lessons/4-github-basics/notes.html#lesson-outline",
    "title": "Developing Code on Github",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nReview:\n\nWays of creating a git repo and how to know if it worked\n\nLive Coding: .gitignore\n\nExplore .gitignore created by RStudio\nSoftware Carpentry .gitignore lesson\nDiscuss what files to .gitignore: what is “non-diffable”?\nModify and make a commit\n\nWhat is GitHub and why use it? (slides)\nLive Coding: GitHub setup\n\nGo through checklist of usethis::git_sitrep() with student sharing screen\nDon’t have student share screen with PAT generation! Switch to your screen!\n\nLive Coding: Putting your code on GitHub\n\nLocal first: usethis::use_github()\nGitHub first: create new repo on GitHub and create new R Studio project from version control\nOther ways are possible, but we’re not going to cover them (unless someone has issues)\n\nLive Coding: Push and Pull\n\nMake changes in RStudio, push\nMake changes on GitHub, pull\nHave Renata make changes, push, then pull\n\nNext time: How to work together on GitHub more safely\nHomework: Put a personal repository on GitHub."
  },
  {
    "objectID": "lessons/4-github-basics/notes.html#installation-materials",
    "href": "lessons/4-github-basics/notes.html#installation-materials",
    "title": "Developing Code on Github",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Version Control with Git episode #6\nGitHub authentication with PAT using Jenny Bryan’s Git book chapter 9 (follow usethis::git_sitrep())\nSoftware Carpentry Version Control with Git episode #7\nSoftware Carpentry branching add-on\n\n\nReview\nIf anyone turned a folder into a repository, share how that went."
  },
  {
    "objectID": "lessons/4-github-basics/notes.html#teaching-notes",
    "href": "lessons/4-github-basics/notes.html#teaching-notes",
    "title": "Developing Code on Github",
    "section": "Teaching notes",
    "text": "Teaching notes\n\nPractice another add-commit cycle after creating the .gitignore\nIntroduce the add-commit-push cycle"
  },
  {
    "objectID": "lessons/4-github-basics/notes.html#homework",
    "href": "lessons/4-github-basics/notes.html#homework",
    "title": "Developing Code on Github",
    "section": "Homework",
    "text": "Homework\nConnect a personal repository to GitHub. Practice usethis::use_git() and usethis::use_github()."
  },
  {
    "objectID": "lessons/1-project-management/notes.html",
    "href": "lessons/1-project-management/notes.html",
    "title": "Project Management and Coding Best Practices",
    "section": "",
    "text": "Learners will learn about and practice managing their projects using file structure and RStudio projects, and about current best practices and style guides for R coding."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#objective",
    "href": "lessons/1-project-management/notes.html#objective",
    "title": "Project Management and Coding Best Practices",
    "section": "",
    "text": "Learners will learn about and practice managing their projects using file structure and RStudio projects, and about current best practices and style guides for R coding."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#lesson-outline",
    "href": "lessons/1-project-management/notes.html#lesson-outline",
    "title": "Project Management and Coding Best Practices",
    "section": "Lesson Outline",
    "text": "Lesson Outline\n\nIntroductions\nDiscuss reproducibility\nGive tour of course website & syllabus\n\nPoint out code of conduct\n\nScreen setup\nDon’t save or load .RData!\nDiscuss general best practices for research compendia (use Carpentry lesson)\n\nAll files needed for a project in the same folder (ideally)\nOrganize data, code, and outputs into different folders at a minimum\nNever edit raw data\nInclude documentation on what each file is/does in a README\n\nLive Coding: create an R project and add gapminder data to it\n\nShow file pane & connect to Windows Explorer / Finder\nShow how to make a file read-only\nDemo closing, opening, and switching projects\n\nLive Coding: R code best practices\n\nCreate 01-wrangle-data.R in R/\nHeader comment\nDon’t use setwd()—not needed with .Rproj. Use relative paths!\nKeyboard shortcut for adding sections + outline view and navigator at bottom of script panel\nLoad packages at top of script, even when not used until later\nRestart R and run from top often\nCode styling with RStudio (ctl + shift + A)\nHow to break up code (e.g. save output of 01-wrangle-data.R into data_clean/, then read that in later)\n\nHomework:\n\nApply one or more of the organizing principles of a research compendium to an existing research project."
  },
  {
    "objectID": "lessons/1-project-management/notes.html#installation-materials",
    "href": "lessons/1-project-management/notes.html#installation-materials",
    "title": "Project Management and Coding Best Practices",
    "section": "Installation & materials",
    "text": "Installation & materials\n\nSlides\nSoftware Carpentry Introduction to R and RStudio episode\nSoftware Carpentry Project Management with RStudio episode\nSoftware Carpentry Best Practices for Writing R Code\nhttps://r4ds.hadley.nz/workflow-style"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproduciblity and Data Science in R",
    "section": "",
    "text": "Welcome to the syllabus for the CCT Data Science fall workshop series: Reproducibility and Data Science in R. If you didn’t register for the course this year, sign up for our mailing list to be notified when enrollment opens for next year’s iteration and to be notified of our other monthly workshops."
  },
  {
    "objectID": "index.html#schedule-tentative",
    "href": "index.html#schedule-tentative",
    "title": "Reproduciblity and Data Science in R",
    "section": "Schedule (tentative)",
    "text": "Schedule (tentative)\nWe’ll meet on Tuesdays and Thursdays from 11am to 1pm via Zoom (link)\n\n\n\n\n\n\n\n  \n    \n    \n    \n    \n    \n  \n  \n    \n    \n      Lesson\n      Date\n      Theme\n      Topic\n      Links\n    \n  \n  \n    1\nTue, 9/5\nManage & Organize\nProject managment and coding best practices\n\nslides\n\n\n    2\nThu, 9/7\nShare & Collaborate\nUsing shell commands\n\nslides\n\n\n    3\nTue, 9/12\nShare & Collaborate\nVersion control with git\n\nslides\n\n\n    4\nThu, 9/14\nShare & Collaborate\nDeveloping code on GitHub\n\nslides\n\n\n    5\nTue, 9/19\nShare & Collaborate\nCollaborating with GitHub\n\nslides\n\n\n    6\nThu, 9/21\nTidy & Wrangle\nData Manipulation\n\nslides\n\n\n    7\nTue, 9/26\nRepeat & Reproduce\nIntermediate R programming I\n\nslides\n\n\n    8\nThu, 9/28\nRepeat & Reproduce\nIntermediate R programming II\n\nslides\n\n\n    9\nTue, 10/3\nDocument & Publish\nDocumentation and literate programming\n\nslides\n\n\n    10\nThu, 10/5\nDocument & Publish\nGetting credit for your hard work\n\nslides\n\n\n    —\nTue, 10/17\nHelp\nDrop-in help session\n—\n    —\nTue, 10/24\nShow & Tell\nAn opportunity for you to show off what you've learned\n—"
  },
  {
    "objectID": "index.html#code-of-conduct",
    "href": "index.html#code-of-conduct",
    "title": "Reproduciblity and Data Science in R",
    "section": "Code of Conduct",
    "text": "Code of Conduct\n\nOur group’s mission is to enable scientists. This means treating people with respect and responding in a polite and helpful way.\nOur group is committed to ensuring a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, or religion.\nExamples of unacceptable behavior by members, collaborators, and contributors include the use of sexual language or imagery, derogatory comments or personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\n\nRead our full code of conduct and please report any violations or concerns to the course instructors or to Kristina Riemer (kristinariemer@arizona.edu)."
  },
  {
    "objectID": "index.html#helpful-reads",
    "href": "index.html#helpful-reads",
    "title": "Reproduciblity and Data Science in R",
    "section": "Helpful Reads",
    "text": "Helpful Reads\nThis workshop series doesn’t have anything like “required reading”, but we think these books and websites are good companions.\nData analysis in R:\n\nR for Data Science (2e)\nBuilding reproducible analytical pipelines with R \n\nBest practices for reproducibility:\n\nGood enough practices in scientific computing\nData organization in spreadsheets\nA beginner’s guide to conducting reproducible research\nThe Turing Way: Guide for Reproducible Research\n\nVersion control:\n\nExcuse me, do you have a moment to talk about version control?\nHappy Git and GitHub for the useR"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#what-is-reproducibility-why",
    "href": "lessons/1-project-management/slides.html#what-is-reproducibility-why",
    "title": "Reproducibility & Data Science in R",
    "section": "What is Reproducibility & Why?",
    "text": "What is Reproducibility & Why?\nReproducibility is...\n\n\nI want my work to be reproducible because..."
  },
  {
    "objectID": "lessons/1-project-management/slides.html#section",
    "href": "lessons/1-project-management/slides.html#section",
    "title": "Reproducibility & Data Science in R",
    "section": "",
    "text": "By The Turing Way Community"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#the-whole-picture",
    "href": "lessons/1-project-management/slides.html#the-whole-picture",
    "title": "Reproducibility & Data Science in R",
    "section": "The Whole Picture",
    "text": "The Whole Picture\n\n\n\n\n\n\nA (usually fiction) story:\n\n\nYou read a great paper and think “I bet I could apply their analysis methods to my work!” You click a DOI link in their Data Availability section that they definitely have. It opens to a web page where you can download a folder with R code, data, and documentation about the code and data. The page also has detailed information about how to cite the code and data. You open the folder in R Studio and you are prompted to install all the packages you need to run the code. You open the analysis code script and hit “run”. All the code runs perfectly with no errors, creating all the figures, tables, and statistics used in the paper. You scroll through the well-formatted R code and understand from the authors’ comments exactly what the code does and how to adapt it to your work.\n\n\n\n\nWe want to help you make this story a reality for someone else!\n\nIncluding future you!"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#syllabus-workshop-materials",
    "href": "lessons/1-project-management/slides.html#syllabus-workshop-materials",
    "title": "Reproducibility & Data Science in R",
    "section": "Syllabus & Workshop Materials",
    "text": "Syllabus & Workshop Materials\nWorkshop series website:\nhttps://cct-datascience.github.io/repro-data-sci/"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#screen-setup-fa-desktop-fa-laptop",
    "href": "lessons/1-project-management/slides.html#screen-setup-fa-desktop-fa-laptop",
    "title": "Reproducibility & Data Science in R",
    "section": "Screen Setup  ",
    "text": "Screen Setup  \n\nDual monitors will be very helpful\nVirtual desktops (“Spaces” in macOS) also helpful\nLet us know if you do not have access to a second monitor"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#creating-a-research-compendium-with-r",
    "href": "lessons/1-project-management/slides.html#creating-a-research-compendium-with-r",
    "title": "Reproducibility & Data Science in R",
    "section": "Creating a Research Compendium with R",
    "text": "Creating a Research Compendium with R\nLearning Objectives:\n\nUse RStudio projects to create self-contained reproducible projects\nUse best practices for organizing files in a project\nUse relative file paths to improve portability of projects\nStructure R scripts so they are easier to understand"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#settings-for-success",
    "href": "lessons/1-project-management/slides.html#settings-for-success",
    "title": "Reproducibility & Data Science in R",
    "section": "Settings for Success",
    "text": "Settings for Success\n\n\n\n\n\n\n\n\n\n\nFresh start ensures reproducibility\nUse Session &gt; Restart R to check reproducibility\nIf long-running code is a concern, there are better solutions"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#project-management",
    "href": "lessons/1-project-management/slides.html#project-management",
    "title": "Reproducibility & Data Science in R",
    "section": "Project Management",
    "text": "Project Management\n\n\nThere are many reasons why we should ALWAYS avoid this:\n\nIt is really hard to tell which version of your data is the original and which is the modified;\nIt gets really messy because it mixes files with various extensions together;\nIt probably takes you a lot of time to actually find things, and relate the correct figures to the exact code that has been used to generate it;\n\nA good project layout will ultimately make your life easier:\n\nIt will help ensure the integrity of your data;\nIt makes it simpler to share your code with someone else (a lab-mate, collaborator, or supervisor);\nIt allows you to easily upload your code with your manuscript submission;\nIt makes it easier to pick the project back up after a break."
  },
  {
    "objectID": "lessons/1-project-management/slides.html#research-compendium-best-practices",
    "href": "lessons/1-project-management/slides.html#research-compendium-best-practices",
    "title": "Reproducibility & Data Science in R",
    "section": "Research Compendium Best Practices",
    "text": "Research Compendium Best Practices\n\n\nTreat data as read-only\nUse scripts to “clean” and wrangle data\nTreat generated outputs as disposable\nPut data, code, and outputs in different folders"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#takeaways",
    "href": "lessons/1-project-management/slides.html#takeaways",
    "title": "Reproducibility & Data Science in R",
    "section": "Takeaways",
    "text": "Takeaways\n\n\nStructure files in self-contained projects or “research compendia”\nPut data in a separate folder and never edit raw data!\nAvoid setwd() and getwd()—use relative paths and RStudio projects instead\nNaming things well is difficult but worth spending time on\nUse some consistent style in your code and organize scripts in sections\nSplit long scripts into multiples and use source() to run them if needed’"
  },
  {
    "objectID": "lessons/1-project-management/slides.html#homework-optional",
    "href": "lessons/1-project-management/slides.html#homework-optional",
    "title": "Reproducibility & Data Science in R",
    "section": "Homework (optional)",
    "text": "Homework (optional)\nRe-organize an existing project into a research compendium\nOR\nApply a consistent coding style to one of your R scripts (e.g. with Code &gt; Reformat Code or with the styler package)\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#review-homework",
    "href": "lessons/4-github-basics/slides.html#review-homework",
    "title": "GitHub",
    "section": "Review & Homework",
    "text": "Review & Homework\n\n\nIf you turned an existing project into a git repo, how did it go?\nWays to create a git repo:\n\nrun git init from the command line inside of project directory\ncreate a new RStudio project with “use git” checked\nrun usethis::use_git() in the R console in a RStudio project"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#todays-goals",
    "href": "lessons/4-github-basics/slides.html#todays-goals",
    "title": "GitHub",
    "section": "Today’s goals",
    "text": "Today’s goals\n\nLearn how to tell git to ignore files\nPut a local repo on GitHub\nUse git push and git pull to synchronize with GitHub\nUse branches for new work"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#ignoring-files",
    "href": "lessons/4-github-basics/slides.html#ignoring-files",
    "title": "GitHub",
    "section": "Ignoring files",
    "text": "Ignoring files\n\nIf you created an RStudio project with git enabled, you should have a top-level .gitignore\nUse this file (or create one) to stop git/GitHub from tracking…\n\nlarge files that aren’t plain text\nfiles with sensitive data\nunnecessary files\n\n\n\n\n\n\n\n\nExercise\n\n\nModify .gitignore to exclude all files ending in .pdf from git tracking. Make a commit for this change"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#sharing-with-github",
    "href": "lessons/4-github-basics/slides.html#sharing-with-github",
    "title": "GitHub",
    "section": "Sharing with GitHub",
    "text": "Sharing with GitHub\n\n\n\n\n\n\n\n\nAll contributors have a local copy of the repo.\nYou might also have a copy in multiple places (on multiple computers, on university HPC).\nGitHub has a central repo that allows you to synchronize and merge work from multiple sources.\nYou can also access the repo through github.com web UI\n\n\n\nFigure 2 from (Bryan 2018)"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#resources",
    "href": "lessons/4-github-basics/slides.html#resources",
    "title": "GitHub",
    "section": "Resources",
    "text": "Resources\n\nhappygitwithr.com\nusethis::use_github()"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#homework",
    "href": "lessons/4-github-basics/slides.html#homework",
    "title": "GitHub",
    "section": "Homework",
    "text": "Homework\nPut a project repo on GitHub and share the link on Slack"
  },
  {
    "objectID": "lessons/4-github-basics/slides.html#references",
    "href": "lessons/4-github-basics/slides.html#references",
    "title": "GitHub",
    "section": "References",
    "text": "References\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\nBryan, Jennifer. 2018. “Excuse Me, Do You Have a Moment to Talk about Version Control?” The American Statistician 72 (1): 2027. https://doi.org/10.1080/00031305.2017.1399928."
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#papers-with-open-code-are-cited-more",
    "href": "lessons/10-get-credit/slides.html#papers-with-open-code-are-cited-more",
    "title": "Sharing Code & Getting Credit",
    "section": "Papers with open code are cited more",
    "text": "Papers with open code are cited more\n\n\n\n\n\n\n\nFigure 2: Predicted impacts of code-sharing on cumulative citations. Predicted values shown are for the mean Impact Factor (3.0) across the publications analyzed. Fully open = open code and open-access publication; fully closed = closed-access publication and no publicly available code. Predictions are based on estimated model coe cients (Table 2)\n\n\nFigure 2 from Maitner et al. (2023)"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#getting-credit-for-your-code",
    "href": "lessons/10-get-credit/slides.html#getting-credit-for-your-code",
    "title": "Sharing Code & Getting Credit",
    "section": "Getting credit for your code",
    "text": "Getting credit for your code\nCode is unfortunately not cited often, but you can help by making it easier to cite your code (in addition to making easy to reproduce!)\n\nProvide a CITATION file on GitHub\nArchive to get a digital object identifier (DOI)\nInclude DOI and/or citation in your paper’s Data/Code Availability Statement"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#citation.cff",
    "href": "lessons/10-get-credit/slides.html#citation.cff",
    "title": "Sharing Code & Getting Credit",
    "section": "CITATION.cff",
    "text": "CITATION.cff\n\n\nCitation File Format are plain text files that are human- and machine-readable\nAdding a CITATION.cff file to your repo…\n\nPuts a “cite this repository” button on GitHub\nHelps code archive tools fill out metadata correctly when you archive your repo\n\nCan include a “preferred citation” if you’d like people to cite a published paper in addition/instead\nCreate a CITATION.cff file with this helper"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#options-for-archiving",
    "href": "lessons/10-get-credit/slides.html#options-for-archiving",
    "title": "Sharing Code & Getting Credit",
    "section": "Options for archiving",
    "text": "Options for archiving\n\n\n\n\n\n\n\n\n\n\nService\nVersioned DOIs?\nFree?\nGitHub integration?\nNotes\n\n\n\n\nZenodo\nYes\nYes\nYes\nBacked by CERN, built with code and data in mind\n\n\nDryad\nYes\nNo, but some publishers cover cost\nNo\nIntended for data, not code. Partners with Zenodo\n\n\nFigshare\nYes\nYes\nYes\nCan’t choose your license\n\n\nUA ReDATA\nYes\nYes (for UA researchers)\nNo\nUniversity of Arizona Libraries\n\n\n\n\n\nMore detailed comparisons here"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#reproducible-computational-environments",
    "href": "lessons/10-get-credit/slides.html#reproducible-computational-environments",
    "title": "Sharing Code & Getting Credit",
    "section": "Reproducible computational environments",
    "text": "Reproducible computational environments\nCongrats! Your code is reproducible! But what about ….\n\nin 3 years when an R package is updated with breaking changes?\non a different operating system with different versions of system libraries?\n\nCapture the computational environment for ultimate reproducibility"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#reproducible-environments-with-renv",
    "href": "lessons/10-get-credit/slides.html#reproducible-environments-with-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Reproducible Environments With renv",
    "text": "Reproducible Environments With renv\n\nThe renv package helps create reproducible environments by recording all the packages used in your project\nDiscovers and records required packages and their versions in renv.lock\nEach project can have its own independent collection of R packages installed"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#using-renv",
    "href": "lessons/10-get-credit/slides.html#using-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Using renv",
    "text": "Using renv\n\n\n\n\n\n\nExercise\n\n\nInstall renv and activate it for a project with renv::init(). Inspect the files that were created.\n\n\n\n\nTo deactivate renv, run renv::deactivate(). To also remove all the files it created, run renv::deactivate(clean = TRUE) instead."
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#limitations-of-renv",
    "href": "lessons/10-get-credit/slides.html#limitations-of-renv",
    "title": "Sharing Code & Getting Credit",
    "section": "Limitations of renv",
    "text": "Limitations of renv\n\nOnly tracks R packages 1\nCan’t reproduce operating system or system libraries\nSometimes quite annoying to use (but it’s getting better!)\n\nrenv can also be set up to track Python dependencies"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#reproducible-everything-with-docker",
    "href": "lessons/10-get-credit/slides.html#reproducible-everything-with-docker",
    "title": "Sharing Code & Getting Credit",
    "section": "Reproducible Everything with Docker",
    "text": "Reproducible Everything with Docker\nDocker containers…\n\n\nAre isolated “virtual machines”\nRun Linux regardless of the host machine OS\nCan be built with specific versions of OS, system libraries, and R packages (using renv)\nCan be downloaded and run from the command line"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#making-a-docker-container",
    "href": "lessons/10-get-credit/slides.html#making-a-docker-container",
    "title": "Sharing Code & Getting Credit",
    "section": "Making a Docker Container",
    "text": "Making a Docker Container\nA Dockerfile holds instructions on what to install and what code to run. Actually creating a Docker container is beyond the scope of this workshop, but you can learn how!\n# Base image https://hub.docker.com/u/rocker/\nFROM rocker/r-base:latest\n\n## create directories\nRUN mkdir -p /01_data\nRUN mkdir -p /02_code\nRUN mkdir -p /03_output\n\n## copy files\nCOPY /02_code/install_packages.R /02_code/install_packages.R\nCOPY /02_code/myScript.R /02_code/myScript.R\n\n## install R-packages\nRUN Rscript /02_code/install_packages.R"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#hold-up-what-is-reproducibility-again",
    "href": "lessons/10-get-credit/slides.html#hold-up-what-is-reproducibility-again",
    "title": "Sharing Code & Getting Credit",
    "section": "Hold up, what is reproducibility again?",
    "text": "Hold up, what is reproducibility again?\nrenv and Docker improve the numerical reproducibility, but add extra barriers to actually running and understanding the code. If you use these tools:\n\nProvide instructions on how to run code in README\nProvide instructions on how to troubleshoot or disable renv if it’s giving folks trouble\nProvide code in a GitHub repo in addition to inside of a Docker container"
  },
  {
    "objectID": "lessons/10-get-credit/slides.html#references",
    "href": "lessons/10-get-credit/slides.html#references",
    "title": "Sharing Code & Getting Credit",
    "section": "References",
    "text": "References\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\nMaitner, Brian, Paul Santos-Andrade, Luna Lei, George Barbosa, Brad Boyle, Matiss Castorena, Brian Enquist, et al. 2023. “Code Sharing Increases Citations, but Remains Uncommon.” https://doi.org/10.21203/rs.3.rs-3222221/v1."
  },
  {
    "objectID": "lessons/3-git/slides.html#section",
    "href": "lessons/3-git/slides.html#section",
    "title": "Version Control With git",
    "section": "",
    "text": "Version Control\nSemi-automated system for tracking changes with unlimited “undo”"
  },
  {
    "objectID": "lessons/3-git/slides.html#why-learn-version-control",
    "href": "lessons/3-git/slides.html#why-learn-version-control",
    "title": "Version Control With git",
    "section": "Why Learn Version Control?",
    "text": "Why Learn Version Control?\n\nTrack development of research projects like a lab notebook\nKeep project in sync across computers including HPC\nShare and collaborate on projects in a sane way"
  },
  {
    "objectID": "lessons/3-git/slides.html#setting-up-git-once-per-machine",
    "href": "lessons/3-git/slides.html#setting-up-git-once-per-machine",
    "title": "Version Control With git",
    "section": "Setting up git (once per machine)",
    "text": "Setting up git (once per machine)\nWe installed git last week, so you should be ready to set it up!\n\n\nShell\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@arizona.edu\" \n# Use your GitHub associated email"
  },
  {
    "objectID": "lessons/3-git/slides.html#rstudio-new-project-wizard",
    "href": "lessons/3-git/slides.html#rstudio-new-project-wizard",
    "title": "Version Control With git",
    "section": "RStudio New Project Wizard",
    "text": "RStudio New Project Wizard\n\nBefore you create the directory…\nFile &gt; New R Project…"
  },
  {
    "objectID": "lessons/3-git/slides.html#rstudio-new-project-wizard-1",
    "href": "lessons/3-git/slides.html#rstudio-new-project-wizard-1",
    "title": "Version Control With git",
    "section": "RStudio New Project Wizard",
    "text": "RStudio New Project Wizard"
  },
  {
    "objectID": "lessons/3-git/slides.html#git-init",
    "href": "lessons/3-git/slides.html#git-init",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init\n\nCreate a new directory (or R project) on your computer"
  },
  {
    "objectID": "lessons/3-git/slides.html#git-init-1",
    "href": "lessons/3-git/slides.html#git-init-1",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init"
  },
  {
    "objectID": "lessons/3-git/slides.html#git-init-2",
    "href": "lessons/3-git/slides.html#git-init-2",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init\n\nNavigate to it on the command line\nRun git init from the command line"
  },
  {
    "objectID": "lessons/3-git/slides.html#git-init-3",
    "href": "lessons/3-git/slides.html#git-init-3",
    "title": "Version Control With git",
    "section": "git init",
    "text": "git init"
  },
  {
    "objectID": "lessons/3-git/slides.html#usethisuse_git",
    "href": "lessons/3-git/slides.html#usethisuse_git",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()\n\nCreate a new R Project"
  },
  {
    "objectID": "lessons/3-git/slides.html#usethisuse_git-1",
    "href": "lessons/3-git/slides.html#usethisuse_git-1",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()"
  },
  {
    "objectID": "lessons/3-git/slides.html#usethisuse_git-2",
    "href": "lessons/3-git/slides.html#usethisuse_git-2",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()\n\nOpen the R Project\nFrom inside the R project, run…"
  },
  {
    "objectID": "lessons/3-git/slides.html#usethisuse_git-3",
    "href": "lessons/3-git/slides.html#usethisuse_git-3",
    "title": "Version Control With git",
    "section": "usethis::use_git()",
    "text": "usethis::use_git()"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#review",
    "href": "lessons/5-github-collab/slides.html#review",
    "title": "Collaborate With GitHub",
    "section": "Review",
    "text": "Review\n\n\n\n\n\n\nWord Bank\n\n\nrepo | commit | remote | push | pull | add\n\n\n\n\n\nA collection of files tracked by git\nA snapshot of the state of a repository\ngit ___ is used to tell git to track a file\nFor example, a repo on GitHub\ngit ____ is used to synchronize changes on your computer with a remote"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#review-1",
    "href": "lessons/5-github-collab/slides.html#review-1",
    "title": "Collaborate With GitHub",
    "section": "Review",
    "text": "Review\nDid anyone add a repo to GitHub? What difficulties did you encounter?"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#collaborating-with-github",
    "href": "lessons/5-github-collab/slides.html#collaborating-with-github",
    "title": "Collaborate With GitHub",
    "section": "Collaborating with GitHub",
    "text": "Collaborating with GitHub\n\n\n\n\n\n\n\nA GitHub repo can be used to coordinate collaboration\nIf two people have permissions, both can push changes to the repo\nAsk for a volunteer and give them permission to push to a repo\n\n\nFigure 2 from (Bryan 2018)"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#example-repo",
    "href": "lessons/5-github-collab/slides.html#example-repo",
    "title": "Collaborate With GitHub",
    "section": "Example repo",
    "text": "Example repo\n\nEveryone practice cloning this example repo as a new RStudio project: \nNeed one volunteer to edit the README.md and practice commit + push"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#dealing-with-conflicts",
    "href": "lessons/5-github-collab/slides.html#dealing-with-conflicts",
    "title": "Collaborate With GitHub",
    "section": "Dealing with Conflicts",
    "text": "Dealing with Conflicts\n\nWhat happens when two people make conflicting edits to a file and push them?\nCreates a merge conflict"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#ok-try-git-pull",
    "href": "lessons/5-github-collab/slides.html#ok-try-git-pull",
    "title": "Collaborate With GitHub",
    "section": "Ok, try git pull",
    "text": "Ok, try git pull"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#merge-rebase-fast-forward",
    "href": "lessons/5-github-collab/slides.html#merge-rebase-fast-forward",
    "title": "Collaborate With GitHub",
    "section": "Merge, rebase, fast-forward??",
    "text": "Merge, rebase, fast-forward??\n\nThese are alternative ways to deal with conflicts—we won’t get into the deatils\nFor now, we recommend you stick with the “merge” option\n\n\nUse:\ngit config pull.rebase false\nOr, if you want to set this option for all future repos too\ngit config --global pull.rebase false"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#fixing-a-merge-conflict",
    "href": "lessons/5-github-collab/slides.html#fixing-a-merge-conflict",
    "title": "Collaborate With GitHub",
    "section": "Fixing a Merge Conflict",
    "text": "Fixing a Merge Conflict\n\n\nResolve the conflict however you want (i.e. keep one of the two sections)\nDelete all lines with &lt;&lt;&lt;&lt;&lt;&lt;&lt;, &gt;&gt;&gt;&gt;&gt;&gt;&gt;, or =======\nSave and commit\n\n\nLet’s have a round of applause for our volunteer!"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#avoid-merge-conflicts-by-working-on-branches",
    "href": "lessons/5-github-collab/slides.html#avoid-merge-conflicts-by-working-on-branches",
    "title": "Collaborate With GitHub",
    "section": "Avoid merge conflicts by working on branches",
    "text": "Avoid merge conflicts by working on branches\nEach person works on a “branch”—an independent series of commits that can be merged back into the “main” branch.\n\n\n\n\ngitGraph\n       commit\n       commit\n       branch person_1\n       commit\n       commit\n       commit\n       checkout main\n       branch person_2\n       commit\n       commit\n       checkout main\n       merge person_1\n       merge person_2\n       commit"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#working-on-a-branch",
    "href": "lessons/5-github-collab/slides.html#working-on-a-branch",
    "title": "Collaborate With GitHub",
    "section": "Working on a Branch",
    "text": "Working on a Branch\n\nMake a new branch with your name using RStudio’s Git pane\nCommit changes and push to your branch\nView changes on GitHub"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#pull-requests",
    "href": "lessons/5-github-collab/slides.html#pull-requests",
    "title": "Collaborate With GitHub",
    "section": "Pull Requests",
    "text": "Pull Requests\nA request to merge changes into the main branch\n\nNeed another volunteer to share screen and be guided through making a pull request\nThis time, everyone can follow along!"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#forks",
    "href": "lessons/5-github-collab/slides.html#forks",
    "title": "Collaborate With GitHub",
    "section": "Forks",
    "text": "Forks\n\n\nWhat if you don’t have permission to push to a GitHub repo but you want to contribute? Make a fork!"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#collaborating-with-forks",
    "href": "lessons/5-github-collab/slides.html#collaborating-with-forks",
    "title": "Collaborate With GitHub",
    "section": "Collaborating with Forks",
    "text": "Collaborating with Forks\nTo contribute to a repo you don’t have push permission for:\n\nFork the repo to your own GitHub\nClone the fork to your local computer\nMake commits (ideally on a branch)\nMake a pull request to the upstream repo\n\n\n\n\n\n\n\nExercise\n\n\nIn pairs, practice this workflow to make a PR to our example repo"
  },
  {
    "objectID": "lessons/5-github-collab/slides.html#references",
    "href": "lessons/5-github-collab/slides.html#references",
    "title": "Collaborate With GitHub",
    "section": "References",
    "text": "References\n\n\n\n\n\n\nReproduciblity & Data Science in R\n\n\n\nBryan, Jennifer. 2018. “Excuse Me, Do You Have a Moment to Talk about Version Control?” The American Statistician 72 (1): 2027. https://doi.org/10.1080/00031305.2017.1399928."
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#readme",
    "href": "lessons/9-markdown-quarto/slides.html#readme",
    "title": "Documentation & Literate Programming",
    "section": "README",
    "text": "README\nREADME.md is the landing page for your GitHub repo, and the first place to look for help understanding it.\n\n\nBrief project summary\nProject status (just an experiment, WIP, archived?)\nHow to give credit (e.g. if it is associated with a published paper)\nStructure of repo (which files do what?)\nInstructions on how to reproduce results"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#markdown",
    "href": "lessons/9-markdown-quarto/slides.html#markdown",
    "title": "Documentation & Literate Programming",
    "section": "Markdown",
    "text": "Markdown\nMarkdown is a “markup language” that let’s you write plain text to indicate formatting. For example:\n\n**bold text** becomes bold text\n~~strikethrough~~ becomes strikethrough\n$E = mc^2$ becomes \\(E = mc^2\\)\n[link](https://www.google.com) becomes link\n`code()` becomes code()\n\nCheck Help &gt; Markdown quick reference in RStudio"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#readme.md",
    "href": "lessons/9-markdown-quarto/slides.html#readme.md",
    "title": "Documentation & Literate Programming",
    "section": "README.md",
    "text": "README.md\n\n\n\n\n\n\nExercise\n\n\nEdit README.md using some of the markdown tips from the RStudio markdown quick reference"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#common-markdown-pitfalls",
    "href": "lessons/9-markdown-quarto/slides.html#common-markdown-pitfalls",
    "title": "Documentation & Literate Programming",
    "section": "Common markdown pitfalls",
    "text": "Common markdown pitfalls\nSpaces between elements matter! How would you fix each of these?\n###Heading 3\n###Heading 3\n\nColors:\n- red\n- green\nColors: - red - green\n\n\n1.Number one\n2.Number two\n1.Number one 2.Number two"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#common-markdown-pitfalls-1",
    "href": "lessons/9-markdown-quarto/slides.html#common-markdown-pitfalls-1",
    "title": "Documentation & Literate Programming",
    "section": "Common markdown pitfalls",
    "text": "Common markdown pitfalls\nSpaces within elements don’t matter!\nThis     sentence still  gets    rendered  correctly!\nThis sentence still gets rendered correctly!\nSingle line breaks don't separate paragraphs.\nSee?\n\nYou need two line breaks for that!\nSingle line breaks don’t separate paragraphs. See?\nYou need two line breaks for that!"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#what-is-quarto",
    "href": "lessons/9-markdown-quarto/slides.html#what-is-quarto",
    "title": "Documentation & Literate Programming",
    "section": "What is Quarto?",
    "text": "What is Quarto?\n“An open-source scientific and technical publishing system”\n\n\nMix markdown, code, and the output of code\nProduce beautifully formatted documents in a variety of formats (html, Word, pdf, etc.)\nData analysis notebook\nPresentations for collaborators\nReproducible manuscripts\n…and more!"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#how-does-quarto-work",
    "href": "lessons/9-markdown-quarto/slides.html#how-does-quarto-work",
    "title": "Documentation & Literate Programming",
    "section": "How does Quarto work?",
    "text": "How does Quarto work?\n\nCommand line tool, not an R package, but works well with RStudio\n\n\n\nknitr or jupyter are used to convert code chunks into markdown, pandoc converts markdown into output"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#anatomy-of-a-.qmd-file",
    "href": "lessons/9-markdown-quarto/slides.html#anatomy-of-a-.qmd-file",
    "title": "Documentation & Literate Programming",
    "section": "Anatomy of a .Qmd file",
    "text": "Anatomy of a .Qmd file\n\n\nmyreport.qmd\n\n---\ntitle: \"My Report\"\nauthor: \"Eric Scott\"\nformat: \n  html:\n    toc: true\n---\n\n```{r}\n#| label: load-packages\n#| include: false\n\nlibrary(tidyverse)\nlibrary(gapminder)\n```\n\n## Data\n\nMy data source is the [gapminder](https://www.gapminder.org/) dataset.\n\n```{r}\nhead(gapminder)\n```\n\n\nIf this looks familiar to RMarkdown users, that’s because Quarto was built on lessons learned from developing RMarkdown. It includes all the features of RMarkdown and more."
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#our-turn",
    "href": "lessons/9-markdown-quarto/slides.html#our-turn",
    "title": "Documentation & Literate Programming",
    "section": "Our turn",
    "text": "Our turn\n\nCreate a new Quarto Document\nPractice editing and rendering\nExplore the Visual editor mode\nAdd citations and cross-references"
  },
  {
    "objectID": "lessons/9-markdown-quarto/slides.html#learn-more",
    "href": "lessons/9-markdown-quarto/slides.html#learn-more",
    "title": "Documentation & Literate Programming",
    "section": "Learn more",
    "text": "Learn more\n\nGetting started tutorial\nQuarto for Academics talk\nFull Quarto guide and reference (searchable!)\n\n\n\n\nReproduciblity & Data Science in R"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Reproducibility & Data Science in R",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  }
]