{
  "hash": "123d04cb7a0dbb02fef341c21d9ef5b3",
  "result": {
    "markdown": "---\ntitle: \"Version Control With `git`\"\nsubtitle: \"Session 3\"\nformat: revealjs\nexecute: \n  echo: true\nengine: knitr\nchalkboard: true\nfooter: \"[Reproduciblity & Data Science in R](https://cct-datascience.github.io/repro-data-sci/)\"\n---\n\n\n# Review 1\n\nWhat stood out to you when (if) you diagrammed your file system?\n\n# Review 2 {.smaller}\n\n![](/lessons/2-shell/file-structure-example.png)\n\nIf your current working directory is `Users/kristinariemer/Dropbox/Documents`, what command could be used to change directory into the local Documents folder?\n\n# Learning objectives\n\n-   Understand the what and why of version control\n-   Set up git on your computer\n-   Create a git repository associated with an R project\n-   Use git to track and record changes to a git repository\n-   Use .gitignore to selectively exclude files from git.\n\n## \n\n::: columns\n::: {.column width=\"50%\"}\n[Version Control]{.r-fit-text}\n\nSemi-automated system for tracking changes with unlimited \"undo\"\n:::\n\n::: {.column width=\"50%\"}\n![](phd_final.jpg){fig-align=\"center\" width=\"449\"}\n:::\n:::\n\n## Why Learn Version Control?\n\n-   Track development of research projects like a lab notebook\n\n-   Keep project in sync across computers including HPC\n\n-   Share and collaborate on projects in a sane way\n\n## Setting up `git` (once per machine)\n\nWe installed git last week, so you should be ready to set it up!\n\n``` {.bash filename=\"Shell\"}\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"youremail@arizona.edu\" \n# Use your GitHub associated email\n```\n\n# Coding time\n\n`git config`\n\n# Coding time\n\nCreate an RStudio project and initialize it as a git repository.\n\nUse git status to check the state of the repo.\n\n# Coding time\n\nTrack modifications to a git repository.\n\n## Saving modifications: a two-step process\n\n![](git-simple.png)\n\n## Adding multiple files to same commit\n\n![](git-multiple.png)\n\n# Coding time\n\n`.gitignore`\n\n# Homework\n\n-   Create a [GitHub](https://github.com) account if you don't have one.\n-   Optional: Identify an exisitng folder on your computer and turn it into a git repository.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}