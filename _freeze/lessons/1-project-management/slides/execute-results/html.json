{
  "hash": "f67018b60844a5db5bc7535656eb1efd",
  "result": {
    "markdown": "---\ntitle: \"Reproducibility & Data Science in R\"\nsubtitle: \"Session 1\"\n# date: TODO\nformat: revealjs\nexecute: \n  echo: true\nengine: knitr\nchalkboard: true\nfooter: \"[Reproduciblity & Data Science in R](https://cct-datascience.github.io/repro-data-sci/)\"\n---\n\n\n## What is Reproducibility & Why?\n\n\n```{=html}\n<textarea id=\"freeform\" name=\"freeform\" rows=\"8\" cols=\"60\" style=\"font-size: 18pt\">\nReproducibility is...\n\n</textarea>\n```\n\n```{=html}\n<textarea rows=\"8\" cols=\"60\" style=\"font-size: 18pt\">\nI want my work to be reproducible because...\n\n</textarea>\n```\n\n## \n\n[![By The Turing Way Community](https://the-turing-way.netlify.app/_images/reproducible-matrix.jpg)](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions)\n\n## The Whole Picture\n\n::: callout-note\n## A (usually fiction) story:\n\nYou read a great paper and think \"I bet I could apply their analysis methods to my work!\" You click a DOI link in their Data Availability section that they definitely have.\nIt opens to a web page where you can download a folder with R code, data, and documentation about the code and data.\nThe page also has detailed information about how to cite the code and data.\nYou open the folder in R Studio and you are prompted to install all the packages you need to run the code.\nYou open the analysis code script and hit \"run\".\nAll the code runs perfectly with no errors, creating all the figures, tables, and statistics used in the paper.\nYou scroll through the well-formatted R code and understand from the authors' comments exactly what the code does and how to adapt it to your work.\n:::\n\n. . .\n\nWe want to help you make this story a reality for someone else!\n\n::: notes\nIncluding future you!\n:::\n\n## Syllabus & Workshop Materials\n\nWorkshop series website:\\\n<https://cct-datascience.github.io/repro-data-sci/>\n\n## Screen Setup {{< fa desktop >}} {{< fa laptop >}}\n\n-   Dual monitors will be *very* helpful\n-   Virtual desktops (\"Spaces\" in macOS) also helpful\n-   Let us know if you do not have access to a second monitor\n\n![](desk.jpg){fig-alt=\"Photo of a desk with a laptop on a laptop stand to the left and a larger monitor to the right in front of an external keyboard.  Laptop monitor has Zoom open and the larger monitor has RStudio open.\" fig-align=\"center\"}\n\n## Settings for Success\n\n::: columns\n::: {.column width=\"60%\"}\n![](rstudio-settings.png){fig-alt=\"image of RStudio global settings pane with the \\\"Workspace\\\" and \\\"History\\\" sections highlighted.  None of the boxes are checked and the dropdown for \\\"Save workspace to .RData on exit\\\" is set to \\\"never\\\"\" fig-align=\"left\"}\n:::\n\n::: {.column width=\"40%\"}\n::: incremental\n-   Fresh start ensures reproducibility\n\n-   Use Session \\> Restart R to check reproducibility\n\n-   If long-running code is a concern, there are better solutions\n:::\n:::\n:::\n\n## Project Management\n\n![](https://swcarpentry.github.io/r-novice-gapminder/fig/bad_layout.png)\n\n::: notes\nThere are many reasons why we should *ALWAYS* avoid this:\n\n1.  It is really hard to tell which version of your data is the original and which is the modified;\n2.  It gets really messy because it mixes files with various extensions together;\n3.  It probably takes you a lot of time to actually find things, and relate the correct figures to the exact code that has been used to generate it;\n\nA good project layout will ultimately make your life easier:\n\n-   It will help ensure the integrity of your data;\n-   It makes it simpler to share your code with someone else (a lab-mate, collaborator, or supervisor);\n-   It allows you to easily upload your code with your manuscript submission;\n-   It makes it easier to pick the project back up after a break.\n:::\n\n## Creating a Research Compendium with R\n\nLearning Objectives:\n\n1.  Use RStudio projects to create self-contained reproducible projects\n2.  Use best practices for organizing files in a project\n3.  Use relative file paths to improve portability of projects\n4.  Structure R scripts so they are easier to understand\n\n## Takeaways\n\n-   Structure files in self-contained projects or \"research compendia\"\n-   Put data in a separate folder and never edit raw data!\n-   Avoid `setwd()` and `getwd()`---use relative paths and RStudio projects instead\n-   Naming things well is difficult but worth spending time on\n-   Use some consistent style in your code and organize scripts in sections\n-   Split long scripts into multiples and use `source()` to run them if needed'\n\n## Homework (optional)\n\nRe-organize an existing project into a research compendium with separate folders for raw data, cleaned data, data wrangling scripts, analysis scripts, and outputs\n\nOR\n\nOrganize one of your R scripts with sections and apply a consistent coding style (e.g. with Code \\> Reformat Code or with the `styler` package)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}