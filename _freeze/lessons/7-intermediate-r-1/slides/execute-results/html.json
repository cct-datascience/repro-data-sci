{
  "hash": "c50f238762eccbde31ee6efea12b55f7",
  "result": {
    "markdown": "---\ntitle: \"Intermediate R: functions and control flow\"\nsubtitle: \"Session 7\"\nformat: revealjs\nexecute: \n  echo: true\nengine: knitr\nchalkboard: true\nfooter: \"[Reproduciblity & Data Science in R](https://cct-datascience.github.io/repro-data-sci/)\"\n---\n\n\n# Review\n\n# Warm-up: update working branch from upstream\n\n# Learning objectives\n\n-   Understand how functions and `ifelse` logic can improve code\n-   Write your own functions to automate procedures in R\n-   Write `ifelse` statements to orchestrate control flow in R\n-   Practice working collaboratively in GitHub\n\n# Part I: Functions\n\n# What are functions in R?\n\n-   We use pre-written functions constantly.\n-   Automated \"recipes\" for executing code\n-   Inputs (\"arguments\") and outputs\n\n# Why write our own functions?\n\n-   Avoid repetition (+ mistakes)\n-   Enhance portability + reproducibility\n\n# Coding time\n\nWriting a function\n\n# Coding time\n\nFunction scoping\n\n# Coding time\n\nArguments: defaults and naming\n\n# Part II: `ifelse`\n\n# `ifelse` logic\n\n-   What does an `if` statement do?\n\n# Applications in our work\n\n-   Can you think of an instance where you might want to use `ifelse` logic?\n\n# Conditionals in R\n\n-   `==` for \"is equal to\"\n-   `!=` for \"not equal to:\n-   `<`, `>` for less than/greater than\n-   `<=`, `>=` for less than or equal to/greater than or equal to\n-   `is.na()` for is it NA?\n-   `%in%` for, is this value in a vector of possibilities\n-   ...and more!\n\n# Coding time\n\nPractice with conditionals in R\n\n# Coding time\n\nBuilding if/else statements with conditionals\n\n# Coding time\n\nNesting conditionals\n\n# Coding time\n\nPractice committing changes and creating a PR.\n\n# Homework\n\n-   Identify a section of your code that could be turned into a function or benefit from conditionals. Try it!\n-   Begin thinking about a \"showcase project\".\n\n# Showcase projects\n\n-   An opportunity to apply workshop skills to your own work.\n-   You could apply different parts to different projects, or more integratively to one single project.\n-   Optional, but encouraged!\n\n# Some inspirations\n\n-   Turn the project folder for one of your current research project into a git/GitHub repo and/or R project\n-   Modify an R script to use functions, conditionals, or best-practices for code formatting\n-   Improve directory organization for project or your entire computer!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}